{"bdb": {"vars": {"CO_ASYNC_GENERATOR": 512, "CO_COROUTINE": 128, "CO_GENERATOR": 32, "GENERATOR_AND_COROUTINE_FLAGS": 672, "__cached__": "/nix/store/wlhmpa2qk786ddp05ahv3jjlds6d44a5-python3-3.8.12/lib/python3.8/__pycache__/bdb.cpython-38.pyc", "__doc__": "Debugger basics", "__file__": "/nix/store/wlhmpa2qk786ddp05ahv3jjlds6d44a5-python3-3.8.12/lib/python3.8/bdb.py", "__name__": "bdb", "__package__": ""}, "funcs": {"bar": {"parameters": 1}, "checkfuncname": {"parameters": 2}, "effective": {"parameters": 3}, "foo": {"parameters": 1}, "set_trace": {"parameters": 0}, "test": {"parameters": 0}}}, "Bdb": {"vars": {"__doc__": "Generic Python debugger base class.\n\n    This class takes care of details of the trace facility;\n    a derived class should implement user interaction.\n    The standard debugger class (pdb.Pdb) is an example.\n\n    The optional skip argument must be an iterable of glob-style\n    module name patterns.  The debugger will not step into frames\n    that originate in a module that matches one of these patterns.\n    Whether a frame is considered to originate in a certain module\n    is determined by the __name__ in the frame globals.\n    ", "__module__": "bdb"}, "funcs": {"__delattr__": {"parameters": 2}, "__dir__": {"parameters": 1}, "__eq__": {"parameters": 2}, "__format__": {"parameters": 2}, "__ge__": {"parameters": 2}, "__getattribute__": {"parameters": 2}, "__gt__": {"parameters": 2}, "__hash__": {"parameters": 1}, "__init__": {"parameters": 2}, "__le__": {"parameters": 2}, "__lt__": {"parameters": 2}, "__ne__": {"parameters": 2}, "__new__": {"parameters": 2}, "__reduce__": {"parameters": 1}, "__reduce_ex__": {"parameters": 2}, "__repr__": {"parameters": 1}, "__setattr__": {"parameters": 3}, "__sizeof__": {"parameters": 1}, "__str__": {"parameters": 1}, "_prune_breaks": {"parameters": 3}, "_set_stopinfo": {"parameters": 4}, "break_anywhere": {"parameters": 2}, "break_here": {"parameters": 2}, "canonic": {"parameters": 2}, "clear_all_breaks": {"parameters": 1}, "clear_all_file_breaks": {"parameters": 2}, "clear_bpbynumber": {"parameters": 2}, "clear_break": {"parameters": 3}, "dispatch_call": {"parameters": 3}, "dispatch_exception": {"parameters": 3}, "dispatch_line": {"parameters": 2}, "dispatch_return": {"parameters": 3}, "do_clear": {"parameters": 2}, "format_stack_entry": {"parameters": 3}, "get_all_breaks": {"parameters": 1}, "get_bpbynumber": {"parameters": 2}, "get_break": {"parameters": 3}, "get_breaks": {"parameters": 3}, "get_file_breaks": {"parameters": 2}, "get_stack": {"parameters": 3}, "is_skipped_module": {"parameters": 2}, "reset": {"parameters": 1}, "run": {"parameters": 4}, "runcall": {"parameters": 4}, "runctx": {"parameters": 4}, "runeval": {"parameters": 4}, "set_break": {"parameters": 6}, "set_continue": {"parameters": 1}, "set_next": {"parameters": 2}, "set_quit": {"parameters": 1}, "set_return": {"parameters": 2}, "set_step": {"parameters": 1}, "set_trace": {"parameters": 2}, "set_until": {"parameters": 3}, "stop_here": {"parameters": 2}, "trace_dispatch": {"parameters": 4}, "user_call": {"parameters": 3}, "user_exception": {"parameters": 3}, "user_line": {"parameters": 2}, "user_return": {"parameters": 3}}}, "BdbQuit": {"vars": {"__doc__": "Exception to give up completely.", "__module__": "bdb"}, "funcs": {"__delattr__": {"parameters": 2}, "__dir__": {"parameters": 1}, "__eq__": {"parameters": 2}, "__format__": {"parameters": 2}, "__ge__": {"parameters": 2}, "__getattribute__": {"parameters": 2}, "__gt__": {"parameters": 2}, "__hash__": {"parameters": 1}, "__init__": {"parameters": 3}, "__le__": {"parameters": 2}, "__lt__": {"parameters": 2}, "__ne__": {"parameters": 2}, "__new__": {"parameters": 2}, "__reduce_ex__": {"parameters": 2}, "__repr__": {"parameters": 1}, "__setattr__": {"parameters": 3}, "__sizeof__": {"parameters": 1}, "__str__": {"parameters": 1}}}, "Breakpoint": {"vars": {"__doc__": "Breakpoint class.\n\n    Implements temporary breakpoints, ignore counts, disabling and\n    (re)-enabling, and conditionals.\n\n    Breakpoints are indexed by number through bpbynumber and by\n    the (file, line) tuple using bplist.  The former points to a\n    single instance of class Breakpoint.  The latter points to a\n    list of such instances since there may be more than one\n    breakpoint per line.\n\n    When creating a breakpoint, its associated filename should be\n    in canonical form.  If funcname is defined, a breakpoint hit will be\n    counted when the first line of that function is executed.  A\n    conditional breakpoint always counts a hit.\n    ", "__module__": "bdb", "next": 1}, "funcs": {"__delattr__": {"parameters": 2}, "__dir__": {"parameters": 1}, "__eq__": {"parameters": 2}, "__format__": {"parameters": 2}, "__ge__": {"parameters": 2}, "__getattribute__": {"parameters": 2}, "__gt__": {"parameters": 2}, "__hash__": {"parameters": 1}, "__init__": {"parameters": 6}, "__le__": {"parameters": 2}, "__lt__": {"parameters": 2}, "__ne__": {"parameters": 2}, "__new__": {"parameters": 2}, "__reduce__": {"parameters": 1}, "__reduce_ex__": {"parameters": 2}, "__repr__": {"parameters": 1}, "__setattr__": {"parameters": 3}, "__sizeof__": {"parameters": 1}, "__str__": {"parameters": 1}, "bpformat": {"parameters": 1}, "bpprint": {"parameters": 2}, "deleteMe": {"parameters": 1}, "disable": {"parameters": 1}, "enable": {"parameters": 1}}}, "Tdb": {"vars": {"__module__": "bdb"}, "funcs": {"__delattr__": {"parameters": 2}, "__dir__": {"parameters": 1}, "__eq__": {"parameters": 2}, "__format__": {"parameters": 2}, "__ge__": {"parameters": 2}, "__getattribute__": {"parameters": 2}, "__gt__": {"parameters": 2}, "__hash__": {"parameters": 1}, "__init__": {"parameters": 2}, "__le__": {"parameters": 2}, "__lt__": {"parameters": 2}, "__ne__": {"parameters": 2}, "__new__": {"parameters": 2}, "__reduce__": {"parameters": 1}, "__reduce_ex__": {"parameters": 2}, "__repr__": {"parameters": 1}, "__setattr__": {"parameters": 3}, "__sizeof__": {"parameters": 1}, "__str__": {"parameters": 1}, "_prune_breaks": {"parameters": 3}, "_set_stopinfo": {"parameters": 4}, "break_anywhere": {"parameters": 2}, "break_here": {"parameters": 2}, "canonic": {"parameters": 2}, "clear_all_breaks": {"parameters": 1}, "clear_all_file_breaks": {"parameters": 2}, "clear_bpbynumber": {"parameters": 2}, "clear_break": {"parameters": 3}, "dispatch_call": {"parameters": 3}, "dispatch_exception": {"parameters": 3}, "dispatch_line": {"parameters": 2}, "dispatch_return": {"parameters": 3}, "do_clear": {"parameters": 2}, "format_stack_entry": {"parameters": 3}, "get_all_breaks": {"parameters": 1}, "get_bpbynumber": {"parameters": 2}, "get_break": {"parameters": 3}, "get_breaks": {"parameters": 3}, "get_file_breaks": {"parameters": 2}, "get_stack": {"parameters": 3}, "is_skipped_module": {"parameters": 2}, "reset": {"parameters": 1}, "run": {"parameters": 4}, "runcall": {"parameters": 4}, "runctx": {"parameters": 4}, "runeval": {"parameters": 4}, "set_break": {"parameters": 6}, "set_continue": {"parameters": 1}, "set_next": {"parameters": 2}, "set_quit": {"parameters": 1}, "set_return": {"parameters": 2}, "set_step": {"parameters": 1}, "set_trace": {"parameters": 2}, "set_until": {"parameters": 3}, "stop_here": {"parameters": 2}, "trace_dispatch": {"parameters": 4}, "user_call": {"parameters": 3}, "user_exception": {"parameters": 3}, "user_line": {"parameters": 2}, "user_return": {"parameters": 3}}}}
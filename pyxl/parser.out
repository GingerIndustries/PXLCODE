Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELLIPSIS
    OMG
    OMGWTF
    TROOF
    WTF

Grammar

Rule 0     S' -> program
Rule 1     program -> HAI FLOAT NEWLINE statements KTHXBYE
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> command NEWLINE
Rule 5     statement -> command COMMA
Rule 6     command -> empty
Rule 7     command -> expr
Rule 8     command -> call
Rule 9     command -> cast
Rule 10    command -> decl
Rule 11    command -> assign_bukkit
Rule 12    command -> assign
Rule 13    command -> if_else
Rule 14    command -> function
Rule 15    command -> return
Rule 16    command -> loop
Rule 17    loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
Rule 18    operation -> UPPIN
Rule 19    operation -> NERFIN
Rule 20    condition -> TIL
Rule 21    condition -> WILE
Rule 22    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
Rule 23    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
Rule 24    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
Rule 25    elifs -> elifs elif
Rule 26    elifs -> elif
Rule 27    elif -> MEBBE expr NEWLINE statements
Rule 28    decl -> I HAS A variable
Rule 29    decl -> I HAS A variable ITZ expr
Rule 30    decl -> I HAS A variable ITZ A type
Rule 31    assign_bukkit -> variable HAS A variable ITZ expr
Rule 32    assign -> variable R expr
Rule 33    expr -> variable APOSTROPHE_Z variable
Rule 34    cast -> variable IS NOW A type
Rule 35    cast -> variable R MAEK variable A type
Rule 36    cast -> variable R MAEK variable type
Rule 37    args -> args expr
Rule 38    args -> expr
Rule 39    sep_args -> sep_args AN expr
Rule 40    sep_args -> expr
Rule 41    sep_yr_args -> sep_yr_args AN YR expr
Rule 42    sep_yr_args -> expr
Rule 43    function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
Rule 44    function -> HOW IZ I ID NEWLINE statements IF U SAY SO
Rule 45    function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
Rule 46    function -> HOW IZ variable ID NEWLINE statements IF U SAY SO
Rule 47    expr -> I IZ ID YR sep_yr_args MKAY
Rule 48    expr -> I IZ ID
Rule 49    expr -> variable IZ ID YR sep_yr_args MKAY
Rule 50    expr -> variable IZ ID
Rule 51    return -> FOUND YR expr
Rule 52    return -> GTFO
Rule 53    type -> YARN
Rule 54    type -> NUMBR
Rule 55    type -> NUMBAR
Rule 56    type -> NOOB
Rule 57    type -> BUKKIT
Rule 58    value -> STRING
Rule 59    value -> FLOAT
Rule 60    value -> INTEGER
Rule 61    value -> WIN
Rule 62    value -> FAIL
Rule 63    value -> DICT
Rule 64    call -> VISIBLE args
Rule 65    call -> VISIBLE args EXCLAMATION
Rule 66    call -> GIMMEH variable
Rule 67    expr -> SIZE OF expr
Rule 68    expr -> ABSLUT OF expr
Rule 69    expr -> value
Rule 70    expr -> variable
Rule 71    expr -> SUM OF expr AN expr
Rule 72    expr -> DIFF OF expr AN expr
Rule 73    expr -> PRODUKT OF expr AN expr
Rule 74    expr -> QUOSHUNT OF expr AN expr
Rule 75    expr -> MOD OF expr AN expr
Rule 76    expr -> BIGGR OF expr AN expr
Rule 77    expr -> SMALLR OF expr AN expr
Rule 78    expr -> BOTH OF expr AN expr
Rule 79    expr -> EITHER OF expr AN expr
Rule 80    expr -> WON OF expr AN expr
Rule 81    expr -> NOT expr
Rule 82    expr -> ALL OF sep_args MKAY
Rule 83    expr -> ANY OF sep_args MKAY
Rule 84    expr -> ALL OF args MKAY
Rule 85    expr -> ANY OF args MKAY
Rule 86    expr -> BOTH SAEM expr AN expr
Rule 87    expr -> DIFFRINT expr AN expr
Rule 88    expr -> SMOOSH sep_args MKAY
Rule 89    expr -> SMOOSH args MKAY
Rule 90    expr -> MAEK expr A type
Rule 91    expr -> MAEK expr type
Rule 92    variable -> ID
Rule 93    variable -> IT
Rule 94    program -> error
Rule 95    empty -> <empty>

Terminals, with rules where they appear

A                    : 28 29 30 30 31 34 35 90
ABSLUT               : 68
ALL                  : 82 84
AN                   : 39 41 71 72 73 74 75 76 77 78 79 80 86 87
ANY                  : 83 85
APOSTROPHE_Z         : 33
BIGGR                : 76
BOTH                 : 78 86
BUKKIT               : 57
COMMA                : 5
DICT                 : 63
DIFF                 : 72
DIFFRINT             : 87
EITHER               : 79
ELLIPSIS             : 
EXCLAMATION          : 65
FAIL                 : 62
FLOAT                : 1 59
FOUND                : 51
GIMMEH               : 66
GTFO                 : 52
HAI                  : 1
HAS                  : 28 29 30 31
HOW                  : 43 44 45 46
I                    : 28 29 30 43 44 47 48
ID                   : 43 44 45 46 47 48 49 50 92
IF                   : 43 44 45 46
IM                   : 17 17
IN                   : 17
INTEGER              : 60
IS                   : 34
IT                   : 93
ITZ                  : 29 30 31
IZ                   : 43 44 45 46 47 48 49 50
KTHXBYE              : 1
MAEK                 : 35 36 90 91
MEBBE                : 27
MKAY                 : 47 49 82 83 84 85 88 89
MOD                  : 75
NERFIN               : 19
NEWLINE              : 1 4 17 22 22 22 23 23 24 24 24 27 43 44 45 46
NO                   : 22 24
NOOB                 : 56
NOT                  : 81
NOW                  : 34
NUMBAR               : 55
NUMBR                : 54
O                    : 22 23 24
OF                   : 67 68 71 72 73 74 75 76 77 78 79 80 82 83 84 85
OIC                  : 22 23 24
OMG                  : 
OMGWTF               : 
OUTTA                : 17
PRODUKT              : 73
QUESTION             : 22 23 24
QUOSHUNT             : 74
R                    : 32 35 36
RLY                  : 22 22 23 23 24 24
SAEM                 : 86
SAY                  : 43 44 45 46
SIZE                 : 67
SMALLR               : 77
SMOOSH               : 88 89
SO                   : 43 44 45 46
STRING               : 58
SUM                  : 71
TIL                  : 20
TROOF                : 
U                    : 43 44 45 46
UPPIN                : 18
VISIBLE              : 64 65
WAI                  : 22 24
WILE                 : 21
WIN                  : 61
WON                  : 80
WTF                  : 
YA                   : 22 23 24
YARN                 : 53
YR                   : 17 17 17 41 43 45 47 49 51
error                : 94

Nonterminals, with rules where they appear

args                 : 37 64 65 84 85 89
assign               : 12
assign_bukkit        : 11
call                 : 8
cast                 : 9
command              : 4 5
condition            : 17
decl                 : 10
elif                 : 25 26
elifs                : 24 25
empty                : 6
expr                 : 7 17 27 29 31 32 37 38 39 40 41 42 51 67 68 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 86 86 87 87 90 91
function             : 14
if_else              : 13
loop                 : 16
operation            : 17
program              : 0
return               : 15
sep_args             : 39 82 83 88
sep_yr_args          : 41 43 45 47 49
statement            : 2 3
statements           : 1 2 17 22 22 23 24 24 27 43 44 45 46
type                 : 30 34 35 36 90 91
value                : 69
variable             : 17 17 17 28 29 30 31 31 32 33 33 34 35 35 36 36 45 46 49 50 66 70

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . HAI FLOAT NEWLINE statements KTHXBYE
    (94) program -> . error

    HAI             shift and go to state 2
    error           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> HAI . FLOAT NEWLINE statements KTHXBYE

    FLOAT           shift and go to state 4


state 3

    (94) program -> error .

    $end            reduce using rule 94 (program -> error .)


state 4

    (1) program -> HAI FLOAT . NEWLINE statements KTHXBYE

    NEWLINE         shift and go to state 5


state 5

    (1) program -> HAI FLOAT NEWLINE . statements KTHXBYE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 7
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 6

    (59) value -> FLOAT .

    NEWLINE         reduce using rule 59 (value -> FLOAT .)
    COMMA           reduce using rule 59 (value -> FLOAT .)
    AN              reduce using rule 59 (value -> FLOAT .)
    MKAY            reduce using rule 59 (value -> FLOAT .)
    I               reduce using rule 59 (value -> FLOAT .)
    SIZE            reduce using rule 59 (value -> FLOAT .)
    ABSLUT          reduce using rule 59 (value -> FLOAT .)
    SUM             reduce using rule 59 (value -> FLOAT .)
    DIFF            reduce using rule 59 (value -> FLOAT .)
    PRODUKT         reduce using rule 59 (value -> FLOAT .)
    QUOSHUNT        reduce using rule 59 (value -> FLOAT .)
    MOD             reduce using rule 59 (value -> FLOAT .)
    BIGGR           reduce using rule 59 (value -> FLOAT .)
    SMALLR          reduce using rule 59 (value -> FLOAT .)
    BOTH            reduce using rule 59 (value -> FLOAT .)
    EITHER          reduce using rule 59 (value -> FLOAT .)
    WON             reduce using rule 59 (value -> FLOAT .)
    NOT             reduce using rule 59 (value -> FLOAT .)
    ALL             reduce using rule 59 (value -> FLOAT .)
    ANY             reduce using rule 59 (value -> FLOAT .)
    DIFFRINT        reduce using rule 59 (value -> FLOAT .)
    SMOOSH          reduce using rule 59 (value -> FLOAT .)
    MAEK            reduce using rule 59 (value -> FLOAT .)
    ID              reduce using rule 59 (value -> FLOAT .)
    IT              reduce using rule 59 (value -> FLOAT .)
    STRING          reduce using rule 59 (value -> FLOAT .)
    FLOAT           reduce using rule 59 (value -> FLOAT .)
    INTEGER         reduce using rule 59 (value -> FLOAT .)
    WIN             reduce using rule 59 (value -> FLOAT .)
    FAIL            reduce using rule 59 (value -> FLOAT .)
    DICT            reduce using rule 59 (value -> FLOAT .)
    A               reduce using rule 59 (value -> FLOAT .)
    YARN            reduce using rule 59 (value -> FLOAT .)
    NUMBR           reduce using rule 59 (value -> FLOAT .)
    NUMBAR          reduce using rule 59 (value -> FLOAT .)
    NOOB            reduce using rule 59 (value -> FLOAT .)
    BUKKIT          reduce using rule 59 (value -> FLOAT .)
    EXCLAMATION     reduce using rule 59 (value -> FLOAT .)


state 7

    (1) program -> HAI FLOAT NEWLINE statements . KTHXBYE
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    KTHXBYE         shift and go to state 56
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 8

    (3) statements -> statement .

    KTHXBYE         reduce using rule 3 (statements -> statement .)
    I               reduce using rule 3 (statements -> statement .)
    SIZE            reduce using rule 3 (statements -> statement .)
    ABSLUT          reduce using rule 3 (statements -> statement .)
    SUM             reduce using rule 3 (statements -> statement .)
    DIFF            reduce using rule 3 (statements -> statement .)
    PRODUKT         reduce using rule 3 (statements -> statement .)
    QUOSHUNT        reduce using rule 3 (statements -> statement .)
    MOD             reduce using rule 3 (statements -> statement .)
    BIGGR           reduce using rule 3 (statements -> statement .)
    SMALLR          reduce using rule 3 (statements -> statement .)
    BOTH            reduce using rule 3 (statements -> statement .)
    EITHER          reduce using rule 3 (statements -> statement .)
    WON             reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    ALL             reduce using rule 3 (statements -> statement .)
    ANY             reduce using rule 3 (statements -> statement .)
    DIFFRINT        reduce using rule 3 (statements -> statement .)
    SMOOSH          reduce using rule 3 (statements -> statement .)
    MAEK            reduce using rule 3 (statements -> statement .)
    VISIBLE         reduce using rule 3 (statements -> statement .)
    GIMMEH          reduce using rule 3 (statements -> statement .)
    O               reduce using rule 3 (statements -> statement .)
    HOW             reduce using rule 3 (statements -> statement .)
    FOUND           reduce using rule 3 (statements -> statement .)
    GTFO            reduce using rule 3 (statements -> statement .)
    IM              reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    IT              reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    INTEGER         reduce using rule 3 (statements -> statement .)
    WIN             reduce using rule 3 (statements -> statement .)
    FAIL            reduce using rule 3 (statements -> statement .)
    DICT            reduce using rule 3 (statements -> statement .)
    NEWLINE         reduce using rule 3 (statements -> statement .)
    COMMA           reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    NO              reduce using rule 3 (statements -> statement .)
    OIC             reduce using rule 3 (statements -> statement .)
    MEBBE           reduce using rule 3 (statements -> statement .)


state 9

    (4) statement -> command . NEWLINE
    (5) statement -> command . COMMA

    NEWLINE         shift and go to state 58
    COMMA           shift and go to state 59


state 10

    (6) command -> empty .

    NEWLINE         reduce using rule 6 (command -> empty .)
    COMMA           reduce using rule 6 (command -> empty .)


state 11

    (7) command -> expr .

    NEWLINE         reduce using rule 7 (command -> expr .)
    COMMA           reduce using rule 7 (command -> expr .)


state 12

    (8) command -> call .

    NEWLINE         reduce using rule 8 (command -> call .)
    COMMA           reduce using rule 8 (command -> call .)


state 13

    (9) command -> cast .

    NEWLINE         reduce using rule 9 (command -> cast .)
    COMMA           reduce using rule 9 (command -> cast .)


state 14

    (10) command -> decl .

    NEWLINE         reduce using rule 10 (command -> decl .)
    COMMA           reduce using rule 10 (command -> decl .)


state 15

    (11) command -> assign_bukkit .

    NEWLINE         reduce using rule 11 (command -> assign_bukkit .)
    COMMA           reduce using rule 11 (command -> assign_bukkit .)


state 16

    (12) command -> assign .

    NEWLINE         reduce using rule 12 (command -> assign .)
    COMMA           reduce using rule 12 (command -> assign .)


state 17

    (13) command -> if_else .

    NEWLINE         reduce using rule 13 (command -> if_else .)
    COMMA           reduce using rule 13 (command -> if_else .)


state 18

    (14) command -> function .

    NEWLINE         reduce using rule 14 (command -> function .)
    COMMA           reduce using rule 14 (command -> function .)


state 19

    (15) command -> return .

    NEWLINE         reduce using rule 15 (command -> return .)
    COMMA           reduce using rule 15 (command -> return .)


state 20

    (16) command -> loop .

    NEWLINE         reduce using rule 16 (command -> loop .)
    COMMA           reduce using rule 16 (command -> loop .)


state 21

    (33) expr -> variable . APOSTROPHE_Z variable
    (49) expr -> variable . IZ ID YR sep_yr_args MKAY
    (50) expr -> variable . IZ ID
    (70) expr -> variable .
    (34) cast -> variable . IS NOW A type
    (35) cast -> variable . R MAEK variable A type
    (36) cast -> variable . R MAEK variable type
    (31) assign_bukkit -> variable . HAS A variable ITZ expr
    (32) assign -> variable . R expr

    APOSTROPHE_Z    shift and go to state 60
    IZ              shift and go to state 61
    NEWLINE         reduce using rule 70 (expr -> variable .)
    COMMA           reduce using rule 70 (expr -> variable .)
    IS              shift and go to state 62
    R               shift and go to state 63
    HAS             shift and go to state 64


state 22

    (47) expr -> I . IZ ID YR sep_yr_args MKAY
    (48) expr -> I . IZ ID
    (28) decl -> I . HAS A variable
    (29) decl -> I . HAS A variable ITZ expr
    (30) decl -> I . HAS A variable ITZ A type

    IZ              shift and go to state 65
    HAS             shift and go to state 66


state 23

    (92) variable -> ID .

    APOSTROPHE_Z    reduce using rule 92 (variable -> ID .)
    IZ              reduce using rule 92 (variable -> ID .)
    IS              reduce using rule 92 (variable -> ID .)
    R               reduce using rule 92 (variable -> ID .)
    HAS             reduce using rule 92 (variable -> ID .)
    NEWLINE         reduce using rule 92 (variable -> ID .)
    COMMA           reduce using rule 92 (variable -> ID .)
    AN              reduce using rule 92 (variable -> ID .)
    MKAY            reduce using rule 92 (variable -> ID .)
    I               reduce using rule 92 (variable -> ID .)
    SIZE            reduce using rule 92 (variable -> ID .)
    ABSLUT          reduce using rule 92 (variable -> ID .)
    SUM             reduce using rule 92 (variable -> ID .)
    DIFF            reduce using rule 92 (variable -> ID .)
    PRODUKT         reduce using rule 92 (variable -> ID .)
    QUOSHUNT        reduce using rule 92 (variable -> ID .)
    MOD             reduce using rule 92 (variable -> ID .)
    BIGGR           reduce using rule 92 (variable -> ID .)
    SMALLR          reduce using rule 92 (variable -> ID .)
    BOTH            reduce using rule 92 (variable -> ID .)
    EITHER          reduce using rule 92 (variable -> ID .)
    WON             reduce using rule 92 (variable -> ID .)
    NOT             reduce using rule 92 (variable -> ID .)
    ALL             reduce using rule 92 (variable -> ID .)
    ANY             reduce using rule 92 (variable -> ID .)
    DIFFRINT        reduce using rule 92 (variable -> ID .)
    SMOOSH          reduce using rule 92 (variable -> ID .)
    MAEK            reduce using rule 92 (variable -> ID .)
    ID              reduce using rule 92 (variable -> ID .)
    IT              reduce using rule 92 (variable -> ID .)
    STRING          reduce using rule 92 (variable -> ID .)
    FLOAT           reduce using rule 92 (variable -> ID .)
    INTEGER         reduce using rule 92 (variable -> ID .)
    WIN             reduce using rule 92 (variable -> ID .)
    FAIL            reduce using rule 92 (variable -> ID .)
    DICT            reduce using rule 92 (variable -> ID .)
    A               reduce using rule 92 (variable -> ID .)
    YARN            reduce using rule 92 (variable -> ID .)
    NUMBR           reduce using rule 92 (variable -> ID .)
    NUMBAR          reduce using rule 92 (variable -> ID .)
    NOOB            reduce using rule 92 (variable -> ID .)
    BUKKIT          reduce using rule 92 (variable -> ID .)
    EXCLAMATION     reduce using rule 92 (variable -> ID .)
    ITZ             reduce using rule 92 (variable -> ID .)
    UPPIN           reduce using rule 92 (variable -> ID .)
    NERFIN          reduce using rule 92 (variable -> ID .)
    TIL             reduce using rule 92 (variable -> ID .)
    WILE            reduce using rule 92 (variable -> ID .)


state 24

    (67) expr -> SIZE . OF expr

    OF              shift and go to state 67


state 25

    (68) expr -> ABSLUT . OF expr

    OF              shift and go to state 68


state 26

    (69) expr -> value .

    NEWLINE         reduce using rule 69 (expr -> value .)
    COMMA           reduce using rule 69 (expr -> value .)
    AN              reduce using rule 69 (expr -> value .)
    MKAY            reduce using rule 69 (expr -> value .)
    I               reduce using rule 69 (expr -> value .)
    SIZE            reduce using rule 69 (expr -> value .)
    ABSLUT          reduce using rule 69 (expr -> value .)
    SUM             reduce using rule 69 (expr -> value .)
    DIFF            reduce using rule 69 (expr -> value .)
    PRODUKT         reduce using rule 69 (expr -> value .)
    QUOSHUNT        reduce using rule 69 (expr -> value .)
    MOD             reduce using rule 69 (expr -> value .)
    BIGGR           reduce using rule 69 (expr -> value .)
    SMALLR          reduce using rule 69 (expr -> value .)
    BOTH            reduce using rule 69 (expr -> value .)
    EITHER          reduce using rule 69 (expr -> value .)
    WON             reduce using rule 69 (expr -> value .)
    NOT             reduce using rule 69 (expr -> value .)
    ALL             reduce using rule 69 (expr -> value .)
    ANY             reduce using rule 69 (expr -> value .)
    DIFFRINT        reduce using rule 69 (expr -> value .)
    SMOOSH          reduce using rule 69 (expr -> value .)
    MAEK            reduce using rule 69 (expr -> value .)
    ID              reduce using rule 69 (expr -> value .)
    IT              reduce using rule 69 (expr -> value .)
    STRING          reduce using rule 69 (expr -> value .)
    FLOAT           reduce using rule 69 (expr -> value .)
    INTEGER         reduce using rule 69 (expr -> value .)
    WIN             reduce using rule 69 (expr -> value .)
    FAIL            reduce using rule 69 (expr -> value .)
    DICT            reduce using rule 69 (expr -> value .)
    A               reduce using rule 69 (expr -> value .)
    YARN            reduce using rule 69 (expr -> value .)
    NUMBR           reduce using rule 69 (expr -> value .)
    NUMBAR          reduce using rule 69 (expr -> value .)
    NOOB            reduce using rule 69 (expr -> value .)
    BUKKIT          reduce using rule 69 (expr -> value .)
    EXCLAMATION     reduce using rule 69 (expr -> value .)


state 27

    (71) expr -> SUM . OF expr AN expr

    OF              shift and go to state 69


state 28

    (72) expr -> DIFF . OF expr AN expr

    OF              shift and go to state 70


state 29

    (73) expr -> PRODUKT . OF expr AN expr

    OF              shift and go to state 71


state 30

    (74) expr -> QUOSHUNT . OF expr AN expr

    OF              shift and go to state 72


state 31

    (75) expr -> MOD . OF expr AN expr

    OF              shift and go to state 73


state 32

    (76) expr -> BIGGR . OF expr AN expr

    OF              shift and go to state 74


state 33

    (77) expr -> SMALLR . OF expr AN expr

    OF              shift and go to state 75


state 34

    (78) expr -> BOTH . OF expr AN expr
    (86) expr -> BOTH . SAEM expr AN expr

    OF              shift and go to state 76
    SAEM            shift and go to state 77


state 35

    (79) expr -> EITHER . OF expr AN expr

    OF              shift and go to state 78


state 36

    (80) expr -> WON . OF expr AN expr

    OF              shift and go to state 79


state 37

    (81) expr -> NOT . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 80
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 38

    (82) expr -> ALL . OF sep_args MKAY
    (84) expr -> ALL . OF args MKAY

    OF              shift and go to state 83


state 39

    (83) expr -> ANY . OF sep_args MKAY
    (85) expr -> ANY . OF args MKAY

    OF              shift and go to state 84


state 40

    (87) expr -> DIFFRINT . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 85
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 41

    (88) expr -> SMOOSH . sep_args MKAY
    (89) expr -> SMOOSH . args MKAY
    (39) sep_args -> . sep_args AN expr
    (40) sep_args -> . expr
    (37) args -> . args expr
    (38) args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    sep_args                       shift and go to state 86
    args                           shift and go to state 87
    expr                           shift and go to state 88
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 42

    (90) expr -> MAEK . expr A type
    (91) expr -> MAEK . expr type
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 89
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 43

    (64) call -> VISIBLE . args
    (65) call -> VISIBLE . args EXCLAMATION
    (37) args -> . args expr
    (38) args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    args                           shift and go to state 90
    expr                           shift and go to state 91
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 44

    (66) call -> GIMMEH . variable
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 92

state 45

    (22) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 93


state 46

    (43) function -> HOW . IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> HOW . IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> HOW . IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> HOW . IZ variable ID NEWLINE statements IF U SAY SO

    IZ              shift and go to state 94


state 47

    (51) return -> FOUND . YR expr

    YR              shift and go to state 95


state 48

    (52) return -> GTFO .

    NEWLINE         reduce using rule 52 (return -> GTFO .)
    COMMA           reduce using rule 52 (return -> GTFO .)


state 49

    (17) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    IN              shift and go to state 96


state 50

    (93) variable -> IT .

    APOSTROPHE_Z    reduce using rule 93 (variable -> IT .)
    IZ              reduce using rule 93 (variable -> IT .)
    IS              reduce using rule 93 (variable -> IT .)
    R               reduce using rule 93 (variable -> IT .)
    HAS             reduce using rule 93 (variable -> IT .)
    NEWLINE         reduce using rule 93 (variable -> IT .)
    COMMA           reduce using rule 93 (variable -> IT .)
    AN              reduce using rule 93 (variable -> IT .)
    MKAY            reduce using rule 93 (variable -> IT .)
    I               reduce using rule 93 (variable -> IT .)
    SIZE            reduce using rule 93 (variable -> IT .)
    ABSLUT          reduce using rule 93 (variable -> IT .)
    SUM             reduce using rule 93 (variable -> IT .)
    DIFF            reduce using rule 93 (variable -> IT .)
    PRODUKT         reduce using rule 93 (variable -> IT .)
    QUOSHUNT        reduce using rule 93 (variable -> IT .)
    MOD             reduce using rule 93 (variable -> IT .)
    BIGGR           reduce using rule 93 (variable -> IT .)
    SMALLR          reduce using rule 93 (variable -> IT .)
    BOTH            reduce using rule 93 (variable -> IT .)
    EITHER          reduce using rule 93 (variable -> IT .)
    WON             reduce using rule 93 (variable -> IT .)
    NOT             reduce using rule 93 (variable -> IT .)
    ALL             reduce using rule 93 (variable -> IT .)
    ANY             reduce using rule 93 (variable -> IT .)
    DIFFRINT        reduce using rule 93 (variable -> IT .)
    SMOOSH          reduce using rule 93 (variable -> IT .)
    MAEK            reduce using rule 93 (variable -> IT .)
    ID              reduce using rule 93 (variable -> IT .)
    IT              reduce using rule 93 (variable -> IT .)
    STRING          reduce using rule 93 (variable -> IT .)
    FLOAT           reduce using rule 93 (variable -> IT .)
    INTEGER         reduce using rule 93 (variable -> IT .)
    WIN             reduce using rule 93 (variable -> IT .)
    FAIL            reduce using rule 93 (variable -> IT .)
    DICT            reduce using rule 93 (variable -> IT .)
    A               reduce using rule 93 (variable -> IT .)
    YARN            reduce using rule 93 (variable -> IT .)
    NUMBR           reduce using rule 93 (variable -> IT .)
    NUMBAR          reduce using rule 93 (variable -> IT .)
    NOOB            reduce using rule 93 (variable -> IT .)
    BUKKIT          reduce using rule 93 (variable -> IT .)
    EXCLAMATION     reduce using rule 93 (variable -> IT .)
    ITZ             reduce using rule 93 (variable -> IT .)
    UPPIN           reduce using rule 93 (variable -> IT .)
    NERFIN          reduce using rule 93 (variable -> IT .)
    TIL             reduce using rule 93 (variable -> IT .)
    WILE            reduce using rule 93 (variable -> IT .)


state 51

    (58) value -> STRING .

    NEWLINE         reduce using rule 58 (value -> STRING .)
    COMMA           reduce using rule 58 (value -> STRING .)
    AN              reduce using rule 58 (value -> STRING .)
    MKAY            reduce using rule 58 (value -> STRING .)
    I               reduce using rule 58 (value -> STRING .)
    SIZE            reduce using rule 58 (value -> STRING .)
    ABSLUT          reduce using rule 58 (value -> STRING .)
    SUM             reduce using rule 58 (value -> STRING .)
    DIFF            reduce using rule 58 (value -> STRING .)
    PRODUKT         reduce using rule 58 (value -> STRING .)
    QUOSHUNT        reduce using rule 58 (value -> STRING .)
    MOD             reduce using rule 58 (value -> STRING .)
    BIGGR           reduce using rule 58 (value -> STRING .)
    SMALLR          reduce using rule 58 (value -> STRING .)
    BOTH            reduce using rule 58 (value -> STRING .)
    EITHER          reduce using rule 58 (value -> STRING .)
    WON             reduce using rule 58 (value -> STRING .)
    NOT             reduce using rule 58 (value -> STRING .)
    ALL             reduce using rule 58 (value -> STRING .)
    ANY             reduce using rule 58 (value -> STRING .)
    DIFFRINT        reduce using rule 58 (value -> STRING .)
    SMOOSH          reduce using rule 58 (value -> STRING .)
    MAEK            reduce using rule 58 (value -> STRING .)
    ID              reduce using rule 58 (value -> STRING .)
    IT              reduce using rule 58 (value -> STRING .)
    STRING          reduce using rule 58 (value -> STRING .)
    FLOAT           reduce using rule 58 (value -> STRING .)
    INTEGER         reduce using rule 58 (value -> STRING .)
    WIN             reduce using rule 58 (value -> STRING .)
    FAIL            reduce using rule 58 (value -> STRING .)
    DICT            reduce using rule 58 (value -> STRING .)
    A               reduce using rule 58 (value -> STRING .)
    YARN            reduce using rule 58 (value -> STRING .)
    NUMBR           reduce using rule 58 (value -> STRING .)
    NUMBAR          reduce using rule 58 (value -> STRING .)
    NOOB            reduce using rule 58 (value -> STRING .)
    BUKKIT          reduce using rule 58 (value -> STRING .)
    EXCLAMATION     reduce using rule 58 (value -> STRING .)


state 52

    (60) value -> INTEGER .

    NEWLINE         reduce using rule 60 (value -> INTEGER .)
    COMMA           reduce using rule 60 (value -> INTEGER .)
    AN              reduce using rule 60 (value -> INTEGER .)
    MKAY            reduce using rule 60 (value -> INTEGER .)
    I               reduce using rule 60 (value -> INTEGER .)
    SIZE            reduce using rule 60 (value -> INTEGER .)
    ABSLUT          reduce using rule 60 (value -> INTEGER .)
    SUM             reduce using rule 60 (value -> INTEGER .)
    DIFF            reduce using rule 60 (value -> INTEGER .)
    PRODUKT         reduce using rule 60 (value -> INTEGER .)
    QUOSHUNT        reduce using rule 60 (value -> INTEGER .)
    MOD             reduce using rule 60 (value -> INTEGER .)
    BIGGR           reduce using rule 60 (value -> INTEGER .)
    SMALLR          reduce using rule 60 (value -> INTEGER .)
    BOTH            reduce using rule 60 (value -> INTEGER .)
    EITHER          reduce using rule 60 (value -> INTEGER .)
    WON             reduce using rule 60 (value -> INTEGER .)
    NOT             reduce using rule 60 (value -> INTEGER .)
    ALL             reduce using rule 60 (value -> INTEGER .)
    ANY             reduce using rule 60 (value -> INTEGER .)
    DIFFRINT        reduce using rule 60 (value -> INTEGER .)
    SMOOSH          reduce using rule 60 (value -> INTEGER .)
    MAEK            reduce using rule 60 (value -> INTEGER .)
    ID              reduce using rule 60 (value -> INTEGER .)
    IT              reduce using rule 60 (value -> INTEGER .)
    STRING          reduce using rule 60 (value -> INTEGER .)
    FLOAT           reduce using rule 60 (value -> INTEGER .)
    INTEGER         reduce using rule 60 (value -> INTEGER .)
    WIN             reduce using rule 60 (value -> INTEGER .)
    FAIL            reduce using rule 60 (value -> INTEGER .)
    DICT            reduce using rule 60 (value -> INTEGER .)
    A               reduce using rule 60 (value -> INTEGER .)
    YARN            reduce using rule 60 (value -> INTEGER .)
    NUMBR           reduce using rule 60 (value -> INTEGER .)
    NUMBAR          reduce using rule 60 (value -> INTEGER .)
    NOOB            reduce using rule 60 (value -> INTEGER .)
    BUKKIT          reduce using rule 60 (value -> INTEGER .)
    EXCLAMATION     reduce using rule 60 (value -> INTEGER .)


state 53

    (61) value -> WIN .

    NEWLINE         reduce using rule 61 (value -> WIN .)
    COMMA           reduce using rule 61 (value -> WIN .)
    AN              reduce using rule 61 (value -> WIN .)
    MKAY            reduce using rule 61 (value -> WIN .)
    I               reduce using rule 61 (value -> WIN .)
    SIZE            reduce using rule 61 (value -> WIN .)
    ABSLUT          reduce using rule 61 (value -> WIN .)
    SUM             reduce using rule 61 (value -> WIN .)
    DIFF            reduce using rule 61 (value -> WIN .)
    PRODUKT         reduce using rule 61 (value -> WIN .)
    QUOSHUNT        reduce using rule 61 (value -> WIN .)
    MOD             reduce using rule 61 (value -> WIN .)
    BIGGR           reduce using rule 61 (value -> WIN .)
    SMALLR          reduce using rule 61 (value -> WIN .)
    BOTH            reduce using rule 61 (value -> WIN .)
    EITHER          reduce using rule 61 (value -> WIN .)
    WON             reduce using rule 61 (value -> WIN .)
    NOT             reduce using rule 61 (value -> WIN .)
    ALL             reduce using rule 61 (value -> WIN .)
    ANY             reduce using rule 61 (value -> WIN .)
    DIFFRINT        reduce using rule 61 (value -> WIN .)
    SMOOSH          reduce using rule 61 (value -> WIN .)
    MAEK            reduce using rule 61 (value -> WIN .)
    ID              reduce using rule 61 (value -> WIN .)
    IT              reduce using rule 61 (value -> WIN .)
    STRING          reduce using rule 61 (value -> WIN .)
    FLOAT           reduce using rule 61 (value -> WIN .)
    INTEGER         reduce using rule 61 (value -> WIN .)
    WIN             reduce using rule 61 (value -> WIN .)
    FAIL            reduce using rule 61 (value -> WIN .)
    DICT            reduce using rule 61 (value -> WIN .)
    A               reduce using rule 61 (value -> WIN .)
    YARN            reduce using rule 61 (value -> WIN .)
    NUMBR           reduce using rule 61 (value -> WIN .)
    NUMBAR          reduce using rule 61 (value -> WIN .)
    NOOB            reduce using rule 61 (value -> WIN .)
    BUKKIT          reduce using rule 61 (value -> WIN .)
    EXCLAMATION     reduce using rule 61 (value -> WIN .)


state 54

    (62) value -> FAIL .

    NEWLINE         reduce using rule 62 (value -> FAIL .)
    COMMA           reduce using rule 62 (value -> FAIL .)
    AN              reduce using rule 62 (value -> FAIL .)
    MKAY            reduce using rule 62 (value -> FAIL .)
    I               reduce using rule 62 (value -> FAIL .)
    SIZE            reduce using rule 62 (value -> FAIL .)
    ABSLUT          reduce using rule 62 (value -> FAIL .)
    SUM             reduce using rule 62 (value -> FAIL .)
    DIFF            reduce using rule 62 (value -> FAIL .)
    PRODUKT         reduce using rule 62 (value -> FAIL .)
    QUOSHUNT        reduce using rule 62 (value -> FAIL .)
    MOD             reduce using rule 62 (value -> FAIL .)
    BIGGR           reduce using rule 62 (value -> FAIL .)
    SMALLR          reduce using rule 62 (value -> FAIL .)
    BOTH            reduce using rule 62 (value -> FAIL .)
    EITHER          reduce using rule 62 (value -> FAIL .)
    WON             reduce using rule 62 (value -> FAIL .)
    NOT             reduce using rule 62 (value -> FAIL .)
    ALL             reduce using rule 62 (value -> FAIL .)
    ANY             reduce using rule 62 (value -> FAIL .)
    DIFFRINT        reduce using rule 62 (value -> FAIL .)
    SMOOSH          reduce using rule 62 (value -> FAIL .)
    MAEK            reduce using rule 62 (value -> FAIL .)
    ID              reduce using rule 62 (value -> FAIL .)
    IT              reduce using rule 62 (value -> FAIL .)
    STRING          reduce using rule 62 (value -> FAIL .)
    FLOAT           reduce using rule 62 (value -> FAIL .)
    INTEGER         reduce using rule 62 (value -> FAIL .)
    WIN             reduce using rule 62 (value -> FAIL .)
    FAIL            reduce using rule 62 (value -> FAIL .)
    DICT            reduce using rule 62 (value -> FAIL .)
    A               reduce using rule 62 (value -> FAIL .)
    YARN            reduce using rule 62 (value -> FAIL .)
    NUMBR           reduce using rule 62 (value -> FAIL .)
    NUMBAR          reduce using rule 62 (value -> FAIL .)
    NOOB            reduce using rule 62 (value -> FAIL .)
    BUKKIT          reduce using rule 62 (value -> FAIL .)
    EXCLAMATION     reduce using rule 62 (value -> FAIL .)


state 55

    (63) value -> DICT .

    NEWLINE         reduce using rule 63 (value -> DICT .)
    COMMA           reduce using rule 63 (value -> DICT .)
    AN              reduce using rule 63 (value -> DICT .)
    MKAY            reduce using rule 63 (value -> DICT .)
    I               reduce using rule 63 (value -> DICT .)
    SIZE            reduce using rule 63 (value -> DICT .)
    ABSLUT          reduce using rule 63 (value -> DICT .)
    SUM             reduce using rule 63 (value -> DICT .)
    DIFF            reduce using rule 63 (value -> DICT .)
    PRODUKT         reduce using rule 63 (value -> DICT .)
    QUOSHUNT        reduce using rule 63 (value -> DICT .)
    MOD             reduce using rule 63 (value -> DICT .)
    BIGGR           reduce using rule 63 (value -> DICT .)
    SMALLR          reduce using rule 63 (value -> DICT .)
    BOTH            reduce using rule 63 (value -> DICT .)
    EITHER          reduce using rule 63 (value -> DICT .)
    WON             reduce using rule 63 (value -> DICT .)
    NOT             reduce using rule 63 (value -> DICT .)
    ALL             reduce using rule 63 (value -> DICT .)
    ANY             reduce using rule 63 (value -> DICT .)
    DIFFRINT        reduce using rule 63 (value -> DICT .)
    SMOOSH          reduce using rule 63 (value -> DICT .)
    MAEK            reduce using rule 63 (value -> DICT .)
    ID              reduce using rule 63 (value -> DICT .)
    IT              reduce using rule 63 (value -> DICT .)
    STRING          reduce using rule 63 (value -> DICT .)
    FLOAT           reduce using rule 63 (value -> DICT .)
    INTEGER         reduce using rule 63 (value -> DICT .)
    WIN             reduce using rule 63 (value -> DICT .)
    FAIL            reduce using rule 63 (value -> DICT .)
    DICT            reduce using rule 63 (value -> DICT .)
    A               reduce using rule 63 (value -> DICT .)
    YARN            reduce using rule 63 (value -> DICT .)
    NUMBR           reduce using rule 63 (value -> DICT .)
    NUMBAR          reduce using rule 63 (value -> DICT .)
    NOOB            reduce using rule 63 (value -> DICT .)
    BUKKIT          reduce using rule 63 (value -> DICT .)
    EXCLAMATION     reduce using rule 63 (value -> DICT .)


state 56

    (1) program -> HAI FLOAT NEWLINE statements KTHXBYE .

    $end            reduce using rule 1 (program -> HAI FLOAT NEWLINE statements KTHXBYE .)


state 57

    (2) statements -> statements statement .

    KTHXBYE         reduce using rule 2 (statements -> statements statement .)
    I               reduce using rule 2 (statements -> statements statement .)
    SIZE            reduce using rule 2 (statements -> statements statement .)
    ABSLUT          reduce using rule 2 (statements -> statements statement .)
    SUM             reduce using rule 2 (statements -> statements statement .)
    DIFF            reduce using rule 2 (statements -> statements statement .)
    PRODUKT         reduce using rule 2 (statements -> statements statement .)
    QUOSHUNT        reduce using rule 2 (statements -> statements statement .)
    MOD             reduce using rule 2 (statements -> statements statement .)
    BIGGR           reduce using rule 2 (statements -> statements statement .)
    SMALLR          reduce using rule 2 (statements -> statements statement .)
    BOTH            reduce using rule 2 (statements -> statements statement .)
    EITHER          reduce using rule 2 (statements -> statements statement .)
    WON             reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    ALL             reduce using rule 2 (statements -> statements statement .)
    ANY             reduce using rule 2 (statements -> statements statement .)
    DIFFRINT        reduce using rule 2 (statements -> statements statement .)
    SMOOSH          reduce using rule 2 (statements -> statements statement .)
    MAEK            reduce using rule 2 (statements -> statements statement .)
    VISIBLE         reduce using rule 2 (statements -> statements statement .)
    GIMMEH          reduce using rule 2 (statements -> statements statement .)
    O               reduce using rule 2 (statements -> statements statement .)
    HOW             reduce using rule 2 (statements -> statements statement .)
    FOUND           reduce using rule 2 (statements -> statements statement .)
    GTFO            reduce using rule 2 (statements -> statements statement .)
    IM              reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    IT              reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    INTEGER         reduce using rule 2 (statements -> statements statement .)
    WIN             reduce using rule 2 (statements -> statements statement .)
    FAIL            reduce using rule 2 (statements -> statements statement .)
    DICT            reduce using rule 2 (statements -> statements statement .)
    NEWLINE         reduce using rule 2 (statements -> statements statement .)
    COMMA           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    NO              reduce using rule 2 (statements -> statements statement .)
    OIC             reduce using rule 2 (statements -> statements statement .)
    MEBBE           reduce using rule 2 (statements -> statements statement .)


state 58

    (4) statement -> command NEWLINE .

    KTHXBYE         reduce using rule 4 (statement -> command NEWLINE .)
    I               reduce using rule 4 (statement -> command NEWLINE .)
    SIZE            reduce using rule 4 (statement -> command NEWLINE .)
    ABSLUT          reduce using rule 4 (statement -> command NEWLINE .)
    SUM             reduce using rule 4 (statement -> command NEWLINE .)
    DIFF            reduce using rule 4 (statement -> command NEWLINE .)
    PRODUKT         reduce using rule 4 (statement -> command NEWLINE .)
    QUOSHUNT        reduce using rule 4 (statement -> command NEWLINE .)
    MOD             reduce using rule 4 (statement -> command NEWLINE .)
    BIGGR           reduce using rule 4 (statement -> command NEWLINE .)
    SMALLR          reduce using rule 4 (statement -> command NEWLINE .)
    BOTH            reduce using rule 4 (statement -> command NEWLINE .)
    EITHER          reduce using rule 4 (statement -> command NEWLINE .)
    WON             reduce using rule 4 (statement -> command NEWLINE .)
    NOT             reduce using rule 4 (statement -> command NEWLINE .)
    ALL             reduce using rule 4 (statement -> command NEWLINE .)
    ANY             reduce using rule 4 (statement -> command NEWLINE .)
    DIFFRINT        reduce using rule 4 (statement -> command NEWLINE .)
    SMOOSH          reduce using rule 4 (statement -> command NEWLINE .)
    MAEK            reduce using rule 4 (statement -> command NEWLINE .)
    VISIBLE         reduce using rule 4 (statement -> command NEWLINE .)
    GIMMEH          reduce using rule 4 (statement -> command NEWLINE .)
    O               reduce using rule 4 (statement -> command NEWLINE .)
    HOW             reduce using rule 4 (statement -> command NEWLINE .)
    FOUND           reduce using rule 4 (statement -> command NEWLINE .)
    GTFO            reduce using rule 4 (statement -> command NEWLINE .)
    IM              reduce using rule 4 (statement -> command NEWLINE .)
    ID              reduce using rule 4 (statement -> command NEWLINE .)
    IT              reduce using rule 4 (statement -> command NEWLINE .)
    STRING          reduce using rule 4 (statement -> command NEWLINE .)
    FLOAT           reduce using rule 4 (statement -> command NEWLINE .)
    INTEGER         reduce using rule 4 (statement -> command NEWLINE .)
    WIN             reduce using rule 4 (statement -> command NEWLINE .)
    FAIL            reduce using rule 4 (statement -> command NEWLINE .)
    DICT            reduce using rule 4 (statement -> command NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> command NEWLINE .)
    COMMA           reduce using rule 4 (statement -> command NEWLINE .)
    IF              reduce using rule 4 (statement -> command NEWLINE .)
    NO              reduce using rule 4 (statement -> command NEWLINE .)
    OIC             reduce using rule 4 (statement -> command NEWLINE .)
    MEBBE           reduce using rule 4 (statement -> command NEWLINE .)


state 59

    (5) statement -> command COMMA .

    KTHXBYE         reduce using rule 5 (statement -> command COMMA .)
    I               reduce using rule 5 (statement -> command COMMA .)
    SIZE            reduce using rule 5 (statement -> command COMMA .)
    ABSLUT          reduce using rule 5 (statement -> command COMMA .)
    SUM             reduce using rule 5 (statement -> command COMMA .)
    DIFF            reduce using rule 5 (statement -> command COMMA .)
    PRODUKT         reduce using rule 5 (statement -> command COMMA .)
    QUOSHUNT        reduce using rule 5 (statement -> command COMMA .)
    MOD             reduce using rule 5 (statement -> command COMMA .)
    BIGGR           reduce using rule 5 (statement -> command COMMA .)
    SMALLR          reduce using rule 5 (statement -> command COMMA .)
    BOTH            reduce using rule 5 (statement -> command COMMA .)
    EITHER          reduce using rule 5 (statement -> command COMMA .)
    WON             reduce using rule 5 (statement -> command COMMA .)
    NOT             reduce using rule 5 (statement -> command COMMA .)
    ALL             reduce using rule 5 (statement -> command COMMA .)
    ANY             reduce using rule 5 (statement -> command COMMA .)
    DIFFRINT        reduce using rule 5 (statement -> command COMMA .)
    SMOOSH          reduce using rule 5 (statement -> command COMMA .)
    MAEK            reduce using rule 5 (statement -> command COMMA .)
    VISIBLE         reduce using rule 5 (statement -> command COMMA .)
    GIMMEH          reduce using rule 5 (statement -> command COMMA .)
    O               reduce using rule 5 (statement -> command COMMA .)
    HOW             reduce using rule 5 (statement -> command COMMA .)
    FOUND           reduce using rule 5 (statement -> command COMMA .)
    GTFO            reduce using rule 5 (statement -> command COMMA .)
    IM              reduce using rule 5 (statement -> command COMMA .)
    ID              reduce using rule 5 (statement -> command COMMA .)
    IT              reduce using rule 5 (statement -> command COMMA .)
    STRING          reduce using rule 5 (statement -> command COMMA .)
    FLOAT           reduce using rule 5 (statement -> command COMMA .)
    INTEGER         reduce using rule 5 (statement -> command COMMA .)
    WIN             reduce using rule 5 (statement -> command COMMA .)
    FAIL            reduce using rule 5 (statement -> command COMMA .)
    DICT            reduce using rule 5 (statement -> command COMMA .)
    NEWLINE         reduce using rule 5 (statement -> command COMMA .)
    COMMA           reduce using rule 5 (statement -> command COMMA .)
    IF              reduce using rule 5 (statement -> command COMMA .)
    NO              reduce using rule 5 (statement -> command COMMA .)
    OIC             reduce using rule 5 (statement -> command COMMA .)
    MEBBE           reduce using rule 5 (statement -> command COMMA .)


state 60

    (33) expr -> variable APOSTROPHE_Z . variable
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 97

state 61

    (49) expr -> variable IZ . ID YR sep_yr_args MKAY
    (50) expr -> variable IZ . ID

    ID              shift and go to state 98


state 62

    (34) cast -> variable IS . NOW A type

    NOW             shift and go to state 99


state 63

    (35) cast -> variable R . MAEK variable A type
    (36) cast -> variable R . MAEK variable type
    (32) assign -> variable R . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    MAEK            shift and go to state 100
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    expr                           shift and go to state 101
    value                          shift and go to state 26

state 64

    (31) assign_bukkit -> variable HAS . A variable ITZ expr

    A               shift and go to state 102


state 65

    (47) expr -> I IZ . ID YR sep_yr_args MKAY
    (48) expr -> I IZ . ID

    ID              shift and go to state 103


state 66

    (28) decl -> I HAS . A variable
    (29) decl -> I HAS . A variable ITZ expr
    (30) decl -> I HAS . A variable ITZ A type

    A               shift and go to state 104


state 67

    (67) expr -> SIZE OF . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 105
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 68

    (68) expr -> ABSLUT OF . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 106
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 69

    (71) expr -> SUM OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 107
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 70

    (72) expr -> DIFF OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 108
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 71

    (73) expr -> PRODUKT OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 109
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 72

    (74) expr -> QUOSHUNT OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 110
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 73

    (75) expr -> MOD OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 111
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 74

    (76) expr -> BIGGR OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 112
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 75

    (77) expr -> SMALLR OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 113
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 76

    (78) expr -> BOTH OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 114
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 77

    (86) expr -> BOTH SAEM . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 115
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 78

    (79) expr -> EITHER OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 116
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 79

    (80) expr -> WON OF . expr AN expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 117
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 80

    (81) expr -> NOT expr .

    NEWLINE         reduce using rule 81 (expr -> NOT expr .)
    COMMA           reduce using rule 81 (expr -> NOT expr .)
    AN              reduce using rule 81 (expr -> NOT expr .)
    MKAY            reduce using rule 81 (expr -> NOT expr .)
    I               reduce using rule 81 (expr -> NOT expr .)
    SIZE            reduce using rule 81 (expr -> NOT expr .)
    ABSLUT          reduce using rule 81 (expr -> NOT expr .)
    SUM             reduce using rule 81 (expr -> NOT expr .)
    DIFF            reduce using rule 81 (expr -> NOT expr .)
    PRODUKT         reduce using rule 81 (expr -> NOT expr .)
    QUOSHUNT        reduce using rule 81 (expr -> NOT expr .)
    MOD             reduce using rule 81 (expr -> NOT expr .)
    BIGGR           reduce using rule 81 (expr -> NOT expr .)
    SMALLR          reduce using rule 81 (expr -> NOT expr .)
    BOTH            reduce using rule 81 (expr -> NOT expr .)
    EITHER          reduce using rule 81 (expr -> NOT expr .)
    WON             reduce using rule 81 (expr -> NOT expr .)
    NOT             reduce using rule 81 (expr -> NOT expr .)
    ALL             reduce using rule 81 (expr -> NOT expr .)
    ANY             reduce using rule 81 (expr -> NOT expr .)
    DIFFRINT        reduce using rule 81 (expr -> NOT expr .)
    SMOOSH          reduce using rule 81 (expr -> NOT expr .)
    MAEK            reduce using rule 81 (expr -> NOT expr .)
    ID              reduce using rule 81 (expr -> NOT expr .)
    IT              reduce using rule 81 (expr -> NOT expr .)
    STRING          reduce using rule 81 (expr -> NOT expr .)
    FLOAT           reduce using rule 81 (expr -> NOT expr .)
    INTEGER         reduce using rule 81 (expr -> NOT expr .)
    WIN             reduce using rule 81 (expr -> NOT expr .)
    FAIL            reduce using rule 81 (expr -> NOT expr .)
    DICT            reduce using rule 81 (expr -> NOT expr .)
    A               reduce using rule 81 (expr -> NOT expr .)
    YARN            reduce using rule 81 (expr -> NOT expr .)
    NUMBR           reduce using rule 81 (expr -> NOT expr .)
    NUMBAR          reduce using rule 81 (expr -> NOT expr .)
    NOOB            reduce using rule 81 (expr -> NOT expr .)
    BUKKIT          reduce using rule 81 (expr -> NOT expr .)
    EXCLAMATION     reduce using rule 81 (expr -> NOT expr .)


state 81

    (33) expr -> variable . APOSTROPHE_Z variable
    (49) expr -> variable . IZ ID YR sep_yr_args MKAY
    (50) expr -> variable . IZ ID
    (70) expr -> variable .

    APOSTROPHE_Z    shift and go to state 60
    IZ              shift and go to state 61
    NEWLINE         reduce using rule 70 (expr -> variable .)
    COMMA           reduce using rule 70 (expr -> variable .)
    AN              reduce using rule 70 (expr -> variable .)
    MKAY            reduce using rule 70 (expr -> variable .)
    I               reduce using rule 70 (expr -> variable .)
    SIZE            reduce using rule 70 (expr -> variable .)
    ABSLUT          reduce using rule 70 (expr -> variable .)
    SUM             reduce using rule 70 (expr -> variable .)
    DIFF            reduce using rule 70 (expr -> variable .)
    PRODUKT         reduce using rule 70 (expr -> variable .)
    QUOSHUNT        reduce using rule 70 (expr -> variable .)
    MOD             reduce using rule 70 (expr -> variable .)
    BIGGR           reduce using rule 70 (expr -> variable .)
    SMALLR          reduce using rule 70 (expr -> variable .)
    BOTH            reduce using rule 70 (expr -> variable .)
    EITHER          reduce using rule 70 (expr -> variable .)
    WON             reduce using rule 70 (expr -> variable .)
    NOT             reduce using rule 70 (expr -> variable .)
    ALL             reduce using rule 70 (expr -> variable .)
    ANY             reduce using rule 70 (expr -> variable .)
    DIFFRINT        reduce using rule 70 (expr -> variable .)
    SMOOSH          reduce using rule 70 (expr -> variable .)
    MAEK            reduce using rule 70 (expr -> variable .)
    ID              reduce using rule 70 (expr -> variable .)
    IT              reduce using rule 70 (expr -> variable .)
    STRING          reduce using rule 70 (expr -> variable .)
    FLOAT           reduce using rule 70 (expr -> variable .)
    INTEGER         reduce using rule 70 (expr -> variable .)
    WIN             reduce using rule 70 (expr -> variable .)
    FAIL            reduce using rule 70 (expr -> variable .)
    DICT            reduce using rule 70 (expr -> variable .)
    A               reduce using rule 70 (expr -> variable .)
    YARN            reduce using rule 70 (expr -> variable .)
    NUMBR           reduce using rule 70 (expr -> variable .)
    NUMBAR          reduce using rule 70 (expr -> variable .)
    NOOB            reduce using rule 70 (expr -> variable .)
    BUKKIT          reduce using rule 70 (expr -> variable .)
    EXCLAMATION     reduce using rule 70 (expr -> variable .)


state 82

    (47) expr -> I . IZ ID YR sep_yr_args MKAY
    (48) expr -> I . IZ ID

    IZ              shift and go to state 65


state 83

    (82) expr -> ALL OF . sep_args MKAY
    (84) expr -> ALL OF . args MKAY
    (39) sep_args -> . sep_args AN expr
    (40) sep_args -> . expr
    (37) args -> . args expr
    (38) args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    sep_args                       shift and go to state 118
    args                           shift and go to state 119
    expr                           shift and go to state 88
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 84

    (83) expr -> ANY OF . sep_args MKAY
    (85) expr -> ANY OF . args MKAY
    (39) sep_args -> . sep_args AN expr
    (40) sep_args -> . expr
    (37) args -> . args expr
    (38) args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    sep_args                       shift and go to state 120
    args                           shift and go to state 121
    expr                           shift and go to state 88
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 85

    (87) expr -> DIFFRINT expr . AN expr

    AN              shift and go to state 122


state 86

    (88) expr -> SMOOSH sep_args . MKAY
    (39) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 123
    AN              shift and go to state 124


state 87

    (89) expr -> SMOOSH args . MKAY
    (37) args -> args . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    MKAY            shift and go to state 125
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 126
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 88

    (40) sep_args -> expr .
    (38) args -> expr .

  ! reduce/reduce conflict for MKAY resolved using rule 38 (args -> expr .)
    AN              reduce using rule 40 (sep_args -> expr .)
    MKAY            reduce using rule 38 (args -> expr .)
    I               reduce using rule 38 (args -> expr .)
    SIZE            reduce using rule 38 (args -> expr .)
    ABSLUT          reduce using rule 38 (args -> expr .)
    SUM             reduce using rule 38 (args -> expr .)
    DIFF            reduce using rule 38 (args -> expr .)
    PRODUKT         reduce using rule 38 (args -> expr .)
    QUOSHUNT        reduce using rule 38 (args -> expr .)
    MOD             reduce using rule 38 (args -> expr .)
    BIGGR           reduce using rule 38 (args -> expr .)
    SMALLR          reduce using rule 38 (args -> expr .)
    BOTH            reduce using rule 38 (args -> expr .)
    EITHER          reduce using rule 38 (args -> expr .)
    WON             reduce using rule 38 (args -> expr .)
    NOT             reduce using rule 38 (args -> expr .)
    ALL             reduce using rule 38 (args -> expr .)
    ANY             reduce using rule 38 (args -> expr .)
    DIFFRINT        reduce using rule 38 (args -> expr .)
    SMOOSH          reduce using rule 38 (args -> expr .)
    MAEK            reduce using rule 38 (args -> expr .)
    ID              reduce using rule 38 (args -> expr .)
    IT              reduce using rule 38 (args -> expr .)
    STRING          reduce using rule 38 (args -> expr .)
    FLOAT           reduce using rule 38 (args -> expr .)
    INTEGER         reduce using rule 38 (args -> expr .)
    WIN             reduce using rule 38 (args -> expr .)
    FAIL            reduce using rule 38 (args -> expr .)
    DICT            reduce using rule 38 (args -> expr .)

  ! MKAY            [ reduce using rule 40 (sep_args -> expr .) ]


state 89

    (90) expr -> MAEK expr . A type
    (91) expr -> MAEK expr . type
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

    A               shift and go to state 127
    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

    type                           shift and go to state 128

state 90

    (64) call -> VISIBLE args .
    (65) call -> VISIBLE args . EXCLAMATION
    (37) args -> args . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 64 (call -> VISIBLE args .)
    COMMA           reduce using rule 64 (call -> VISIBLE args .)
    EXCLAMATION     shift and go to state 134
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 126
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 91

    (38) args -> expr .

    EXCLAMATION     reduce using rule 38 (args -> expr .)
    I               reduce using rule 38 (args -> expr .)
    SIZE            reduce using rule 38 (args -> expr .)
    ABSLUT          reduce using rule 38 (args -> expr .)
    SUM             reduce using rule 38 (args -> expr .)
    DIFF            reduce using rule 38 (args -> expr .)
    PRODUKT         reduce using rule 38 (args -> expr .)
    QUOSHUNT        reduce using rule 38 (args -> expr .)
    MOD             reduce using rule 38 (args -> expr .)
    BIGGR           reduce using rule 38 (args -> expr .)
    SMALLR          reduce using rule 38 (args -> expr .)
    BOTH            reduce using rule 38 (args -> expr .)
    EITHER          reduce using rule 38 (args -> expr .)
    WON             reduce using rule 38 (args -> expr .)
    NOT             reduce using rule 38 (args -> expr .)
    ALL             reduce using rule 38 (args -> expr .)
    ANY             reduce using rule 38 (args -> expr .)
    DIFFRINT        reduce using rule 38 (args -> expr .)
    SMOOSH          reduce using rule 38 (args -> expr .)
    MAEK            reduce using rule 38 (args -> expr .)
    ID              reduce using rule 38 (args -> expr .)
    IT              reduce using rule 38 (args -> expr .)
    STRING          reduce using rule 38 (args -> expr .)
    FLOAT           reduce using rule 38 (args -> expr .)
    INTEGER         reduce using rule 38 (args -> expr .)
    WIN             reduce using rule 38 (args -> expr .)
    FAIL            reduce using rule 38 (args -> expr .)
    DICT            reduce using rule 38 (args -> expr .)
    NEWLINE         reduce using rule 38 (args -> expr .)
    COMMA           reduce using rule 38 (args -> expr .)


state 92

    (66) call -> GIMMEH variable .

    NEWLINE         reduce using rule 66 (call -> GIMMEH variable .)
    COMMA           reduce using rule 66 (call -> GIMMEH variable .)


state 93

    (22) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    QUESTION        shift and go to state 135


state 94

    (43) function -> HOW IZ . I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> HOW IZ . I ID NEWLINE statements IF U SAY SO
    (45) function -> HOW IZ . variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> HOW IZ . variable ID NEWLINE statements IF U SAY SO
    (92) variable -> . ID
    (93) variable -> . IT

    I               shift and go to state 136
    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 137

state 95

    (51) return -> FOUND YR . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 138
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 96

    (17) loop -> IM IN . YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 139


state 97

    (33) expr -> variable APOSTROPHE_Z variable .

    NEWLINE         reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    COMMA           reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    AN              reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    MKAY            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    I               reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    SIZE            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    ABSLUT          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    SUM             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    DIFF            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    PRODUKT         reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    QUOSHUNT        reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    MOD             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    BIGGR           reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    SMALLR          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    BOTH            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    EITHER          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    WON             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    NOT             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    ALL             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    ANY             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    DIFFRINT        reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    SMOOSH          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    MAEK            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    ID              reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    IT              reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    STRING          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    FLOAT           reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    INTEGER         reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    WIN             reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    FAIL            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    DICT            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    A               reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    YARN            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    NUMBR           reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    NUMBAR          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    NOOB            reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    BUKKIT          reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)
    EXCLAMATION     reduce using rule 33 (expr -> variable APOSTROPHE_Z variable .)


state 98

    (49) expr -> variable IZ ID . YR sep_yr_args MKAY
    (50) expr -> variable IZ ID .

    YR              shift and go to state 140
    NEWLINE         reduce using rule 50 (expr -> variable IZ ID .)
    COMMA           reduce using rule 50 (expr -> variable IZ ID .)
    AN              reduce using rule 50 (expr -> variable IZ ID .)
    MKAY            reduce using rule 50 (expr -> variable IZ ID .)
    I               reduce using rule 50 (expr -> variable IZ ID .)
    SIZE            reduce using rule 50 (expr -> variable IZ ID .)
    ABSLUT          reduce using rule 50 (expr -> variable IZ ID .)
    SUM             reduce using rule 50 (expr -> variable IZ ID .)
    DIFF            reduce using rule 50 (expr -> variable IZ ID .)
    PRODUKT         reduce using rule 50 (expr -> variable IZ ID .)
    QUOSHUNT        reduce using rule 50 (expr -> variable IZ ID .)
    MOD             reduce using rule 50 (expr -> variable IZ ID .)
    BIGGR           reduce using rule 50 (expr -> variable IZ ID .)
    SMALLR          reduce using rule 50 (expr -> variable IZ ID .)
    BOTH            reduce using rule 50 (expr -> variable IZ ID .)
    EITHER          reduce using rule 50 (expr -> variable IZ ID .)
    WON             reduce using rule 50 (expr -> variable IZ ID .)
    NOT             reduce using rule 50 (expr -> variable IZ ID .)
    ALL             reduce using rule 50 (expr -> variable IZ ID .)
    ANY             reduce using rule 50 (expr -> variable IZ ID .)
    DIFFRINT        reduce using rule 50 (expr -> variable IZ ID .)
    SMOOSH          reduce using rule 50 (expr -> variable IZ ID .)
    MAEK            reduce using rule 50 (expr -> variable IZ ID .)
    ID              reduce using rule 50 (expr -> variable IZ ID .)
    IT              reduce using rule 50 (expr -> variable IZ ID .)
    STRING          reduce using rule 50 (expr -> variable IZ ID .)
    FLOAT           reduce using rule 50 (expr -> variable IZ ID .)
    INTEGER         reduce using rule 50 (expr -> variable IZ ID .)
    WIN             reduce using rule 50 (expr -> variable IZ ID .)
    FAIL            reduce using rule 50 (expr -> variable IZ ID .)
    DICT            reduce using rule 50 (expr -> variable IZ ID .)
    A               reduce using rule 50 (expr -> variable IZ ID .)
    YARN            reduce using rule 50 (expr -> variable IZ ID .)
    NUMBR           reduce using rule 50 (expr -> variable IZ ID .)
    NUMBAR          reduce using rule 50 (expr -> variable IZ ID .)
    NOOB            reduce using rule 50 (expr -> variable IZ ID .)
    BUKKIT          reduce using rule 50 (expr -> variable IZ ID .)
    EXCLAMATION     reduce using rule 50 (expr -> variable IZ ID .)


state 99

    (34) cast -> variable IS NOW . A type

    A               shift and go to state 141


state 100

    (35) cast -> variable R MAEK . variable A type
    (36) cast -> variable R MAEK . variable type
    (90) expr -> MAEK . expr A type
    (91) expr -> MAEK . expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    ID              shift and go to state 23
    IT              shift and go to state 50
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 142
    expr                           shift and go to state 89
    value                          shift and go to state 26

state 101

    (32) assign -> variable R expr .

    NEWLINE         reduce using rule 32 (assign -> variable R expr .)
    COMMA           reduce using rule 32 (assign -> variable R expr .)


state 102

    (31) assign_bukkit -> variable HAS A . variable ITZ expr
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 143

state 103

    (47) expr -> I IZ ID . YR sep_yr_args MKAY
    (48) expr -> I IZ ID .

    YR              shift and go to state 144
    NEWLINE         reduce using rule 48 (expr -> I IZ ID .)
    COMMA           reduce using rule 48 (expr -> I IZ ID .)
    AN              reduce using rule 48 (expr -> I IZ ID .)
    MKAY            reduce using rule 48 (expr -> I IZ ID .)
    I               reduce using rule 48 (expr -> I IZ ID .)
    SIZE            reduce using rule 48 (expr -> I IZ ID .)
    ABSLUT          reduce using rule 48 (expr -> I IZ ID .)
    SUM             reduce using rule 48 (expr -> I IZ ID .)
    DIFF            reduce using rule 48 (expr -> I IZ ID .)
    PRODUKT         reduce using rule 48 (expr -> I IZ ID .)
    QUOSHUNT        reduce using rule 48 (expr -> I IZ ID .)
    MOD             reduce using rule 48 (expr -> I IZ ID .)
    BIGGR           reduce using rule 48 (expr -> I IZ ID .)
    SMALLR          reduce using rule 48 (expr -> I IZ ID .)
    BOTH            reduce using rule 48 (expr -> I IZ ID .)
    EITHER          reduce using rule 48 (expr -> I IZ ID .)
    WON             reduce using rule 48 (expr -> I IZ ID .)
    NOT             reduce using rule 48 (expr -> I IZ ID .)
    ALL             reduce using rule 48 (expr -> I IZ ID .)
    ANY             reduce using rule 48 (expr -> I IZ ID .)
    DIFFRINT        reduce using rule 48 (expr -> I IZ ID .)
    SMOOSH          reduce using rule 48 (expr -> I IZ ID .)
    MAEK            reduce using rule 48 (expr -> I IZ ID .)
    ID              reduce using rule 48 (expr -> I IZ ID .)
    IT              reduce using rule 48 (expr -> I IZ ID .)
    STRING          reduce using rule 48 (expr -> I IZ ID .)
    FLOAT           reduce using rule 48 (expr -> I IZ ID .)
    INTEGER         reduce using rule 48 (expr -> I IZ ID .)
    WIN             reduce using rule 48 (expr -> I IZ ID .)
    FAIL            reduce using rule 48 (expr -> I IZ ID .)
    DICT            reduce using rule 48 (expr -> I IZ ID .)
    A               reduce using rule 48 (expr -> I IZ ID .)
    YARN            reduce using rule 48 (expr -> I IZ ID .)
    NUMBR           reduce using rule 48 (expr -> I IZ ID .)
    NUMBAR          reduce using rule 48 (expr -> I IZ ID .)
    NOOB            reduce using rule 48 (expr -> I IZ ID .)
    BUKKIT          reduce using rule 48 (expr -> I IZ ID .)
    EXCLAMATION     reduce using rule 48 (expr -> I IZ ID .)


state 104

    (28) decl -> I HAS A . variable
    (29) decl -> I HAS A . variable ITZ expr
    (30) decl -> I HAS A . variable ITZ A type
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 145

state 105

    (67) expr -> SIZE OF expr .

    NEWLINE         reduce using rule 67 (expr -> SIZE OF expr .)
    COMMA           reduce using rule 67 (expr -> SIZE OF expr .)
    AN              reduce using rule 67 (expr -> SIZE OF expr .)
    MKAY            reduce using rule 67 (expr -> SIZE OF expr .)
    I               reduce using rule 67 (expr -> SIZE OF expr .)
    SIZE            reduce using rule 67 (expr -> SIZE OF expr .)
    ABSLUT          reduce using rule 67 (expr -> SIZE OF expr .)
    SUM             reduce using rule 67 (expr -> SIZE OF expr .)
    DIFF            reduce using rule 67 (expr -> SIZE OF expr .)
    PRODUKT         reduce using rule 67 (expr -> SIZE OF expr .)
    QUOSHUNT        reduce using rule 67 (expr -> SIZE OF expr .)
    MOD             reduce using rule 67 (expr -> SIZE OF expr .)
    BIGGR           reduce using rule 67 (expr -> SIZE OF expr .)
    SMALLR          reduce using rule 67 (expr -> SIZE OF expr .)
    BOTH            reduce using rule 67 (expr -> SIZE OF expr .)
    EITHER          reduce using rule 67 (expr -> SIZE OF expr .)
    WON             reduce using rule 67 (expr -> SIZE OF expr .)
    NOT             reduce using rule 67 (expr -> SIZE OF expr .)
    ALL             reduce using rule 67 (expr -> SIZE OF expr .)
    ANY             reduce using rule 67 (expr -> SIZE OF expr .)
    DIFFRINT        reduce using rule 67 (expr -> SIZE OF expr .)
    SMOOSH          reduce using rule 67 (expr -> SIZE OF expr .)
    MAEK            reduce using rule 67 (expr -> SIZE OF expr .)
    ID              reduce using rule 67 (expr -> SIZE OF expr .)
    IT              reduce using rule 67 (expr -> SIZE OF expr .)
    STRING          reduce using rule 67 (expr -> SIZE OF expr .)
    FLOAT           reduce using rule 67 (expr -> SIZE OF expr .)
    INTEGER         reduce using rule 67 (expr -> SIZE OF expr .)
    WIN             reduce using rule 67 (expr -> SIZE OF expr .)
    FAIL            reduce using rule 67 (expr -> SIZE OF expr .)
    DICT            reduce using rule 67 (expr -> SIZE OF expr .)
    A               reduce using rule 67 (expr -> SIZE OF expr .)
    YARN            reduce using rule 67 (expr -> SIZE OF expr .)
    NUMBR           reduce using rule 67 (expr -> SIZE OF expr .)
    NUMBAR          reduce using rule 67 (expr -> SIZE OF expr .)
    NOOB            reduce using rule 67 (expr -> SIZE OF expr .)
    BUKKIT          reduce using rule 67 (expr -> SIZE OF expr .)
    EXCLAMATION     reduce using rule 67 (expr -> SIZE OF expr .)


state 106

    (68) expr -> ABSLUT OF expr .

    NEWLINE         reduce using rule 68 (expr -> ABSLUT OF expr .)
    COMMA           reduce using rule 68 (expr -> ABSLUT OF expr .)
    AN              reduce using rule 68 (expr -> ABSLUT OF expr .)
    MKAY            reduce using rule 68 (expr -> ABSLUT OF expr .)
    I               reduce using rule 68 (expr -> ABSLUT OF expr .)
    SIZE            reduce using rule 68 (expr -> ABSLUT OF expr .)
    ABSLUT          reduce using rule 68 (expr -> ABSLUT OF expr .)
    SUM             reduce using rule 68 (expr -> ABSLUT OF expr .)
    DIFF            reduce using rule 68 (expr -> ABSLUT OF expr .)
    PRODUKT         reduce using rule 68 (expr -> ABSLUT OF expr .)
    QUOSHUNT        reduce using rule 68 (expr -> ABSLUT OF expr .)
    MOD             reduce using rule 68 (expr -> ABSLUT OF expr .)
    BIGGR           reduce using rule 68 (expr -> ABSLUT OF expr .)
    SMALLR          reduce using rule 68 (expr -> ABSLUT OF expr .)
    BOTH            reduce using rule 68 (expr -> ABSLUT OF expr .)
    EITHER          reduce using rule 68 (expr -> ABSLUT OF expr .)
    WON             reduce using rule 68 (expr -> ABSLUT OF expr .)
    NOT             reduce using rule 68 (expr -> ABSLUT OF expr .)
    ALL             reduce using rule 68 (expr -> ABSLUT OF expr .)
    ANY             reduce using rule 68 (expr -> ABSLUT OF expr .)
    DIFFRINT        reduce using rule 68 (expr -> ABSLUT OF expr .)
    SMOOSH          reduce using rule 68 (expr -> ABSLUT OF expr .)
    MAEK            reduce using rule 68 (expr -> ABSLUT OF expr .)
    ID              reduce using rule 68 (expr -> ABSLUT OF expr .)
    IT              reduce using rule 68 (expr -> ABSLUT OF expr .)
    STRING          reduce using rule 68 (expr -> ABSLUT OF expr .)
    FLOAT           reduce using rule 68 (expr -> ABSLUT OF expr .)
    INTEGER         reduce using rule 68 (expr -> ABSLUT OF expr .)
    WIN             reduce using rule 68 (expr -> ABSLUT OF expr .)
    FAIL            reduce using rule 68 (expr -> ABSLUT OF expr .)
    DICT            reduce using rule 68 (expr -> ABSLUT OF expr .)
    A               reduce using rule 68 (expr -> ABSLUT OF expr .)
    YARN            reduce using rule 68 (expr -> ABSLUT OF expr .)
    NUMBR           reduce using rule 68 (expr -> ABSLUT OF expr .)
    NUMBAR          reduce using rule 68 (expr -> ABSLUT OF expr .)
    NOOB            reduce using rule 68 (expr -> ABSLUT OF expr .)
    BUKKIT          reduce using rule 68 (expr -> ABSLUT OF expr .)
    EXCLAMATION     reduce using rule 68 (expr -> ABSLUT OF expr .)


state 107

    (71) expr -> SUM OF expr . AN expr

    AN              shift and go to state 146


state 108

    (72) expr -> DIFF OF expr . AN expr

    AN              shift and go to state 147


state 109

    (73) expr -> PRODUKT OF expr . AN expr

    AN              shift and go to state 148


state 110

    (74) expr -> QUOSHUNT OF expr . AN expr

    AN              shift and go to state 149


state 111

    (75) expr -> MOD OF expr . AN expr

    AN              shift and go to state 150


state 112

    (76) expr -> BIGGR OF expr . AN expr

    AN              shift and go to state 151


state 113

    (77) expr -> SMALLR OF expr . AN expr

    AN              shift and go to state 152


state 114

    (78) expr -> BOTH OF expr . AN expr

    AN              shift and go to state 153


state 115

    (86) expr -> BOTH SAEM expr . AN expr

    AN              shift and go to state 154


state 116

    (79) expr -> EITHER OF expr . AN expr

    AN              shift and go to state 155


state 117

    (80) expr -> WON OF expr . AN expr

    AN              shift and go to state 156


state 118

    (82) expr -> ALL OF sep_args . MKAY
    (39) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 157
    AN              shift and go to state 124


state 119

    (84) expr -> ALL OF args . MKAY
    (37) args -> args . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    MKAY            shift and go to state 158
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 126
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 120

    (83) expr -> ANY OF sep_args . MKAY
    (39) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 159
    AN              shift and go to state 124


state 121

    (85) expr -> ANY OF args . MKAY
    (37) args -> args . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    MKAY            shift and go to state 160
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 126
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 122

    (87) expr -> DIFFRINT expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 161
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 123

    (88) expr -> SMOOSH sep_args MKAY .

    NEWLINE         reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    COMMA           reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    AN              reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    MKAY            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    I               reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    SIZE            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    ABSLUT          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    SUM             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    DIFF            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    PRODUKT         reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    QUOSHUNT        reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    MOD             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    BIGGR           reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    SMALLR          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    BOTH            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    EITHER          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    WON             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    NOT             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    ALL             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    ANY             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    DIFFRINT        reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    SMOOSH          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    MAEK            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    ID              reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    IT              reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    STRING          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    FLOAT           reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    INTEGER         reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    WIN             reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    FAIL            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    DICT            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    A               reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    YARN            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    NUMBR           reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    NUMBAR          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    NOOB            reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    BUKKIT          reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)
    EXCLAMATION     reduce using rule 88 (expr -> SMOOSH sep_args MKAY .)


state 124

    (39) sep_args -> sep_args AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 162
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 125

    (89) expr -> SMOOSH args MKAY .

    NEWLINE         reduce using rule 89 (expr -> SMOOSH args MKAY .)
    COMMA           reduce using rule 89 (expr -> SMOOSH args MKAY .)
    AN              reduce using rule 89 (expr -> SMOOSH args MKAY .)
    MKAY            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    I               reduce using rule 89 (expr -> SMOOSH args MKAY .)
    SIZE            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    ABSLUT          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    SUM             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    DIFF            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    PRODUKT         reduce using rule 89 (expr -> SMOOSH args MKAY .)
    QUOSHUNT        reduce using rule 89 (expr -> SMOOSH args MKAY .)
    MOD             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    BIGGR           reduce using rule 89 (expr -> SMOOSH args MKAY .)
    SMALLR          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    BOTH            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    EITHER          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    WON             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    NOT             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    ALL             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    ANY             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    DIFFRINT        reduce using rule 89 (expr -> SMOOSH args MKAY .)
    SMOOSH          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    MAEK            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    ID              reduce using rule 89 (expr -> SMOOSH args MKAY .)
    IT              reduce using rule 89 (expr -> SMOOSH args MKAY .)
    STRING          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    FLOAT           reduce using rule 89 (expr -> SMOOSH args MKAY .)
    INTEGER         reduce using rule 89 (expr -> SMOOSH args MKAY .)
    WIN             reduce using rule 89 (expr -> SMOOSH args MKAY .)
    FAIL            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    DICT            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    A               reduce using rule 89 (expr -> SMOOSH args MKAY .)
    YARN            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    NUMBR           reduce using rule 89 (expr -> SMOOSH args MKAY .)
    NUMBAR          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    NOOB            reduce using rule 89 (expr -> SMOOSH args MKAY .)
    BUKKIT          reduce using rule 89 (expr -> SMOOSH args MKAY .)
    EXCLAMATION     reduce using rule 89 (expr -> SMOOSH args MKAY .)


state 126

    (37) args -> args expr .

    MKAY            reduce using rule 37 (args -> args expr .)
    I               reduce using rule 37 (args -> args expr .)
    SIZE            reduce using rule 37 (args -> args expr .)
    ABSLUT          reduce using rule 37 (args -> args expr .)
    SUM             reduce using rule 37 (args -> args expr .)
    DIFF            reduce using rule 37 (args -> args expr .)
    PRODUKT         reduce using rule 37 (args -> args expr .)
    QUOSHUNT        reduce using rule 37 (args -> args expr .)
    MOD             reduce using rule 37 (args -> args expr .)
    BIGGR           reduce using rule 37 (args -> args expr .)
    SMALLR          reduce using rule 37 (args -> args expr .)
    BOTH            reduce using rule 37 (args -> args expr .)
    EITHER          reduce using rule 37 (args -> args expr .)
    WON             reduce using rule 37 (args -> args expr .)
    NOT             reduce using rule 37 (args -> args expr .)
    ALL             reduce using rule 37 (args -> args expr .)
    ANY             reduce using rule 37 (args -> args expr .)
    DIFFRINT        reduce using rule 37 (args -> args expr .)
    SMOOSH          reduce using rule 37 (args -> args expr .)
    MAEK            reduce using rule 37 (args -> args expr .)
    ID              reduce using rule 37 (args -> args expr .)
    IT              reduce using rule 37 (args -> args expr .)
    STRING          reduce using rule 37 (args -> args expr .)
    FLOAT           reduce using rule 37 (args -> args expr .)
    INTEGER         reduce using rule 37 (args -> args expr .)
    WIN             reduce using rule 37 (args -> args expr .)
    FAIL            reduce using rule 37 (args -> args expr .)
    DICT            reduce using rule 37 (args -> args expr .)
    EXCLAMATION     reduce using rule 37 (args -> args expr .)
    NEWLINE         reduce using rule 37 (args -> args expr .)
    COMMA           reduce using rule 37 (args -> args expr .)


state 127

    (90) expr -> MAEK expr A . type
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

    type                           shift and go to state 163

state 128

    (91) expr -> MAEK expr type .

    NEWLINE         reduce using rule 91 (expr -> MAEK expr type .)
    COMMA           reduce using rule 91 (expr -> MAEK expr type .)
    AN              reduce using rule 91 (expr -> MAEK expr type .)
    MKAY            reduce using rule 91 (expr -> MAEK expr type .)
    I               reduce using rule 91 (expr -> MAEK expr type .)
    SIZE            reduce using rule 91 (expr -> MAEK expr type .)
    ABSLUT          reduce using rule 91 (expr -> MAEK expr type .)
    SUM             reduce using rule 91 (expr -> MAEK expr type .)
    DIFF            reduce using rule 91 (expr -> MAEK expr type .)
    PRODUKT         reduce using rule 91 (expr -> MAEK expr type .)
    QUOSHUNT        reduce using rule 91 (expr -> MAEK expr type .)
    MOD             reduce using rule 91 (expr -> MAEK expr type .)
    BIGGR           reduce using rule 91 (expr -> MAEK expr type .)
    SMALLR          reduce using rule 91 (expr -> MAEK expr type .)
    BOTH            reduce using rule 91 (expr -> MAEK expr type .)
    EITHER          reduce using rule 91 (expr -> MAEK expr type .)
    WON             reduce using rule 91 (expr -> MAEK expr type .)
    NOT             reduce using rule 91 (expr -> MAEK expr type .)
    ALL             reduce using rule 91 (expr -> MAEK expr type .)
    ANY             reduce using rule 91 (expr -> MAEK expr type .)
    DIFFRINT        reduce using rule 91 (expr -> MAEK expr type .)
    SMOOSH          reduce using rule 91 (expr -> MAEK expr type .)
    MAEK            reduce using rule 91 (expr -> MAEK expr type .)
    ID              reduce using rule 91 (expr -> MAEK expr type .)
    IT              reduce using rule 91 (expr -> MAEK expr type .)
    STRING          reduce using rule 91 (expr -> MAEK expr type .)
    FLOAT           reduce using rule 91 (expr -> MAEK expr type .)
    INTEGER         reduce using rule 91 (expr -> MAEK expr type .)
    WIN             reduce using rule 91 (expr -> MAEK expr type .)
    FAIL            reduce using rule 91 (expr -> MAEK expr type .)
    DICT            reduce using rule 91 (expr -> MAEK expr type .)
    A               reduce using rule 91 (expr -> MAEK expr type .)
    YARN            reduce using rule 91 (expr -> MAEK expr type .)
    NUMBR           reduce using rule 91 (expr -> MAEK expr type .)
    NUMBAR          reduce using rule 91 (expr -> MAEK expr type .)
    NOOB            reduce using rule 91 (expr -> MAEK expr type .)
    BUKKIT          reduce using rule 91 (expr -> MAEK expr type .)
    EXCLAMATION     reduce using rule 91 (expr -> MAEK expr type .)


state 129

    (53) type -> YARN .

    NEWLINE         reduce using rule 53 (type -> YARN .)
    COMMA           reduce using rule 53 (type -> YARN .)
    AN              reduce using rule 53 (type -> YARN .)
    MKAY            reduce using rule 53 (type -> YARN .)
    I               reduce using rule 53 (type -> YARN .)
    SIZE            reduce using rule 53 (type -> YARN .)
    ABSLUT          reduce using rule 53 (type -> YARN .)
    SUM             reduce using rule 53 (type -> YARN .)
    DIFF            reduce using rule 53 (type -> YARN .)
    PRODUKT         reduce using rule 53 (type -> YARN .)
    QUOSHUNT        reduce using rule 53 (type -> YARN .)
    MOD             reduce using rule 53 (type -> YARN .)
    BIGGR           reduce using rule 53 (type -> YARN .)
    SMALLR          reduce using rule 53 (type -> YARN .)
    BOTH            reduce using rule 53 (type -> YARN .)
    EITHER          reduce using rule 53 (type -> YARN .)
    WON             reduce using rule 53 (type -> YARN .)
    NOT             reduce using rule 53 (type -> YARN .)
    ALL             reduce using rule 53 (type -> YARN .)
    ANY             reduce using rule 53 (type -> YARN .)
    DIFFRINT        reduce using rule 53 (type -> YARN .)
    SMOOSH          reduce using rule 53 (type -> YARN .)
    MAEK            reduce using rule 53 (type -> YARN .)
    ID              reduce using rule 53 (type -> YARN .)
    IT              reduce using rule 53 (type -> YARN .)
    STRING          reduce using rule 53 (type -> YARN .)
    FLOAT           reduce using rule 53 (type -> YARN .)
    INTEGER         reduce using rule 53 (type -> YARN .)
    WIN             reduce using rule 53 (type -> YARN .)
    FAIL            reduce using rule 53 (type -> YARN .)
    DICT            reduce using rule 53 (type -> YARN .)
    A               reduce using rule 53 (type -> YARN .)
    YARN            reduce using rule 53 (type -> YARN .)
    NUMBR           reduce using rule 53 (type -> YARN .)
    NUMBAR          reduce using rule 53 (type -> YARN .)
    NOOB            reduce using rule 53 (type -> YARN .)
    BUKKIT          reduce using rule 53 (type -> YARN .)
    EXCLAMATION     reduce using rule 53 (type -> YARN .)


state 130

    (54) type -> NUMBR .

    NEWLINE         reduce using rule 54 (type -> NUMBR .)
    COMMA           reduce using rule 54 (type -> NUMBR .)
    AN              reduce using rule 54 (type -> NUMBR .)
    MKAY            reduce using rule 54 (type -> NUMBR .)
    I               reduce using rule 54 (type -> NUMBR .)
    SIZE            reduce using rule 54 (type -> NUMBR .)
    ABSLUT          reduce using rule 54 (type -> NUMBR .)
    SUM             reduce using rule 54 (type -> NUMBR .)
    DIFF            reduce using rule 54 (type -> NUMBR .)
    PRODUKT         reduce using rule 54 (type -> NUMBR .)
    QUOSHUNT        reduce using rule 54 (type -> NUMBR .)
    MOD             reduce using rule 54 (type -> NUMBR .)
    BIGGR           reduce using rule 54 (type -> NUMBR .)
    SMALLR          reduce using rule 54 (type -> NUMBR .)
    BOTH            reduce using rule 54 (type -> NUMBR .)
    EITHER          reduce using rule 54 (type -> NUMBR .)
    WON             reduce using rule 54 (type -> NUMBR .)
    NOT             reduce using rule 54 (type -> NUMBR .)
    ALL             reduce using rule 54 (type -> NUMBR .)
    ANY             reduce using rule 54 (type -> NUMBR .)
    DIFFRINT        reduce using rule 54 (type -> NUMBR .)
    SMOOSH          reduce using rule 54 (type -> NUMBR .)
    MAEK            reduce using rule 54 (type -> NUMBR .)
    ID              reduce using rule 54 (type -> NUMBR .)
    IT              reduce using rule 54 (type -> NUMBR .)
    STRING          reduce using rule 54 (type -> NUMBR .)
    FLOAT           reduce using rule 54 (type -> NUMBR .)
    INTEGER         reduce using rule 54 (type -> NUMBR .)
    WIN             reduce using rule 54 (type -> NUMBR .)
    FAIL            reduce using rule 54 (type -> NUMBR .)
    DICT            reduce using rule 54 (type -> NUMBR .)
    A               reduce using rule 54 (type -> NUMBR .)
    YARN            reduce using rule 54 (type -> NUMBR .)
    NUMBR           reduce using rule 54 (type -> NUMBR .)
    NUMBAR          reduce using rule 54 (type -> NUMBR .)
    NOOB            reduce using rule 54 (type -> NUMBR .)
    BUKKIT          reduce using rule 54 (type -> NUMBR .)
    EXCLAMATION     reduce using rule 54 (type -> NUMBR .)


state 131

    (55) type -> NUMBAR .

    NEWLINE         reduce using rule 55 (type -> NUMBAR .)
    COMMA           reduce using rule 55 (type -> NUMBAR .)
    AN              reduce using rule 55 (type -> NUMBAR .)
    MKAY            reduce using rule 55 (type -> NUMBAR .)
    I               reduce using rule 55 (type -> NUMBAR .)
    SIZE            reduce using rule 55 (type -> NUMBAR .)
    ABSLUT          reduce using rule 55 (type -> NUMBAR .)
    SUM             reduce using rule 55 (type -> NUMBAR .)
    DIFF            reduce using rule 55 (type -> NUMBAR .)
    PRODUKT         reduce using rule 55 (type -> NUMBAR .)
    QUOSHUNT        reduce using rule 55 (type -> NUMBAR .)
    MOD             reduce using rule 55 (type -> NUMBAR .)
    BIGGR           reduce using rule 55 (type -> NUMBAR .)
    SMALLR          reduce using rule 55 (type -> NUMBAR .)
    BOTH            reduce using rule 55 (type -> NUMBAR .)
    EITHER          reduce using rule 55 (type -> NUMBAR .)
    WON             reduce using rule 55 (type -> NUMBAR .)
    NOT             reduce using rule 55 (type -> NUMBAR .)
    ALL             reduce using rule 55 (type -> NUMBAR .)
    ANY             reduce using rule 55 (type -> NUMBAR .)
    DIFFRINT        reduce using rule 55 (type -> NUMBAR .)
    SMOOSH          reduce using rule 55 (type -> NUMBAR .)
    MAEK            reduce using rule 55 (type -> NUMBAR .)
    ID              reduce using rule 55 (type -> NUMBAR .)
    IT              reduce using rule 55 (type -> NUMBAR .)
    STRING          reduce using rule 55 (type -> NUMBAR .)
    FLOAT           reduce using rule 55 (type -> NUMBAR .)
    INTEGER         reduce using rule 55 (type -> NUMBAR .)
    WIN             reduce using rule 55 (type -> NUMBAR .)
    FAIL            reduce using rule 55 (type -> NUMBAR .)
    DICT            reduce using rule 55 (type -> NUMBAR .)
    A               reduce using rule 55 (type -> NUMBAR .)
    YARN            reduce using rule 55 (type -> NUMBAR .)
    NUMBR           reduce using rule 55 (type -> NUMBAR .)
    NUMBAR          reduce using rule 55 (type -> NUMBAR .)
    NOOB            reduce using rule 55 (type -> NUMBAR .)
    BUKKIT          reduce using rule 55 (type -> NUMBAR .)
    EXCLAMATION     reduce using rule 55 (type -> NUMBAR .)


state 132

    (56) type -> NOOB .

    NEWLINE         reduce using rule 56 (type -> NOOB .)
    COMMA           reduce using rule 56 (type -> NOOB .)
    AN              reduce using rule 56 (type -> NOOB .)
    MKAY            reduce using rule 56 (type -> NOOB .)
    I               reduce using rule 56 (type -> NOOB .)
    SIZE            reduce using rule 56 (type -> NOOB .)
    ABSLUT          reduce using rule 56 (type -> NOOB .)
    SUM             reduce using rule 56 (type -> NOOB .)
    DIFF            reduce using rule 56 (type -> NOOB .)
    PRODUKT         reduce using rule 56 (type -> NOOB .)
    QUOSHUNT        reduce using rule 56 (type -> NOOB .)
    MOD             reduce using rule 56 (type -> NOOB .)
    BIGGR           reduce using rule 56 (type -> NOOB .)
    SMALLR          reduce using rule 56 (type -> NOOB .)
    BOTH            reduce using rule 56 (type -> NOOB .)
    EITHER          reduce using rule 56 (type -> NOOB .)
    WON             reduce using rule 56 (type -> NOOB .)
    NOT             reduce using rule 56 (type -> NOOB .)
    ALL             reduce using rule 56 (type -> NOOB .)
    ANY             reduce using rule 56 (type -> NOOB .)
    DIFFRINT        reduce using rule 56 (type -> NOOB .)
    SMOOSH          reduce using rule 56 (type -> NOOB .)
    MAEK            reduce using rule 56 (type -> NOOB .)
    ID              reduce using rule 56 (type -> NOOB .)
    IT              reduce using rule 56 (type -> NOOB .)
    STRING          reduce using rule 56 (type -> NOOB .)
    FLOAT           reduce using rule 56 (type -> NOOB .)
    INTEGER         reduce using rule 56 (type -> NOOB .)
    WIN             reduce using rule 56 (type -> NOOB .)
    FAIL            reduce using rule 56 (type -> NOOB .)
    DICT            reduce using rule 56 (type -> NOOB .)
    A               reduce using rule 56 (type -> NOOB .)
    YARN            reduce using rule 56 (type -> NOOB .)
    NUMBR           reduce using rule 56 (type -> NOOB .)
    NUMBAR          reduce using rule 56 (type -> NOOB .)
    NOOB            reduce using rule 56 (type -> NOOB .)
    BUKKIT          reduce using rule 56 (type -> NOOB .)
    EXCLAMATION     reduce using rule 56 (type -> NOOB .)


state 133

    (57) type -> BUKKIT .

    NEWLINE         reduce using rule 57 (type -> BUKKIT .)
    COMMA           reduce using rule 57 (type -> BUKKIT .)
    AN              reduce using rule 57 (type -> BUKKIT .)
    MKAY            reduce using rule 57 (type -> BUKKIT .)
    I               reduce using rule 57 (type -> BUKKIT .)
    SIZE            reduce using rule 57 (type -> BUKKIT .)
    ABSLUT          reduce using rule 57 (type -> BUKKIT .)
    SUM             reduce using rule 57 (type -> BUKKIT .)
    DIFF            reduce using rule 57 (type -> BUKKIT .)
    PRODUKT         reduce using rule 57 (type -> BUKKIT .)
    QUOSHUNT        reduce using rule 57 (type -> BUKKIT .)
    MOD             reduce using rule 57 (type -> BUKKIT .)
    BIGGR           reduce using rule 57 (type -> BUKKIT .)
    SMALLR          reduce using rule 57 (type -> BUKKIT .)
    BOTH            reduce using rule 57 (type -> BUKKIT .)
    EITHER          reduce using rule 57 (type -> BUKKIT .)
    WON             reduce using rule 57 (type -> BUKKIT .)
    NOT             reduce using rule 57 (type -> BUKKIT .)
    ALL             reduce using rule 57 (type -> BUKKIT .)
    ANY             reduce using rule 57 (type -> BUKKIT .)
    DIFFRINT        reduce using rule 57 (type -> BUKKIT .)
    SMOOSH          reduce using rule 57 (type -> BUKKIT .)
    MAEK            reduce using rule 57 (type -> BUKKIT .)
    ID              reduce using rule 57 (type -> BUKKIT .)
    IT              reduce using rule 57 (type -> BUKKIT .)
    STRING          reduce using rule 57 (type -> BUKKIT .)
    FLOAT           reduce using rule 57 (type -> BUKKIT .)
    INTEGER         reduce using rule 57 (type -> BUKKIT .)
    WIN             reduce using rule 57 (type -> BUKKIT .)
    FAIL            reduce using rule 57 (type -> BUKKIT .)
    DICT            reduce using rule 57 (type -> BUKKIT .)
    A               reduce using rule 57 (type -> BUKKIT .)
    YARN            reduce using rule 57 (type -> BUKKIT .)
    NUMBR           reduce using rule 57 (type -> BUKKIT .)
    NUMBAR          reduce using rule 57 (type -> BUKKIT .)
    NOOB            reduce using rule 57 (type -> BUKKIT .)
    BUKKIT          reduce using rule 57 (type -> BUKKIT .)
    EXCLAMATION     reduce using rule 57 (type -> BUKKIT .)


state 134

    (65) call -> VISIBLE args EXCLAMATION .

    NEWLINE         reduce using rule 65 (call -> VISIBLE args EXCLAMATION .)
    COMMA           reduce using rule 65 (call -> VISIBLE args EXCLAMATION .)


state 135

    (22) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 164


state 136

    (43) function -> HOW IZ I . ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> HOW IZ I . ID NEWLINE statements IF U SAY SO

    ID              shift and go to state 165


state 137

    (45) function -> HOW IZ variable . ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> HOW IZ variable . ID NEWLINE statements IF U SAY SO

    ID              shift and go to state 166


state 138

    (51) return -> FOUND YR expr .

    NEWLINE         reduce using rule 51 (return -> FOUND YR expr .)
    COMMA           reduce using rule 51 (return -> FOUND YR expr .)


state 139

    (17) loop -> IM IN YR . variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 167

state 140

    (49) expr -> variable IZ ID YR . sep_yr_args MKAY
    (41) sep_yr_args -> . sep_yr_args AN YR expr
    (42) sep_yr_args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    sep_yr_args                    shift and go to state 168
    expr                           shift and go to state 169
    value                          shift and go to state 26

state 141

    (34) cast -> variable IS NOW A . type
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

    type                           shift and go to state 170

state 142

    (35) cast -> variable R MAEK variable . A type
    (36) cast -> variable R MAEK variable . type
    (33) expr -> variable . APOSTROPHE_Z variable
    (49) expr -> variable . IZ ID YR sep_yr_args MKAY
    (50) expr -> variable . IZ ID
    (70) expr -> variable .
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

  ! shift/reduce conflict for A resolved as shift
  ! shift/reduce conflict for YARN resolved as shift
  ! shift/reduce conflict for NUMBR resolved as shift
  ! shift/reduce conflict for NUMBAR resolved as shift
  ! shift/reduce conflict for NOOB resolved as shift
  ! shift/reduce conflict for BUKKIT resolved as shift
    A               shift and go to state 171
    APOSTROPHE_Z    shift and go to state 60
    IZ              shift and go to state 61
    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

  ! A               [ reduce using rule 70 (expr -> variable .) ]
  ! YARN            [ reduce using rule 70 (expr -> variable .) ]
  ! NUMBR           [ reduce using rule 70 (expr -> variable .) ]
  ! NUMBAR          [ reduce using rule 70 (expr -> variable .) ]
  ! NOOB            [ reduce using rule 70 (expr -> variable .) ]
  ! BUKKIT          [ reduce using rule 70 (expr -> variable .) ]

    type                           shift and go to state 172

state 143

    (31) assign_bukkit -> variable HAS A variable . ITZ expr

    ITZ             shift and go to state 173


state 144

    (47) expr -> I IZ ID YR . sep_yr_args MKAY
    (41) sep_yr_args -> . sep_yr_args AN YR expr
    (42) sep_yr_args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    sep_yr_args                    shift and go to state 174
    expr                           shift and go to state 169
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 145

    (28) decl -> I HAS A variable .
    (29) decl -> I HAS A variable . ITZ expr
    (30) decl -> I HAS A variable . ITZ A type

    NEWLINE         reduce using rule 28 (decl -> I HAS A variable .)
    COMMA           reduce using rule 28 (decl -> I HAS A variable .)
    ITZ             shift and go to state 175


state 146

    (71) expr -> SUM OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 176
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 147

    (72) expr -> DIFF OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 177
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 148

    (73) expr -> PRODUKT OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 178
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 149

    (74) expr -> QUOSHUNT OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 179
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 150

    (75) expr -> MOD OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 180
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 151

    (76) expr -> BIGGR OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 181
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 152

    (77) expr -> SMALLR OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 182
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 153

    (78) expr -> BOTH OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 183
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 154

    (86) expr -> BOTH SAEM expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 184
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 155

    (79) expr -> EITHER OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 185
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 156

    (80) expr -> WON OF expr AN . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 186
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 157

    (82) expr -> ALL OF sep_args MKAY .

    NEWLINE         reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    COMMA           reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    AN              reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    MKAY            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    I               reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    SIZE            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    ABSLUT          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    SUM             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    DIFF            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    PRODUKT         reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    MOD             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    BIGGR           reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    SMALLR          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    BOTH            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    EITHER          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    WON             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    NOT             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    ALL             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    ANY             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    DIFFRINT        reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    SMOOSH          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    MAEK            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    ID              reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    IT              reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    STRING          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    FLOAT           reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    INTEGER         reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    WIN             reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    FAIL            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    DICT            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    A               reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    YARN            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    NUMBR           reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    NUMBAR          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    NOOB            reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    BUKKIT          reduce using rule 82 (expr -> ALL OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 82 (expr -> ALL OF sep_args MKAY .)


state 158

    (84) expr -> ALL OF args MKAY .

    NEWLINE         reduce using rule 84 (expr -> ALL OF args MKAY .)
    COMMA           reduce using rule 84 (expr -> ALL OF args MKAY .)
    AN              reduce using rule 84 (expr -> ALL OF args MKAY .)
    MKAY            reduce using rule 84 (expr -> ALL OF args MKAY .)
    I               reduce using rule 84 (expr -> ALL OF args MKAY .)
    SIZE            reduce using rule 84 (expr -> ALL OF args MKAY .)
    ABSLUT          reduce using rule 84 (expr -> ALL OF args MKAY .)
    SUM             reduce using rule 84 (expr -> ALL OF args MKAY .)
    DIFF            reduce using rule 84 (expr -> ALL OF args MKAY .)
    PRODUKT         reduce using rule 84 (expr -> ALL OF args MKAY .)
    QUOSHUNT        reduce using rule 84 (expr -> ALL OF args MKAY .)
    MOD             reduce using rule 84 (expr -> ALL OF args MKAY .)
    BIGGR           reduce using rule 84 (expr -> ALL OF args MKAY .)
    SMALLR          reduce using rule 84 (expr -> ALL OF args MKAY .)
    BOTH            reduce using rule 84 (expr -> ALL OF args MKAY .)
    EITHER          reduce using rule 84 (expr -> ALL OF args MKAY .)
    WON             reduce using rule 84 (expr -> ALL OF args MKAY .)
    NOT             reduce using rule 84 (expr -> ALL OF args MKAY .)
    ALL             reduce using rule 84 (expr -> ALL OF args MKAY .)
    ANY             reduce using rule 84 (expr -> ALL OF args MKAY .)
    DIFFRINT        reduce using rule 84 (expr -> ALL OF args MKAY .)
    SMOOSH          reduce using rule 84 (expr -> ALL OF args MKAY .)
    MAEK            reduce using rule 84 (expr -> ALL OF args MKAY .)
    ID              reduce using rule 84 (expr -> ALL OF args MKAY .)
    IT              reduce using rule 84 (expr -> ALL OF args MKAY .)
    STRING          reduce using rule 84 (expr -> ALL OF args MKAY .)
    FLOAT           reduce using rule 84 (expr -> ALL OF args MKAY .)
    INTEGER         reduce using rule 84 (expr -> ALL OF args MKAY .)
    WIN             reduce using rule 84 (expr -> ALL OF args MKAY .)
    FAIL            reduce using rule 84 (expr -> ALL OF args MKAY .)
    DICT            reduce using rule 84 (expr -> ALL OF args MKAY .)
    A               reduce using rule 84 (expr -> ALL OF args MKAY .)
    YARN            reduce using rule 84 (expr -> ALL OF args MKAY .)
    NUMBR           reduce using rule 84 (expr -> ALL OF args MKAY .)
    NUMBAR          reduce using rule 84 (expr -> ALL OF args MKAY .)
    NOOB            reduce using rule 84 (expr -> ALL OF args MKAY .)
    BUKKIT          reduce using rule 84 (expr -> ALL OF args MKAY .)
    EXCLAMATION     reduce using rule 84 (expr -> ALL OF args MKAY .)


state 159

    (83) expr -> ANY OF sep_args MKAY .

    NEWLINE         reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    COMMA           reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    AN              reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    MKAY            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    I               reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    SIZE            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    ABSLUT          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    SUM             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    DIFF            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    PRODUKT         reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    MOD             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    BIGGR           reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    SMALLR          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    BOTH            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    EITHER          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    WON             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    NOT             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    ALL             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    ANY             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    DIFFRINT        reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    SMOOSH          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    MAEK            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    ID              reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    IT              reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    STRING          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    FLOAT           reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    INTEGER         reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    WIN             reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    FAIL            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    DICT            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    A               reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    YARN            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    NUMBR           reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    NUMBAR          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    NOOB            reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    BUKKIT          reduce using rule 83 (expr -> ANY OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 83 (expr -> ANY OF sep_args MKAY .)


state 160

    (85) expr -> ANY OF args MKAY .

    NEWLINE         reduce using rule 85 (expr -> ANY OF args MKAY .)
    COMMA           reduce using rule 85 (expr -> ANY OF args MKAY .)
    AN              reduce using rule 85 (expr -> ANY OF args MKAY .)
    MKAY            reduce using rule 85 (expr -> ANY OF args MKAY .)
    I               reduce using rule 85 (expr -> ANY OF args MKAY .)
    SIZE            reduce using rule 85 (expr -> ANY OF args MKAY .)
    ABSLUT          reduce using rule 85 (expr -> ANY OF args MKAY .)
    SUM             reduce using rule 85 (expr -> ANY OF args MKAY .)
    DIFF            reduce using rule 85 (expr -> ANY OF args MKAY .)
    PRODUKT         reduce using rule 85 (expr -> ANY OF args MKAY .)
    QUOSHUNT        reduce using rule 85 (expr -> ANY OF args MKAY .)
    MOD             reduce using rule 85 (expr -> ANY OF args MKAY .)
    BIGGR           reduce using rule 85 (expr -> ANY OF args MKAY .)
    SMALLR          reduce using rule 85 (expr -> ANY OF args MKAY .)
    BOTH            reduce using rule 85 (expr -> ANY OF args MKAY .)
    EITHER          reduce using rule 85 (expr -> ANY OF args MKAY .)
    WON             reduce using rule 85 (expr -> ANY OF args MKAY .)
    NOT             reduce using rule 85 (expr -> ANY OF args MKAY .)
    ALL             reduce using rule 85 (expr -> ANY OF args MKAY .)
    ANY             reduce using rule 85 (expr -> ANY OF args MKAY .)
    DIFFRINT        reduce using rule 85 (expr -> ANY OF args MKAY .)
    SMOOSH          reduce using rule 85 (expr -> ANY OF args MKAY .)
    MAEK            reduce using rule 85 (expr -> ANY OF args MKAY .)
    ID              reduce using rule 85 (expr -> ANY OF args MKAY .)
    IT              reduce using rule 85 (expr -> ANY OF args MKAY .)
    STRING          reduce using rule 85 (expr -> ANY OF args MKAY .)
    FLOAT           reduce using rule 85 (expr -> ANY OF args MKAY .)
    INTEGER         reduce using rule 85 (expr -> ANY OF args MKAY .)
    WIN             reduce using rule 85 (expr -> ANY OF args MKAY .)
    FAIL            reduce using rule 85 (expr -> ANY OF args MKAY .)
    DICT            reduce using rule 85 (expr -> ANY OF args MKAY .)
    A               reduce using rule 85 (expr -> ANY OF args MKAY .)
    YARN            reduce using rule 85 (expr -> ANY OF args MKAY .)
    NUMBR           reduce using rule 85 (expr -> ANY OF args MKAY .)
    NUMBAR          reduce using rule 85 (expr -> ANY OF args MKAY .)
    NOOB            reduce using rule 85 (expr -> ANY OF args MKAY .)
    BUKKIT          reduce using rule 85 (expr -> ANY OF args MKAY .)
    EXCLAMATION     reduce using rule 85 (expr -> ANY OF args MKAY .)


state 161

    (87) expr -> DIFFRINT expr AN expr .

    NEWLINE         reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    COMMA           reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    AN              reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    MKAY            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    I               reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    SIZE            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    ABSLUT          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    SUM             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    DIFF            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    PRODUKT         reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    QUOSHUNT        reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    MOD             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    BIGGR           reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    SMALLR          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    BOTH            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    EITHER          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    WON             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    NOT             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    ALL             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    ANY             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    DIFFRINT        reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    SMOOSH          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    MAEK            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    ID              reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    IT              reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    STRING          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    FLOAT           reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    INTEGER         reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    WIN             reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    FAIL            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    DICT            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    A               reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    YARN            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    NUMBR           reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    NUMBAR          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    NOOB            reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    BUKKIT          reduce using rule 87 (expr -> DIFFRINT expr AN expr .)
    EXCLAMATION     reduce using rule 87 (expr -> DIFFRINT expr AN expr .)


state 162

    (39) sep_args -> sep_args AN expr .

    MKAY            reduce using rule 39 (sep_args -> sep_args AN expr .)
    AN              reduce using rule 39 (sep_args -> sep_args AN expr .)


state 163

    (90) expr -> MAEK expr A type .

    NEWLINE         reduce using rule 90 (expr -> MAEK expr A type .)
    COMMA           reduce using rule 90 (expr -> MAEK expr A type .)
    AN              reduce using rule 90 (expr -> MAEK expr A type .)
    MKAY            reduce using rule 90 (expr -> MAEK expr A type .)
    I               reduce using rule 90 (expr -> MAEK expr A type .)
    SIZE            reduce using rule 90 (expr -> MAEK expr A type .)
    ABSLUT          reduce using rule 90 (expr -> MAEK expr A type .)
    SUM             reduce using rule 90 (expr -> MAEK expr A type .)
    DIFF            reduce using rule 90 (expr -> MAEK expr A type .)
    PRODUKT         reduce using rule 90 (expr -> MAEK expr A type .)
    QUOSHUNT        reduce using rule 90 (expr -> MAEK expr A type .)
    MOD             reduce using rule 90 (expr -> MAEK expr A type .)
    BIGGR           reduce using rule 90 (expr -> MAEK expr A type .)
    SMALLR          reduce using rule 90 (expr -> MAEK expr A type .)
    BOTH            reduce using rule 90 (expr -> MAEK expr A type .)
    EITHER          reduce using rule 90 (expr -> MAEK expr A type .)
    WON             reduce using rule 90 (expr -> MAEK expr A type .)
    NOT             reduce using rule 90 (expr -> MAEK expr A type .)
    ALL             reduce using rule 90 (expr -> MAEK expr A type .)
    ANY             reduce using rule 90 (expr -> MAEK expr A type .)
    DIFFRINT        reduce using rule 90 (expr -> MAEK expr A type .)
    SMOOSH          reduce using rule 90 (expr -> MAEK expr A type .)
    MAEK            reduce using rule 90 (expr -> MAEK expr A type .)
    ID              reduce using rule 90 (expr -> MAEK expr A type .)
    IT              reduce using rule 90 (expr -> MAEK expr A type .)
    STRING          reduce using rule 90 (expr -> MAEK expr A type .)
    FLOAT           reduce using rule 90 (expr -> MAEK expr A type .)
    INTEGER         reduce using rule 90 (expr -> MAEK expr A type .)
    WIN             reduce using rule 90 (expr -> MAEK expr A type .)
    FAIL            reduce using rule 90 (expr -> MAEK expr A type .)
    DICT            reduce using rule 90 (expr -> MAEK expr A type .)
    A               reduce using rule 90 (expr -> MAEK expr A type .)
    YARN            reduce using rule 90 (expr -> MAEK expr A type .)
    NUMBR           reduce using rule 90 (expr -> MAEK expr A type .)
    NUMBAR          reduce using rule 90 (expr -> MAEK expr A type .)
    NOOB            reduce using rule 90 (expr -> MAEK expr A type .)
    BUKKIT          reduce using rule 90 (expr -> MAEK expr A type .)
    EXCLAMATION     reduce using rule 90 (expr -> MAEK expr A type .)


state 164

    (22) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements OIC
    (24) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    YA              shift and go to state 187


state 165

    (43) function -> HOW IZ I ID . YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> HOW IZ I ID . NEWLINE statements IF U SAY SO

    YR              shift and go to state 188
    NEWLINE         shift and go to state 189


state 166

    (45) function -> HOW IZ variable ID . YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> HOW IZ variable ID . NEWLINE statements IF U SAY SO

    YR              shift and go to state 190
    NEWLINE         shift and go to state 191


state 167

    (17) loop -> IM IN YR variable . operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (18) operation -> . UPPIN
    (19) operation -> . NERFIN

    UPPIN           shift and go to state 193
    NERFIN          shift and go to state 194

    operation                      shift and go to state 192

state 168

    (49) expr -> variable IZ ID YR sep_yr_args . MKAY
    (41) sep_yr_args -> sep_yr_args . AN YR expr

    MKAY            shift and go to state 195
    AN              shift and go to state 196


state 169

    (42) sep_yr_args -> expr .

    MKAY            reduce using rule 42 (sep_yr_args -> expr .)
    AN              reduce using rule 42 (sep_yr_args -> expr .)
    NEWLINE         reduce using rule 42 (sep_yr_args -> expr .)


state 170

    (34) cast -> variable IS NOW A type .

    NEWLINE         reduce using rule 34 (cast -> variable IS NOW A type .)
    COMMA           reduce using rule 34 (cast -> variable IS NOW A type .)


state 171

    (35) cast -> variable R MAEK variable A . type
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

    type                           shift and go to state 197

state 172

    (36) cast -> variable R MAEK variable type .

    NEWLINE         reduce using rule 36 (cast -> variable R MAEK variable type .)
    COMMA           reduce using rule 36 (cast -> variable R MAEK variable type .)


state 173

    (31) assign_bukkit -> variable HAS A variable ITZ . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    expr                           shift and go to state 198
    value                          shift and go to state 26

state 174

    (47) expr -> I IZ ID YR sep_yr_args . MKAY
    (41) sep_yr_args -> sep_yr_args . AN YR expr

    MKAY            shift and go to state 199
    AN              shift and go to state 196


state 175

    (29) decl -> I HAS A variable ITZ . expr
    (30) decl -> I HAS A variable ITZ . A type
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    A               shift and go to state 200
    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    expr                           shift and go to state 201
    value                          shift and go to state 26

state 176

    (71) expr -> SUM OF expr AN expr .

    NEWLINE         reduce using rule 71 (expr -> SUM OF expr AN expr .)
    COMMA           reduce using rule 71 (expr -> SUM OF expr AN expr .)
    AN              reduce using rule 71 (expr -> SUM OF expr AN expr .)
    MKAY            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    I               reduce using rule 71 (expr -> SUM OF expr AN expr .)
    SIZE            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    ABSLUT          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    SUM             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    DIFF            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    PRODUKT         reduce using rule 71 (expr -> SUM OF expr AN expr .)
    QUOSHUNT        reduce using rule 71 (expr -> SUM OF expr AN expr .)
    MOD             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    BIGGR           reduce using rule 71 (expr -> SUM OF expr AN expr .)
    SMALLR          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    BOTH            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    EITHER          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    WON             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    NOT             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    ALL             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    ANY             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    DIFFRINT        reduce using rule 71 (expr -> SUM OF expr AN expr .)
    SMOOSH          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    MAEK            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    ID              reduce using rule 71 (expr -> SUM OF expr AN expr .)
    IT              reduce using rule 71 (expr -> SUM OF expr AN expr .)
    STRING          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    FLOAT           reduce using rule 71 (expr -> SUM OF expr AN expr .)
    INTEGER         reduce using rule 71 (expr -> SUM OF expr AN expr .)
    WIN             reduce using rule 71 (expr -> SUM OF expr AN expr .)
    FAIL            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    DICT            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    A               reduce using rule 71 (expr -> SUM OF expr AN expr .)
    YARN            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    NUMBR           reduce using rule 71 (expr -> SUM OF expr AN expr .)
    NUMBAR          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    NOOB            reduce using rule 71 (expr -> SUM OF expr AN expr .)
    BUKKIT          reduce using rule 71 (expr -> SUM OF expr AN expr .)
    EXCLAMATION     reduce using rule 71 (expr -> SUM OF expr AN expr .)


state 177

    (72) expr -> DIFF OF expr AN expr .

    NEWLINE         reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    COMMA           reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    AN              reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    MKAY            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    I               reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    SIZE            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    ABSLUT          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    SUM             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    DIFF            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    PRODUKT         reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    QUOSHUNT        reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    MOD             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    BIGGR           reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    SMALLR          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    BOTH            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    EITHER          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    WON             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    NOT             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    ALL             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    ANY             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    DIFFRINT        reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    SMOOSH          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    MAEK            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    ID              reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    IT              reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    STRING          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    FLOAT           reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    INTEGER         reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    WIN             reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    FAIL            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    DICT            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    A               reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    YARN            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    NUMBR           reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    NUMBAR          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    NOOB            reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    BUKKIT          reduce using rule 72 (expr -> DIFF OF expr AN expr .)
    EXCLAMATION     reduce using rule 72 (expr -> DIFF OF expr AN expr .)


state 178

    (73) expr -> PRODUKT OF expr AN expr .

    NEWLINE         reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    COMMA           reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    AN              reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    MKAY            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    I               reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    SIZE            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    ABSLUT          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    SUM             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    DIFF            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    PRODUKT         reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    QUOSHUNT        reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    MOD             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    BIGGR           reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    SMALLR          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    BOTH            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    EITHER          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    WON             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    NOT             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    ALL             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    ANY             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    DIFFRINT        reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    SMOOSH          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    MAEK            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    ID              reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    IT              reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    STRING          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    FLOAT           reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    INTEGER         reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    WIN             reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    FAIL            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    DICT            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    A               reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    YARN            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    NUMBR           reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    NUMBAR          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    NOOB            reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    BUKKIT          reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)
    EXCLAMATION     reduce using rule 73 (expr -> PRODUKT OF expr AN expr .)


state 179

    (74) expr -> QUOSHUNT OF expr AN expr .

    NEWLINE         reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    COMMA           reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    AN              reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    MKAY            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    I               reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    SIZE            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    ABSLUT          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    SUM             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    DIFF            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    PRODUKT         reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    QUOSHUNT        reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    MOD             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    BIGGR           reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    SMALLR          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    BOTH            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    EITHER          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    WON             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    NOT             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    ALL             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    ANY             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    DIFFRINT        reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    SMOOSH          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    MAEK            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    ID              reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    IT              reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    STRING          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    FLOAT           reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    INTEGER         reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    WIN             reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    FAIL            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    DICT            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    A               reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    YARN            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBR           reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBAR          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    NOOB            reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    BUKKIT          reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)
    EXCLAMATION     reduce using rule 74 (expr -> QUOSHUNT OF expr AN expr .)


state 180

    (75) expr -> MOD OF expr AN expr .

    NEWLINE         reduce using rule 75 (expr -> MOD OF expr AN expr .)
    COMMA           reduce using rule 75 (expr -> MOD OF expr AN expr .)
    AN              reduce using rule 75 (expr -> MOD OF expr AN expr .)
    MKAY            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    I               reduce using rule 75 (expr -> MOD OF expr AN expr .)
    SIZE            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    ABSLUT          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    SUM             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    DIFF            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    PRODUKT         reduce using rule 75 (expr -> MOD OF expr AN expr .)
    QUOSHUNT        reduce using rule 75 (expr -> MOD OF expr AN expr .)
    MOD             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    BIGGR           reduce using rule 75 (expr -> MOD OF expr AN expr .)
    SMALLR          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    BOTH            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    EITHER          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    WON             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    NOT             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    ALL             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    ANY             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    DIFFRINT        reduce using rule 75 (expr -> MOD OF expr AN expr .)
    SMOOSH          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    MAEK            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    ID              reduce using rule 75 (expr -> MOD OF expr AN expr .)
    IT              reduce using rule 75 (expr -> MOD OF expr AN expr .)
    STRING          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    FLOAT           reduce using rule 75 (expr -> MOD OF expr AN expr .)
    INTEGER         reduce using rule 75 (expr -> MOD OF expr AN expr .)
    WIN             reduce using rule 75 (expr -> MOD OF expr AN expr .)
    FAIL            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    DICT            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    A               reduce using rule 75 (expr -> MOD OF expr AN expr .)
    YARN            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    NUMBR           reduce using rule 75 (expr -> MOD OF expr AN expr .)
    NUMBAR          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    NOOB            reduce using rule 75 (expr -> MOD OF expr AN expr .)
    BUKKIT          reduce using rule 75 (expr -> MOD OF expr AN expr .)
    EXCLAMATION     reduce using rule 75 (expr -> MOD OF expr AN expr .)


state 181

    (76) expr -> BIGGR OF expr AN expr .

    NEWLINE         reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    COMMA           reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    AN              reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    MKAY            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    I               reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    SIZE            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    ABSLUT          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    SUM             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    DIFF            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    PRODUKT         reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    QUOSHUNT        reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    MOD             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    BIGGR           reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    SMALLR          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    BOTH            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    EITHER          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    WON             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    NOT             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    ALL             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    ANY             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    DIFFRINT        reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    SMOOSH          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    MAEK            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    ID              reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    IT              reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    STRING          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    FLOAT           reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    INTEGER         reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    WIN             reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    FAIL            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    DICT            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    A               reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    YARN            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    NUMBR           reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    NUMBAR          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    NOOB            reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    BUKKIT          reduce using rule 76 (expr -> BIGGR OF expr AN expr .)
    EXCLAMATION     reduce using rule 76 (expr -> BIGGR OF expr AN expr .)


state 182

    (77) expr -> SMALLR OF expr AN expr .

    NEWLINE         reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    COMMA           reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    AN              reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    MKAY            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    I               reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    SIZE            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    ABSLUT          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    SUM             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    DIFF            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    PRODUKT         reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    QUOSHUNT        reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    MOD             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    BIGGR           reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    SMALLR          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    BOTH            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    EITHER          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    WON             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    NOT             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    ALL             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    ANY             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    DIFFRINT        reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    SMOOSH          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    MAEK            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    ID              reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    IT              reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    STRING          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    FLOAT           reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    INTEGER         reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    WIN             reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    FAIL            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    DICT            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    A               reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    YARN            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    NUMBR           reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    NUMBAR          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    NOOB            reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    BUKKIT          reduce using rule 77 (expr -> SMALLR OF expr AN expr .)
    EXCLAMATION     reduce using rule 77 (expr -> SMALLR OF expr AN expr .)


state 183

    (78) expr -> BOTH OF expr AN expr .

    NEWLINE         reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    COMMA           reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    AN              reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    MKAY            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    I               reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    SIZE            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    ABSLUT          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    SUM             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    DIFF            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    PRODUKT         reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    QUOSHUNT        reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    MOD             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    BIGGR           reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    SMALLR          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    BOTH            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    EITHER          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    WON             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    NOT             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    ALL             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    ANY             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    DIFFRINT        reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    SMOOSH          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    MAEK            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    ID              reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    IT              reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    STRING          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    FLOAT           reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    INTEGER         reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    WIN             reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    FAIL            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    DICT            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    A               reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    YARN            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    NUMBR           reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    NUMBAR          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    NOOB            reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    BUKKIT          reduce using rule 78 (expr -> BOTH OF expr AN expr .)
    EXCLAMATION     reduce using rule 78 (expr -> BOTH OF expr AN expr .)


state 184

    (86) expr -> BOTH SAEM expr AN expr .

    NEWLINE         reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    COMMA           reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    AN              reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    MKAY            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    I               reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    SIZE            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    ABSLUT          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    SUM             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    DIFF            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    PRODUKT         reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    QUOSHUNT        reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    MOD             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    BIGGR           reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    SMALLR          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    BOTH            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    EITHER          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    WON             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    NOT             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    ALL             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    ANY             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    DIFFRINT        reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    SMOOSH          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    MAEK            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    ID              reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    IT              reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    STRING          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    FLOAT           reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    INTEGER         reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    WIN             reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    FAIL            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    DICT            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    A               reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    YARN            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    NUMBR           reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    NUMBAR          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    NOOB            reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    BUKKIT          reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)
    EXCLAMATION     reduce using rule 86 (expr -> BOTH SAEM expr AN expr .)


state 185

    (79) expr -> EITHER OF expr AN expr .

    NEWLINE         reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    COMMA           reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    AN              reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    MKAY            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    I               reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    SIZE            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    ABSLUT          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    SUM             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    DIFF            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    PRODUKT         reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    QUOSHUNT        reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    MOD             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    BIGGR           reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    SMALLR          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    BOTH            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    EITHER          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    WON             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    NOT             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    ALL             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    ANY             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    DIFFRINT        reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    SMOOSH          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    MAEK            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    ID              reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    IT              reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    STRING          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    FLOAT           reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    INTEGER         reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    WIN             reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    FAIL            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    DICT            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    A               reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    YARN            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    NUMBR           reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    NUMBAR          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    NOOB            reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    BUKKIT          reduce using rule 79 (expr -> EITHER OF expr AN expr .)
    EXCLAMATION     reduce using rule 79 (expr -> EITHER OF expr AN expr .)


state 186

    (80) expr -> WON OF expr AN expr .

    NEWLINE         reduce using rule 80 (expr -> WON OF expr AN expr .)
    COMMA           reduce using rule 80 (expr -> WON OF expr AN expr .)
    AN              reduce using rule 80 (expr -> WON OF expr AN expr .)
    MKAY            reduce using rule 80 (expr -> WON OF expr AN expr .)
    I               reduce using rule 80 (expr -> WON OF expr AN expr .)
    SIZE            reduce using rule 80 (expr -> WON OF expr AN expr .)
    ABSLUT          reduce using rule 80 (expr -> WON OF expr AN expr .)
    SUM             reduce using rule 80 (expr -> WON OF expr AN expr .)
    DIFF            reduce using rule 80 (expr -> WON OF expr AN expr .)
    PRODUKT         reduce using rule 80 (expr -> WON OF expr AN expr .)
    QUOSHUNT        reduce using rule 80 (expr -> WON OF expr AN expr .)
    MOD             reduce using rule 80 (expr -> WON OF expr AN expr .)
    BIGGR           reduce using rule 80 (expr -> WON OF expr AN expr .)
    SMALLR          reduce using rule 80 (expr -> WON OF expr AN expr .)
    BOTH            reduce using rule 80 (expr -> WON OF expr AN expr .)
    EITHER          reduce using rule 80 (expr -> WON OF expr AN expr .)
    WON             reduce using rule 80 (expr -> WON OF expr AN expr .)
    NOT             reduce using rule 80 (expr -> WON OF expr AN expr .)
    ALL             reduce using rule 80 (expr -> WON OF expr AN expr .)
    ANY             reduce using rule 80 (expr -> WON OF expr AN expr .)
    DIFFRINT        reduce using rule 80 (expr -> WON OF expr AN expr .)
    SMOOSH          reduce using rule 80 (expr -> WON OF expr AN expr .)
    MAEK            reduce using rule 80 (expr -> WON OF expr AN expr .)
    ID              reduce using rule 80 (expr -> WON OF expr AN expr .)
    IT              reduce using rule 80 (expr -> WON OF expr AN expr .)
    STRING          reduce using rule 80 (expr -> WON OF expr AN expr .)
    FLOAT           reduce using rule 80 (expr -> WON OF expr AN expr .)
    INTEGER         reduce using rule 80 (expr -> WON OF expr AN expr .)
    WIN             reduce using rule 80 (expr -> WON OF expr AN expr .)
    FAIL            reduce using rule 80 (expr -> WON OF expr AN expr .)
    DICT            reduce using rule 80 (expr -> WON OF expr AN expr .)
    A               reduce using rule 80 (expr -> WON OF expr AN expr .)
    YARN            reduce using rule 80 (expr -> WON OF expr AN expr .)
    NUMBR           reduce using rule 80 (expr -> WON OF expr AN expr .)
    NUMBAR          reduce using rule 80 (expr -> WON OF expr AN expr .)
    NOOB            reduce using rule 80 (expr -> WON OF expr AN expr .)
    BUKKIT          reduce using rule 80 (expr -> WON OF expr AN expr .)
    EXCLAMATION     reduce using rule 80 (expr -> WON OF expr AN expr .)


state 187

    (22) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements OIC
    (24) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 202


state 188

    (43) function -> HOW IZ I ID YR . sep_yr_args NEWLINE statements IF U SAY SO
    (41) sep_yr_args -> . sep_yr_args AN YR expr
    (42) sep_yr_args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    sep_yr_args                    shift and go to state 203
    expr                           shift and go to state 169
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 189

    (44) function -> HOW IZ I ID NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 204
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 190

    (45) function -> HOW IZ variable ID YR . sep_yr_args NEWLINE statements IF U SAY SO
    (41) sep_yr_args -> . sep_yr_args AN YR expr
    (42) sep_yr_args -> . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    sep_yr_args                    shift and go to state 205
    expr                           shift and go to state 169
    value                          shift and go to state 26

state 191

    (46) function -> HOW IZ variable ID NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    statements                     shift and go to state 206
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 192

    (17) loop -> IM IN YR variable operation . YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 207


state 193

    (18) operation -> UPPIN .

    YR              reduce using rule 18 (operation -> UPPIN .)


state 194

    (19) operation -> NERFIN .

    YR              reduce using rule 19 (operation -> NERFIN .)


state 195

    (49) expr -> variable IZ ID YR sep_yr_args MKAY .

    NEWLINE         reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    COMMA           reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    AN              reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    MKAY            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    I               reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    SIZE            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    ABSLUT          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    SUM             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    DIFF            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    PRODUKT         reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    QUOSHUNT        reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    MOD             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    BIGGR           reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    SMALLR          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    BOTH            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    EITHER          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    WON             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    NOT             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    ALL             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    ANY             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    DIFFRINT        reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    SMOOSH          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    MAEK            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    ID              reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    IT              reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    STRING          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    FLOAT           reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    INTEGER         reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    WIN             reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    FAIL            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    DICT            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    A               reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    YARN            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    NUMBR           reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    NUMBAR          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    NOOB            reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    BUKKIT          reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)
    EXCLAMATION     reduce using rule 49 (expr -> variable IZ ID YR sep_yr_args MKAY .)


state 196

    (41) sep_yr_args -> sep_yr_args AN . YR expr

    YR              shift and go to state 208


state 197

    (35) cast -> variable R MAEK variable A type .

    NEWLINE         reduce using rule 35 (cast -> variable R MAEK variable A type .)
    COMMA           reduce using rule 35 (cast -> variable R MAEK variable A type .)


state 198

    (31) assign_bukkit -> variable HAS A variable ITZ expr .

    NEWLINE         reduce using rule 31 (assign_bukkit -> variable HAS A variable ITZ expr .)
    COMMA           reduce using rule 31 (assign_bukkit -> variable HAS A variable ITZ expr .)


state 199

    (47) expr -> I IZ ID YR sep_yr_args MKAY .

    NEWLINE         reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    COMMA           reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    AN              reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MKAY            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    I               reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SIZE            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ABSLUT          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SUM             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DIFF            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    PRODUKT         reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    QUOSHUNT        reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MOD             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BIGGR           reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SMALLR          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BOTH            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    EITHER          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    WON             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NOT             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ALL             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ANY             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DIFFRINT        reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SMOOSH          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MAEK            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ID              reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    IT              reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    STRING          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    FLOAT           reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    INTEGER         reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    WIN             reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    FAIL            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DICT            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    A               reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    YARN            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NUMBR           reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NUMBAR          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NOOB            reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BUKKIT          reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)
    EXCLAMATION     reduce using rule 47 (expr -> I IZ ID YR sep_yr_args MKAY .)


state 200

    (30) decl -> I HAS A variable ITZ A . type
    (53) type -> . YARN
    (54) type -> . NUMBR
    (55) type -> . NUMBAR
    (56) type -> . NOOB
    (57) type -> . BUKKIT

    YARN            shift and go to state 129
    NUMBR           shift and go to state 130
    NUMBAR          shift and go to state 131
    NOOB            shift and go to state 132
    BUKKIT          shift and go to state 133

    type                           shift and go to state 209

state 201

    (29) decl -> I HAS A variable ITZ expr .

    NEWLINE         reduce using rule 29 (decl -> I HAS A variable ITZ expr .)
    COMMA           reduce using rule 29 (decl -> I HAS A variable ITZ expr .)


state 202

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements OIC
    (24) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 210


state 203

    (43) function -> HOW IZ I ID YR sep_yr_args . NEWLINE statements IF U SAY SO
    (41) sep_yr_args -> sep_yr_args . AN YR expr

    NEWLINE         shift and go to state 211
    AN              shift and go to state 196


state 204

    (44) function -> HOW IZ I ID NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    IF              shift and go to state 212
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 205

    (45) function -> HOW IZ variable ID YR sep_yr_args . NEWLINE statements IF U SAY SO
    (41) sep_yr_args -> sep_yr_args . AN YR expr

    NEWLINE         shift and go to state 213
    AN              shift and go to state 196


state 206

    (46) function -> HOW IZ variable ID NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    IF              shift and go to state 214
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 207

    (17) loop -> IM IN YR variable operation YR . variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 215

state 208

    (41) sep_yr_args -> sep_yr_args AN YR . expr
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 216
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 209

    (30) decl -> I HAS A variable ITZ A type .

    NEWLINE         reduce using rule 30 (decl -> I HAS A variable ITZ A type .)
    COMMA           reduce using rule 30 (decl -> I HAS A variable ITZ A type .)


state 210

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements OIC
    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements elifs NO WAI NEWLINE statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 217
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 211

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 218
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 212

    (44) function -> HOW IZ I ID NEWLINE statements IF . U SAY SO

    U               shift and go to state 219


state 213

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    statements                     shift and go to state 220
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 214

    (46) function -> HOW IZ variable ID NEWLINE statements IF . U SAY SO

    U               shift and go to state 221


state 215

    (17) loop -> IM IN YR variable operation YR variable . condition expr NEWLINE statements IM OUTTA YR variable
    (20) condition -> . TIL
    (21) condition -> . WILE

    TIL             shift and go to state 223
    WILE            shift and go to state 224

    condition                      shift and go to state 222

state 216

    (41) sep_yr_args -> sep_yr_args AN YR expr .

    MKAY            reduce using rule 41 (sep_yr_args -> sep_yr_args AN YR expr .)
    AN              reduce using rule 41 (sep_yr_args -> sep_yr_args AN YR expr .)
    NEWLINE         reduce using rule 41 (sep_yr_args -> sep_yr_args AN YR expr .)


state 217

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . NO WAI NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . OIC
    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . elifs NO WAI NEWLINE statements OIC
    (2) statements -> statements . statement
    (25) elifs -> . elifs elif
    (26) elifs -> . elif
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (27) elif -> . MEBBE expr NEWLINE statements
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NO              shift and go to state 225
    OIC             shift and go to state 226
    MEBBE           shift and go to state 229
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    elifs                          shift and go to state 227
    statement                      shift and go to state 57
    elif                           shift and go to state 228
    command                        shift and go to state 9
    expr                           shift and go to state 11
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 218

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    IF              shift and go to state 230
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 219

    (44) function -> HOW IZ I ID NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 231


state 220

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    IF              shift and go to state 232
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 221

    (46) function -> HOW IZ variable ID NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 233


state 222

    (17) loop -> IM IN YR variable operation YR variable condition . expr NEWLINE statements IM OUTTA YR variable
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 81
    expr                           shift and go to state 234
    value                          shift and go to state 26

state 223

    (20) condition -> TIL .

    I               reduce using rule 20 (condition -> TIL .)
    SIZE            reduce using rule 20 (condition -> TIL .)
    ABSLUT          reduce using rule 20 (condition -> TIL .)
    SUM             reduce using rule 20 (condition -> TIL .)
    DIFF            reduce using rule 20 (condition -> TIL .)
    PRODUKT         reduce using rule 20 (condition -> TIL .)
    QUOSHUNT        reduce using rule 20 (condition -> TIL .)
    MOD             reduce using rule 20 (condition -> TIL .)
    BIGGR           reduce using rule 20 (condition -> TIL .)
    SMALLR          reduce using rule 20 (condition -> TIL .)
    BOTH            reduce using rule 20 (condition -> TIL .)
    EITHER          reduce using rule 20 (condition -> TIL .)
    WON             reduce using rule 20 (condition -> TIL .)
    NOT             reduce using rule 20 (condition -> TIL .)
    ALL             reduce using rule 20 (condition -> TIL .)
    ANY             reduce using rule 20 (condition -> TIL .)
    DIFFRINT        reduce using rule 20 (condition -> TIL .)
    SMOOSH          reduce using rule 20 (condition -> TIL .)
    MAEK            reduce using rule 20 (condition -> TIL .)
    ID              reduce using rule 20 (condition -> TIL .)
    IT              reduce using rule 20 (condition -> TIL .)
    STRING          reduce using rule 20 (condition -> TIL .)
    FLOAT           reduce using rule 20 (condition -> TIL .)
    INTEGER         reduce using rule 20 (condition -> TIL .)
    WIN             reduce using rule 20 (condition -> TIL .)
    FAIL            reduce using rule 20 (condition -> TIL .)
    DICT            reduce using rule 20 (condition -> TIL .)


state 224

    (21) condition -> WILE .

    I               reduce using rule 21 (condition -> WILE .)
    SIZE            reduce using rule 21 (condition -> WILE .)
    ABSLUT          reduce using rule 21 (condition -> WILE .)
    SUM             reduce using rule 21 (condition -> WILE .)
    DIFF            reduce using rule 21 (condition -> WILE .)
    PRODUKT         reduce using rule 21 (condition -> WILE .)
    QUOSHUNT        reduce using rule 21 (condition -> WILE .)
    MOD             reduce using rule 21 (condition -> WILE .)
    BIGGR           reduce using rule 21 (condition -> WILE .)
    SMALLR          reduce using rule 21 (condition -> WILE .)
    BOTH            reduce using rule 21 (condition -> WILE .)
    EITHER          reduce using rule 21 (condition -> WILE .)
    WON             reduce using rule 21 (condition -> WILE .)
    NOT             reduce using rule 21 (condition -> WILE .)
    ALL             reduce using rule 21 (condition -> WILE .)
    ANY             reduce using rule 21 (condition -> WILE .)
    DIFFRINT        reduce using rule 21 (condition -> WILE .)
    SMOOSH          reduce using rule 21 (condition -> WILE .)
    MAEK            reduce using rule 21 (condition -> WILE .)
    ID              reduce using rule 21 (condition -> WILE .)
    IT              reduce using rule 21 (condition -> WILE .)
    STRING          reduce using rule 21 (condition -> WILE .)
    FLOAT           reduce using rule 21 (condition -> WILE .)
    INTEGER         reduce using rule 21 (condition -> WILE .)
    WIN             reduce using rule 21 (condition -> WILE .)
    FAIL            reduce using rule 21 (condition -> WILE .)
    DICT            reduce using rule 21 (condition -> WILE .)


state 225

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 235


state 226

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .

    NEWLINE         reduce using rule 23 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)
    COMMA           reduce using rule 23 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)


state 227

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs . NO WAI NEWLINE statements OIC
    (25) elifs -> elifs . elif
    (27) elif -> . MEBBE expr NEWLINE statements

    NO              shift and go to state 236
    MEBBE           shift and go to state 229

    elif                           shift and go to state 237

state 228

    (26) elifs -> elif .

    NO              reduce using rule 26 (elifs -> elif .)
    MEBBE           reduce using rule 26 (elifs -> elif .)


state 229

    (27) elif -> MEBBE . expr NEWLINE statements
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    I               shift and go to state 82
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 238
    variable                       shift and go to state 81
    value                          shift and go to state 26

state 230

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF . U SAY SO

    U               shift and go to state 239


state 231

    (44) function -> HOW IZ I ID NEWLINE statements IF U SAY . SO

    SO              shift and go to state 240


state 232

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF . U SAY SO

    U               shift and go to state 241


state 233

    (46) function -> HOW IZ variable ID NEWLINE statements IF U SAY . SO

    SO              shift and go to state 242


state 234

    (17) loop -> IM IN YR variable operation YR variable condition expr . NEWLINE statements IM OUTTA YR variable

    NEWLINE         shift and go to state 243


state 235

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 244


state 236

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 245


state 237

    (25) elifs -> elifs elif .

    NO              reduce using rule 25 (elifs -> elifs elif .)
    MEBBE           reduce using rule 25 (elifs -> elifs elif .)


state 238

    (27) elif -> MEBBE expr . NEWLINE statements

    NEWLINE         shift and go to state 246


state 239

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 247


state 240

    (44) function -> HOW IZ I ID NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 44 (function -> HOW IZ I ID NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 44 (function -> HOW IZ I ID NEWLINE statements IF U SAY SO .)


state 241

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 248


state 242

    (46) function -> HOW IZ variable ID NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 46 (function -> HOW IZ variable ID NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 46 (function -> HOW IZ variable ID NEWLINE statements IF U SAY SO .)


state 243

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE . statements IM OUTTA YR variable
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    expr                           shift and go to state 11
    statements                     shift and go to state 249
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 244

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 250
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 245

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 251


state 246

    (27) elif -> MEBBE expr NEWLINE . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 11
    statements                     shift and go to state 252
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 247

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY . SO

    SO              shift and go to state 253


state 248

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY . SO

    SO              shift and go to state 254


state 249

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements . IM OUTTA YR variable
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    IM              shift and go to state 255
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    variable                       shift and go to state 21
    expr                           shift and go to state 11
    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    value                          shift and go to state 26

state 250

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    OIC             shift and go to state 256
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 251

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statements                     shift and go to state 257
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 252

    (27) elif -> MEBBE expr NEWLINE statements .
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    NO              reduce using rule 27 (elif -> MEBBE expr NEWLINE statements .)
    MEBBE           reduce using rule 27 (elif -> MEBBE expr NEWLINE statements .)
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    expr                           shift and go to state 11
    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 253

    (43) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 43 (function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 43 (function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .)


state 254

    (45) function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 45 (function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 45 (function -> HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO .)


state 255

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM . OUTTA YR variable
    (17) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    OUTTA           shift and go to state 258
    IN              shift and go to state 96


state 256

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 22 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 22 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)


state 257

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . return
    (16) command -> . loop
    (95) empty -> .
    (33) expr -> . variable APOSTROPHE_Z variable
    (47) expr -> . I IZ ID YR sep_yr_args MKAY
    (48) expr -> . I IZ ID
    (49) expr -> . variable IZ ID YR sep_yr_args MKAY
    (50) expr -> . variable IZ ID
    (67) expr -> . SIZE OF expr
    (68) expr -> . ABSLUT OF expr
    (69) expr -> . value
    (70) expr -> . variable
    (71) expr -> . SUM OF expr AN expr
    (72) expr -> . DIFF OF expr AN expr
    (73) expr -> . PRODUKT OF expr AN expr
    (74) expr -> . QUOSHUNT OF expr AN expr
    (75) expr -> . MOD OF expr AN expr
    (76) expr -> . BIGGR OF expr AN expr
    (77) expr -> . SMALLR OF expr AN expr
    (78) expr -> . BOTH OF expr AN expr
    (79) expr -> . EITHER OF expr AN expr
    (80) expr -> . WON OF expr AN expr
    (81) expr -> . NOT expr
    (82) expr -> . ALL OF sep_args MKAY
    (83) expr -> . ANY OF sep_args MKAY
    (84) expr -> . ALL OF args MKAY
    (85) expr -> . ANY OF args MKAY
    (86) expr -> . BOTH SAEM expr AN expr
    (87) expr -> . DIFFRINT expr AN expr
    (88) expr -> . SMOOSH sep_args MKAY
    (89) expr -> . SMOOSH args MKAY
    (90) expr -> . MAEK expr A type
    (91) expr -> . MAEK expr type
    (64) call -> . VISIBLE args
    (65) call -> . VISIBLE args EXCLAMATION
    (66) call -> . GIMMEH variable
    (34) cast -> . variable IS NOW A type
    (35) cast -> . variable R MAEK variable A type
    (36) cast -> . variable R MAEK variable type
    (28) decl -> . I HAS A variable
    (29) decl -> . I HAS A variable ITZ expr
    (30) decl -> . I HAS A variable ITZ A type
    (31) assign_bukkit -> . variable HAS A variable ITZ expr
    (32) assign -> . variable R expr
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (24) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (43) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (44) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (45) function -> . HOW IZ variable ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (46) function -> . HOW IZ variable ID NEWLINE statements IF U SAY SO
    (51) return -> . FOUND YR expr
    (52) return -> . GTFO
    (17) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (92) variable -> . ID
    (93) variable -> . IT
    (58) value -> . STRING
    (59) value -> . FLOAT
    (60) value -> . INTEGER
    (61) value -> . WIN
    (62) value -> . FAIL
    (63) value -> . DICT

    OIC             shift and go to state 259
    NEWLINE         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    I               shift and go to state 22
    SIZE            shift and go to state 24
    ABSLUT          shift and go to state 25
    SUM             shift and go to state 27
    DIFF            shift and go to state 28
    PRODUKT         shift and go to state 29
    QUOSHUNT        shift and go to state 30
    MOD             shift and go to state 31
    BIGGR           shift and go to state 32
    SMALLR          shift and go to state 33
    BOTH            shift and go to state 34
    EITHER          shift and go to state 35
    WON             shift and go to state 36
    NOT             shift and go to state 37
    ALL             shift and go to state 38
    ANY             shift and go to state 39
    DIFFRINT        shift and go to state 40
    SMOOSH          shift and go to state 41
    MAEK            shift and go to state 42
    VISIBLE         shift and go to state 43
    GIMMEH          shift and go to state 44
    O               shift and go to state 45
    HOW             shift and go to state 46
    FOUND           shift and go to state 47
    GTFO            shift and go to state 48
    IM              shift and go to state 49
    ID              shift and go to state 23
    IT              shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 52
    WIN             shift and go to state 53
    FAIL            shift and go to state 54
    DICT            shift and go to state 55

    statement                      shift and go to state 57
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    return                         shift and go to state 19
    loop                           shift and go to state 20
    variable                       shift and go to state 21
    value                          shift and go to state 26

state 258

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA . YR variable

    YR              shift and go to state 260


state 259

    (24) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 24 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 24 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)


state 260

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR . variable
    (92) variable -> . ID
    (93) variable -> . IT

    ID              shift and go to state 23
    IT              shift and go to state 50

    variable                       shift and go to state 261

state 261

    (17) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .

    NEWLINE         reduce using rule 17 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)
    COMMA           reduce using rule 17 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for A in state 142 resolved as shift
WARNING: shift/reduce conflict for YARN in state 142 resolved as shift
WARNING: shift/reduce conflict for NUMBR in state 142 resolved as shift
WARNING: shift/reduce conflict for NUMBAR in state 142 resolved as shift
WARNING: shift/reduce conflict for NOOB in state 142 resolved as shift
WARNING: shift/reduce conflict for BUKKIT in state 142 resolved as shift
WARNING: reduce/reduce conflict in state 88 resolved using rule (args -> expr)
WARNING: rejected rule (sep_args -> expr) in state 88

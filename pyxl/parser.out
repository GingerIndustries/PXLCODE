Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BUKKIT
    ELLIPSIS
    GTFO
    OMG
    OMGWTF
    TROOF
    WTF

Grammar

Rule 0     S' -> program
Rule 1     program -> HAI FLOAT NEWLINE statements KTHXBYE
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> command NEWLINE
Rule 5     statement -> command COMMA
Rule 6     command -> empty
Rule 7     command -> expr
Rule 8     command -> call
Rule 9     command -> cast
Rule 10    command -> decl
Rule 11    command -> assign
Rule 12    command -> if_else
Rule 13    command -> loop
Rule 14    loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
Rule 15    operation -> UPPIN
Rule 16    operation -> NERFIN
Rule 17    condition -> TIL
Rule 18    condition -> WILE
Rule 19    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
Rule 20    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
Rule 21    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
Rule 22    elifs -> elifs elif
Rule 23    elifs -> elif
Rule 24    elif -> MEBBE expr NEWLINE statements
Rule 25    decl -> I HAS A variable
Rule 26    decl -> I HAS A variable ITZ value
Rule 27    assign -> variable R expr
Rule 28    cast -> variable IS NOW A type
Rule 29    cast -> variable R MAEK variable A type
Rule 30    cast -> variable R MAEK variable type
Rule 31    args -> args expr
Rule 32    args -> expr
Rule 33    sep_args -> sep_args AN expr
Rule 34    sep_args -> expr
Rule 35    type -> YARN
Rule 36    type -> NUMBR
Rule 37    type -> NUMBAR
Rule 38    type -> NOOB
Rule 39    value -> STRING
Rule 40    value -> FLOAT
Rule 41    value -> INTEGER
Rule 42    value -> WIN
Rule 43    value -> FAIL
Rule 44    call -> VISIBLE args
Rule 45    call -> VISIBLE args EXCLAMATION
Rule 46    call -> GIMMEH variable
Rule 47    expr -> SIZE OF expr
Rule 48    expr -> ABSLUT OF expr
Rule 49    expr -> value
Rule 50    expr -> variable
Rule 51    expr -> SUM OF expr AN expr
Rule 52    expr -> DIFF OF expr AN expr
Rule 53    expr -> PRODUKT OF expr AN expr
Rule 54    expr -> QUOSHUNT OF expr AN expr
Rule 55    expr -> MOD OF expr AN expr
Rule 56    expr -> BIGGR OF expr AN expr
Rule 57    expr -> SMALLR OF expr AN expr
Rule 58    expr -> BOTH OF expr AN expr
Rule 59    expr -> EITHER OF expr AN expr
Rule 60    expr -> WON OF expr AN expr
Rule 61    expr -> NOT expr
Rule 62    expr -> ALL OF sep_args MKAY
Rule 63    expr -> ANY OF sep_args MKAY
Rule 64    expr -> ALL OF args MKAY
Rule 65    expr -> ANY OF args MKAY
Rule 66    expr -> BOTH SAEM expr AN expr
Rule 67    expr -> DIFFRINT expr AN expr
Rule 68    expr -> SMOOSH sep_args MKAY
Rule 69    expr -> SMOOSH args MKAY
Rule 70    expr -> MAEK expr A type
Rule 71    expr -> MAEK expr type
Rule 72    variable -> ID
Rule 73    variable -> IT
Rule 74    program -> error
Rule 75    empty -> <empty>

Terminals, with rules where they appear

A                    : 25 26 28 29 70
ABSLUT               : 48
ALL                  : 62 64
AN                   : 33 51 52 53 54 55 56 57 58 59 60 66 67
ANY                  : 63 65
BIGGR                : 56
BOTH                 : 58 66
BUKKIT               : 
COMMA                : 5
DIFF                 : 52
DIFFRINT             : 67
EITHER               : 59
ELLIPSIS             : 
EXCLAMATION          : 45
FAIL                 : 43
FLOAT                : 1 40
GIMMEH               : 46
GTFO                 : 
HAI                  : 1
HAS                  : 25 26
I                    : 25 26
ID                   : 72
IM                   : 14 14
IN                   : 14
INTEGER              : 41
IS                   : 28
IT                   : 73
ITZ                  : 26
KTHXBYE              : 1
MAEK                 : 29 30 70 71
MEBBE                : 24
MKAY                 : 62 63 64 65 68 69
MOD                  : 55
NERFIN               : 16
NEWLINE              : 1 4 14 19 19 19 20 20 21 21 21 24
NO                   : 19 21
NOOB                 : 38
NOT                  : 61
NOW                  : 28
NUMBAR               : 37
NUMBR                : 36
O                    : 19 20 21
OF                   : 47 48 51 52 53 54 55 56 57 58 59 60 62 63 64 65
OIC                  : 19 20 21
OMG                  : 
OMGWTF               : 
OUTTA                : 14
PRODUKT              : 53
QUESTION             : 19 20 21
QUOSHUNT             : 54
R                    : 27 29 30
RLY                  : 19 19 20 20 21 21
SAEM                 : 66
SIZE                 : 47
SMALLR               : 57
SMOOSH               : 68 69
STRING               : 39
SUM                  : 51
TIL                  : 17
TROOF                : 
UPPIN                : 15
VISIBLE              : 44 45
WAI                  : 19 21
WILE                 : 18
WIN                  : 42
WON                  : 60
WTF                  : 
YA                   : 19 20 21
YARN                 : 35
YR                   : 14 14 14
error                : 74

Nonterminals, with rules where they appear

args                 : 31 44 45 64 65 69
assign               : 11
call                 : 8
cast                 : 9
command              : 4 5
condition            : 14
decl                 : 10
elif                 : 22 23
elifs                : 21 22
empty                : 6
expr                 : 7 14 24 27 31 32 33 34 47 48 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 66 66 67 67 70 71
if_else              : 12
loop                 : 13
operation            : 14
program              : 0
sep_args             : 33 62 63 68
statement            : 2 3
statements           : 1 2 14 19 19 20 21 21 24
type                 : 28 29 30 70 71
value                : 26 49
variable             : 14 14 14 25 26 27 28 29 29 30 30 46 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . HAI FLOAT NEWLINE statements KTHXBYE
    (74) program -> . error

    HAI             shift and go to state 2
    error           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> HAI . FLOAT NEWLINE statements KTHXBYE

    FLOAT           shift and go to state 4


state 3

    (74) program -> error .

    $end            reduce using rule 74 (program -> error .)


state 4

    (1) program -> HAI FLOAT . NEWLINE statements KTHXBYE

    NEWLINE         shift and go to state 5


state 5

    (1) program -> HAI FLOAT NEWLINE . statements KTHXBYE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statements                     shift and go to state 7
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 6

    (40) value -> FLOAT .

    NEWLINE         reduce using rule 40 (value -> FLOAT .)
    COMMA           reduce using rule 40 (value -> FLOAT .)
    AN              reduce using rule 40 (value -> FLOAT .)
    MKAY            reduce using rule 40 (value -> FLOAT .)
    SIZE            reduce using rule 40 (value -> FLOAT .)
    ABSLUT          reduce using rule 40 (value -> FLOAT .)
    SUM             reduce using rule 40 (value -> FLOAT .)
    DIFF            reduce using rule 40 (value -> FLOAT .)
    PRODUKT         reduce using rule 40 (value -> FLOAT .)
    QUOSHUNT        reduce using rule 40 (value -> FLOAT .)
    MOD             reduce using rule 40 (value -> FLOAT .)
    BIGGR           reduce using rule 40 (value -> FLOAT .)
    SMALLR          reduce using rule 40 (value -> FLOAT .)
    BOTH            reduce using rule 40 (value -> FLOAT .)
    EITHER          reduce using rule 40 (value -> FLOAT .)
    WON             reduce using rule 40 (value -> FLOAT .)
    NOT             reduce using rule 40 (value -> FLOAT .)
    ALL             reduce using rule 40 (value -> FLOAT .)
    ANY             reduce using rule 40 (value -> FLOAT .)
    DIFFRINT        reduce using rule 40 (value -> FLOAT .)
    SMOOSH          reduce using rule 40 (value -> FLOAT .)
    MAEK            reduce using rule 40 (value -> FLOAT .)
    STRING          reduce using rule 40 (value -> FLOAT .)
    FLOAT           reduce using rule 40 (value -> FLOAT .)
    INTEGER         reduce using rule 40 (value -> FLOAT .)
    WIN             reduce using rule 40 (value -> FLOAT .)
    FAIL            reduce using rule 40 (value -> FLOAT .)
    ID              reduce using rule 40 (value -> FLOAT .)
    IT              reduce using rule 40 (value -> FLOAT .)
    A               reduce using rule 40 (value -> FLOAT .)
    YARN            reduce using rule 40 (value -> FLOAT .)
    NUMBR           reduce using rule 40 (value -> FLOAT .)
    NUMBAR          reduce using rule 40 (value -> FLOAT .)
    NOOB            reduce using rule 40 (value -> FLOAT .)
    EXCLAMATION     reduce using rule 40 (value -> FLOAT .)


state 7

    (1) program -> HAI FLOAT NEWLINE statements . KTHXBYE
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    KTHXBYE         shift and go to state 49
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statement                      shift and go to state 50
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 8

    (3) statements -> statement .

    KTHXBYE         reduce using rule 3 (statements -> statement .)
    SIZE            reduce using rule 3 (statements -> statement .)
    ABSLUT          reduce using rule 3 (statements -> statement .)
    SUM             reduce using rule 3 (statements -> statement .)
    DIFF            reduce using rule 3 (statements -> statement .)
    PRODUKT         reduce using rule 3 (statements -> statement .)
    QUOSHUNT        reduce using rule 3 (statements -> statement .)
    MOD             reduce using rule 3 (statements -> statement .)
    BIGGR           reduce using rule 3 (statements -> statement .)
    SMALLR          reduce using rule 3 (statements -> statement .)
    BOTH            reduce using rule 3 (statements -> statement .)
    EITHER          reduce using rule 3 (statements -> statement .)
    WON             reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    ALL             reduce using rule 3 (statements -> statement .)
    ANY             reduce using rule 3 (statements -> statement .)
    DIFFRINT        reduce using rule 3 (statements -> statement .)
    SMOOSH          reduce using rule 3 (statements -> statement .)
    MAEK            reduce using rule 3 (statements -> statement .)
    VISIBLE         reduce using rule 3 (statements -> statement .)
    GIMMEH          reduce using rule 3 (statements -> statement .)
    I               reduce using rule 3 (statements -> statement .)
    O               reduce using rule 3 (statements -> statement .)
    IM              reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    INTEGER         reduce using rule 3 (statements -> statement .)
    WIN             reduce using rule 3 (statements -> statement .)
    FAIL            reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    IT              reduce using rule 3 (statements -> statement .)
    NEWLINE         reduce using rule 3 (statements -> statement .)
    COMMA           reduce using rule 3 (statements -> statement .)
    NO              reduce using rule 3 (statements -> statement .)
    OIC             reduce using rule 3 (statements -> statement .)
    MEBBE           reduce using rule 3 (statements -> statement .)


state 9

    (4) statement -> command . NEWLINE
    (5) statement -> command . COMMA

    NEWLINE         shift and go to state 51
    COMMA           shift and go to state 52


state 10

    (6) command -> empty .

    NEWLINE         reduce using rule 6 (command -> empty .)
    COMMA           reduce using rule 6 (command -> empty .)


state 11

    (7) command -> expr .

    NEWLINE         reduce using rule 7 (command -> expr .)
    COMMA           reduce using rule 7 (command -> expr .)


state 12

    (8) command -> call .

    NEWLINE         reduce using rule 8 (command -> call .)
    COMMA           reduce using rule 8 (command -> call .)


state 13

    (9) command -> cast .

    NEWLINE         reduce using rule 9 (command -> cast .)
    COMMA           reduce using rule 9 (command -> cast .)


state 14

    (10) command -> decl .

    NEWLINE         reduce using rule 10 (command -> decl .)
    COMMA           reduce using rule 10 (command -> decl .)


state 15

    (11) command -> assign .

    NEWLINE         reduce using rule 11 (command -> assign .)
    COMMA           reduce using rule 11 (command -> assign .)


state 16

    (12) command -> if_else .

    NEWLINE         reduce using rule 12 (command -> if_else .)
    COMMA           reduce using rule 12 (command -> if_else .)


state 17

    (13) command -> loop .

    NEWLINE         reduce using rule 13 (command -> loop .)
    COMMA           reduce using rule 13 (command -> loop .)


state 18

    (47) expr -> SIZE . OF expr

    OF              shift and go to state 53


state 19

    (48) expr -> ABSLUT . OF expr

    OF              shift and go to state 54


state 20

    (49) expr -> value .

    NEWLINE         reduce using rule 49 (expr -> value .)
    COMMA           reduce using rule 49 (expr -> value .)
    AN              reduce using rule 49 (expr -> value .)
    MKAY            reduce using rule 49 (expr -> value .)
    SIZE            reduce using rule 49 (expr -> value .)
    ABSLUT          reduce using rule 49 (expr -> value .)
    SUM             reduce using rule 49 (expr -> value .)
    DIFF            reduce using rule 49 (expr -> value .)
    PRODUKT         reduce using rule 49 (expr -> value .)
    QUOSHUNT        reduce using rule 49 (expr -> value .)
    MOD             reduce using rule 49 (expr -> value .)
    BIGGR           reduce using rule 49 (expr -> value .)
    SMALLR          reduce using rule 49 (expr -> value .)
    BOTH            reduce using rule 49 (expr -> value .)
    EITHER          reduce using rule 49 (expr -> value .)
    WON             reduce using rule 49 (expr -> value .)
    NOT             reduce using rule 49 (expr -> value .)
    ALL             reduce using rule 49 (expr -> value .)
    ANY             reduce using rule 49 (expr -> value .)
    DIFFRINT        reduce using rule 49 (expr -> value .)
    SMOOSH          reduce using rule 49 (expr -> value .)
    MAEK            reduce using rule 49 (expr -> value .)
    STRING          reduce using rule 49 (expr -> value .)
    FLOAT           reduce using rule 49 (expr -> value .)
    INTEGER         reduce using rule 49 (expr -> value .)
    WIN             reduce using rule 49 (expr -> value .)
    FAIL            reduce using rule 49 (expr -> value .)
    ID              reduce using rule 49 (expr -> value .)
    IT              reduce using rule 49 (expr -> value .)
    A               reduce using rule 49 (expr -> value .)
    YARN            reduce using rule 49 (expr -> value .)
    NUMBR           reduce using rule 49 (expr -> value .)
    NUMBAR          reduce using rule 49 (expr -> value .)
    NOOB            reduce using rule 49 (expr -> value .)
    EXCLAMATION     reduce using rule 49 (expr -> value .)


state 21

    (50) expr -> variable .
    (28) cast -> variable . IS NOW A type
    (29) cast -> variable . R MAEK variable A type
    (30) cast -> variable . R MAEK variable type
    (27) assign -> variable . R expr

    NEWLINE         reduce using rule 50 (expr -> variable .)
    COMMA           reduce using rule 50 (expr -> variable .)
    IS              shift and go to state 55
    R               shift and go to state 56


state 22

    (51) expr -> SUM . OF expr AN expr

    OF              shift and go to state 57


state 23

    (52) expr -> DIFF . OF expr AN expr

    OF              shift and go to state 58


state 24

    (53) expr -> PRODUKT . OF expr AN expr

    OF              shift and go to state 59


state 25

    (54) expr -> QUOSHUNT . OF expr AN expr

    OF              shift and go to state 60


state 26

    (55) expr -> MOD . OF expr AN expr

    OF              shift and go to state 61


state 27

    (56) expr -> BIGGR . OF expr AN expr

    OF              shift and go to state 62


state 28

    (57) expr -> SMALLR . OF expr AN expr

    OF              shift and go to state 63


state 29

    (58) expr -> BOTH . OF expr AN expr
    (66) expr -> BOTH . SAEM expr AN expr

    OF              shift and go to state 64
    SAEM            shift and go to state 65


state 30

    (59) expr -> EITHER . OF expr AN expr

    OF              shift and go to state 66


state 31

    (60) expr -> WON . OF expr AN expr

    OF              shift and go to state 67


state 32

    (61) expr -> NOT . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 68
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 33

    (62) expr -> ALL . OF sep_args MKAY
    (64) expr -> ALL . OF args MKAY

    OF              shift and go to state 70


state 34

    (63) expr -> ANY . OF sep_args MKAY
    (65) expr -> ANY . OF args MKAY

    OF              shift and go to state 71


state 35

    (67) expr -> DIFFRINT . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 72
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 36

    (68) expr -> SMOOSH . sep_args MKAY
    (69) expr -> SMOOSH . args MKAY
    (33) sep_args -> . sep_args AN expr
    (34) sep_args -> . expr
    (31) args -> . args expr
    (32) args -> . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    sep_args                       shift and go to state 73
    args                           shift and go to state 74
    expr                           shift and go to state 75
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 37

    (70) expr -> MAEK . expr A type
    (71) expr -> MAEK . expr type
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 76
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 38

    (44) call -> VISIBLE . args
    (45) call -> VISIBLE . args EXCLAMATION
    (31) args -> . args expr
    (32) args -> . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    args                           shift and go to state 77
    expr                           shift and go to state 78
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 39

    (46) call -> GIMMEH . variable
    (72) variable -> . ID
    (73) variable -> . IT

    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 79

state 40

    (25) decl -> I . HAS A variable
    (26) decl -> I . HAS A variable ITZ value

    HAS             shift and go to state 80


state 41

    (19) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 81


state 42

    (14) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    IN              shift and go to state 82


state 43

    (39) value -> STRING .

    NEWLINE         reduce using rule 39 (value -> STRING .)
    COMMA           reduce using rule 39 (value -> STRING .)
    AN              reduce using rule 39 (value -> STRING .)
    MKAY            reduce using rule 39 (value -> STRING .)
    SIZE            reduce using rule 39 (value -> STRING .)
    ABSLUT          reduce using rule 39 (value -> STRING .)
    SUM             reduce using rule 39 (value -> STRING .)
    DIFF            reduce using rule 39 (value -> STRING .)
    PRODUKT         reduce using rule 39 (value -> STRING .)
    QUOSHUNT        reduce using rule 39 (value -> STRING .)
    MOD             reduce using rule 39 (value -> STRING .)
    BIGGR           reduce using rule 39 (value -> STRING .)
    SMALLR          reduce using rule 39 (value -> STRING .)
    BOTH            reduce using rule 39 (value -> STRING .)
    EITHER          reduce using rule 39 (value -> STRING .)
    WON             reduce using rule 39 (value -> STRING .)
    NOT             reduce using rule 39 (value -> STRING .)
    ALL             reduce using rule 39 (value -> STRING .)
    ANY             reduce using rule 39 (value -> STRING .)
    DIFFRINT        reduce using rule 39 (value -> STRING .)
    SMOOSH          reduce using rule 39 (value -> STRING .)
    MAEK            reduce using rule 39 (value -> STRING .)
    STRING          reduce using rule 39 (value -> STRING .)
    FLOAT           reduce using rule 39 (value -> STRING .)
    INTEGER         reduce using rule 39 (value -> STRING .)
    WIN             reduce using rule 39 (value -> STRING .)
    FAIL            reduce using rule 39 (value -> STRING .)
    ID              reduce using rule 39 (value -> STRING .)
    IT              reduce using rule 39 (value -> STRING .)
    A               reduce using rule 39 (value -> STRING .)
    YARN            reduce using rule 39 (value -> STRING .)
    NUMBR           reduce using rule 39 (value -> STRING .)
    NUMBAR          reduce using rule 39 (value -> STRING .)
    NOOB            reduce using rule 39 (value -> STRING .)
    EXCLAMATION     reduce using rule 39 (value -> STRING .)


state 44

    (41) value -> INTEGER .

    NEWLINE         reduce using rule 41 (value -> INTEGER .)
    COMMA           reduce using rule 41 (value -> INTEGER .)
    AN              reduce using rule 41 (value -> INTEGER .)
    MKAY            reduce using rule 41 (value -> INTEGER .)
    SIZE            reduce using rule 41 (value -> INTEGER .)
    ABSLUT          reduce using rule 41 (value -> INTEGER .)
    SUM             reduce using rule 41 (value -> INTEGER .)
    DIFF            reduce using rule 41 (value -> INTEGER .)
    PRODUKT         reduce using rule 41 (value -> INTEGER .)
    QUOSHUNT        reduce using rule 41 (value -> INTEGER .)
    MOD             reduce using rule 41 (value -> INTEGER .)
    BIGGR           reduce using rule 41 (value -> INTEGER .)
    SMALLR          reduce using rule 41 (value -> INTEGER .)
    BOTH            reduce using rule 41 (value -> INTEGER .)
    EITHER          reduce using rule 41 (value -> INTEGER .)
    WON             reduce using rule 41 (value -> INTEGER .)
    NOT             reduce using rule 41 (value -> INTEGER .)
    ALL             reduce using rule 41 (value -> INTEGER .)
    ANY             reduce using rule 41 (value -> INTEGER .)
    DIFFRINT        reduce using rule 41 (value -> INTEGER .)
    SMOOSH          reduce using rule 41 (value -> INTEGER .)
    MAEK            reduce using rule 41 (value -> INTEGER .)
    STRING          reduce using rule 41 (value -> INTEGER .)
    FLOAT           reduce using rule 41 (value -> INTEGER .)
    INTEGER         reduce using rule 41 (value -> INTEGER .)
    WIN             reduce using rule 41 (value -> INTEGER .)
    FAIL            reduce using rule 41 (value -> INTEGER .)
    ID              reduce using rule 41 (value -> INTEGER .)
    IT              reduce using rule 41 (value -> INTEGER .)
    A               reduce using rule 41 (value -> INTEGER .)
    YARN            reduce using rule 41 (value -> INTEGER .)
    NUMBR           reduce using rule 41 (value -> INTEGER .)
    NUMBAR          reduce using rule 41 (value -> INTEGER .)
    NOOB            reduce using rule 41 (value -> INTEGER .)
    EXCLAMATION     reduce using rule 41 (value -> INTEGER .)


state 45

    (42) value -> WIN .

    NEWLINE         reduce using rule 42 (value -> WIN .)
    COMMA           reduce using rule 42 (value -> WIN .)
    AN              reduce using rule 42 (value -> WIN .)
    MKAY            reduce using rule 42 (value -> WIN .)
    SIZE            reduce using rule 42 (value -> WIN .)
    ABSLUT          reduce using rule 42 (value -> WIN .)
    SUM             reduce using rule 42 (value -> WIN .)
    DIFF            reduce using rule 42 (value -> WIN .)
    PRODUKT         reduce using rule 42 (value -> WIN .)
    QUOSHUNT        reduce using rule 42 (value -> WIN .)
    MOD             reduce using rule 42 (value -> WIN .)
    BIGGR           reduce using rule 42 (value -> WIN .)
    SMALLR          reduce using rule 42 (value -> WIN .)
    BOTH            reduce using rule 42 (value -> WIN .)
    EITHER          reduce using rule 42 (value -> WIN .)
    WON             reduce using rule 42 (value -> WIN .)
    NOT             reduce using rule 42 (value -> WIN .)
    ALL             reduce using rule 42 (value -> WIN .)
    ANY             reduce using rule 42 (value -> WIN .)
    DIFFRINT        reduce using rule 42 (value -> WIN .)
    SMOOSH          reduce using rule 42 (value -> WIN .)
    MAEK            reduce using rule 42 (value -> WIN .)
    STRING          reduce using rule 42 (value -> WIN .)
    FLOAT           reduce using rule 42 (value -> WIN .)
    INTEGER         reduce using rule 42 (value -> WIN .)
    WIN             reduce using rule 42 (value -> WIN .)
    FAIL            reduce using rule 42 (value -> WIN .)
    ID              reduce using rule 42 (value -> WIN .)
    IT              reduce using rule 42 (value -> WIN .)
    A               reduce using rule 42 (value -> WIN .)
    YARN            reduce using rule 42 (value -> WIN .)
    NUMBR           reduce using rule 42 (value -> WIN .)
    NUMBAR          reduce using rule 42 (value -> WIN .)
    NOOB            reduce using rule 42 (value -> WIN .)
    EXCLAMATION     reduce using rule 42 (value -> WIN .)


state 46

    (43) value -> FAIL .

    NEWLINE         reduce using rule 43 (value -> FAIL .)
    COMMA           reduce using rule 43 (value -> FAIL .)
    AN              reduce using rule 43 (value -> FAIL .)
    MKAY            reduce using rule 43 (value -> FAIL .)
    SIZE            reduce using rule 43 (value -> FAIL .)
    ABSLUT          reduce using rule 43 (value -> FAIL .)
    SUM             reduce using rule 43 (value -> FAIL .)
    DIFF            reduce using rule 43 (value -> FAIL .)
    PRODUKT         reduce using rule 43 (value -> FAIL .)
    QUOSHUNT        reduce using rule 43 (value -> FAIL .)
    MOD             reduce using rule 43 (value -> FAIL .)
    BIGGR           reduce using rule 43 (value -> FAIL .)
    SMALLR          reduce using rule 43 (value -> FAIL .)
    BOTH            reduce using rule 43 (value -> FAIL .)
    EITHER          reduce using rule 43 (value -> FAIL .)
    WON             reduce using rule 43 (value -> FAIL .)
    NOT             reduce using rule 43 (value -> FAIL .)
    ALL             reduce using rule 43 (value -> FAIL .)
    ANY             reduce using rule 43 (value -> FAIL .)
    DIFFRINT        reduce using rule 43 (value -> FAIL .)
    SMOOSH          reduce using rule 43 (value -> FAIL .)
    MAEK            reduce using rule 43 (value -> FAIL .)
    STRING          reduce using rule 43 (value -> FAIL .)
    FLOAT           reduce using rule 43 (value -> FAIL .)
    INTEGER         reduce using rule 43 (value -> FAIL .)
    WIN             reduce using rule 43 (value -> FAIL .)
    FAIL            reduce using rule 43 (value -> FAIL .)
    ID              reduce using rule 43 (value -> FAIL .)
    IT              reduce using rule 43 (value -> FAIL .)
    A               reduce using rule 43 (value -> FAIL .)
    YARN            reduce using rule 43 (value -> FAIL .)
    NUMBR           reduce using rule 43 (value -> FAIL .)
    NUMBAR          reduce using rule 43 (value -> FAIL .)
    NOOB            reduce using rule 43 (value -> FAIL .)
    EXCLAMATION     reduce using rule 43 (value -> FAIL .)


state 47

    (72) variable -> ID .

    IS              reduce using rule 72 (variable -> ID .)
    R               reduce using rule 72 (variable -> ID .)
    NEWLINE         reduce using rule 72 (variable -> ID .)
    COMMA           reduce using rule 72 (variable -> ID .)
    AN              reduce using rule 72 (variable -> ID .)
    MKAY            reduce using rule 72 (variable -> ID .)
    SIZE            reduce using rule 72 (variable -> ID .)
    ABSLUT          reduce using rule 72 (variable -> ID .)
    SUM             reduce using rule 72 (variable -> ID .)
    DIFF            reduce using rule 72 (variable -> ID .)
    PRODUKT         reduce using rule 72 (variable -> ID .)
    QUOSHUNT        reduce using rule 72 (variable -> ID .)
    MOD             reduce using rule 72 (variable -> ID .)
    BIGGR           reduce using rule 72 (variable -> ID .)
    SMALLR          reduce using rule 72 (variable -> ID .)
    BOTH            reduce using rule 72 (variable -> ID .)
    EITHER          reduce using rule 72 (variable -> ID .)
    WON             reduce using rule 72 (variable -> ID .)
    NOT             reduce using rule 72 (variable -> ID .)
    ALL             reduce using rule 72 (variable -> ID .)
    ANY             reduce using rule 72 (variable -> ID .)
    DIFFRINT        reduce using rule 72 (variable -> ID .)
    SMOOSH          reduce using rule 72 (variable -> ID .)
    MAEK            reduce using rule 72 (variable -> ID .)
    STRING          reduce using rule 72 (variable -> ID .)
    FLOAT           reduce using rule 72 (variable -> ID .)
    INTEGER         reduce using rule 72 (variable -> ID .)
    WIN             reduce using rule 72 (variable -> ID .)
    FAIL            reduce using rule 72 (variable -> ID .)
    ID              reduce using rule 72 (variable -> ID .)
    IT              reduce using rule 72 (variable -> ID .)
    A               reduce using rule 72 (variable -> ID .)
    YARN            reduce using rule 72 (variable -> ID .)
    NUMBR           reduce using rule 72 (variable -> ID .)
    NUMBAR          reduce using rule 72 (variable -> ID .)
    NOOB            reduce using rule 72 (variable -> ID .)
    EXCLAMATION     reduce using rule 72 (variable -> ID .)
    ITZ             reduce using rule 72 (variable -> ID .)
    UPPIN           reduce using rule 72 (variable -> ID .)
    NERFIN          reduce using rule 72 (variable -> ID .)
    TIL             reduce using rule 72 (variable -> ID .)
    WILE            reduce using rule 72 (variable -> ID .)


state 48

    (73) variable -> IT .

    IS              reduce using rule 73 (variable -> IT .)
    R               reduce using rule 73 (variable -> IT .)
    NEWLINE         reduce using rule 73 (variable -> IT .)
    COMMA           reduce using rule 73 (variable -> IT .)
    AN              reduce using rule 73 (variable -> IT .)
    MKAY            reduce using rule 73 (variable -> IT .)
    SIZE            reduce using rule 73 (variable -> IT .)
    ABSLUT          reduce using rule 73 (variable -> IT .)
    SUM             reduce using rule 73 (variable -> IT .)
    DIFF            reduce using rule 73 (variable -> IT .)
    PRODUKT         reduce using rule 73 (variable -> IT .)
    QUOSHUNT        reduce using rule 73 (variable -> IT .)
    MOD             reduce using rule 73 (variable -> IT .)
    BIGGR           reduce using rule 73 (variable -> IT .)
    SMALLR          reduce using rule 73 (variable -> IT .)
    BOTH            reduce using rule 73 (variable -> IT .)
    EITHER          reduce using rule 73 (variable -> IT .)
    WON             reduce using rule 73 (variable -> IT .)
    NOT             reduce using rule 73 (variable -> IT .)
    ALL             reduce using rule 73 (variable -> IT .)
    ANY             reduce using rule 73 (variable -> IT .)
    DIFFRINT        reduce using rule 73 (variable -> IT .)
    SMOOSH          reduce using rule 73 (variable -> IT .)
    MAEK            reduce using rule 73 (variable -> IT .)
    STRING          reduce using rule 73 (variable -> IT .)
    FLOAT           reduce using rule 73 (variable -> IT .)
    INTEGER         reduce using rule 73 (variable -> IT .)
    WIN             reduce using rule 73 (variable -> IT .)
    FAIL            reduce using rule 73 (variable -> IT .)
    ID              reduce using rule 73 (variable -> IT .)
    IT              reduce using rule 73 (variable -> IT .)
    A               reduce using rule 73 (variable -> IT .)
    YARN            reduce using rule 73 (variable -> IT .)
    NUMBR           reduce using rule 73 (variable -> IT .)
    NUMBAR          reduce using rule 73 (variable -> IT .)
    NOOB            reduce using rule 73 (variable -> IT .)
    EXCLAMATION     reduce using rule 73 (variable -> IT .)
    ITZ             reduce using rule 73 (variable -> IT .)
    UPPIN           reduce using rule 73 (variable -> IT .)
    NERFIN          reduce using rule 73 (variable -> IT .)
    TIL             reduce using rule 73 (variable -> IT .)
    WILE            reduce using rule 73 (variable -> IT .)


state 49

    (1) program -> HAI FLOAT NEWLINE statements KTHXBYE .

    $end            reduce using rule 1 (program -> HAI FLOAT NEWLINE statements KTHXBYE .)


state 50

    (2) statements -> statements statement .

    KTHXBYE         reduce using rule 2 (statements -> statements statement .)
    SIZE            reduce using rule 2 (statements -> statements statement .)
    ABSLUT          reduce using rule 2 (statements -> statements statement .)
    SUM             reduce using rule 2 (statements -> statements statement .)
    DIFF            reduce using rule 2 (statements -> statements statement .)
    PRODUKT         reduce using rule 2 (statements -> statements statement .)
    QUOSHUNT        reduce using rule 2 (statements -> statements statement .)
    MOD             reduce using rule 2 (statements -> statements statement .)
    BIGGR           reduce using rule 2 (statements -> statements statement .)
    SMALLR          reduce using rule 2 (statements -> statements statement .)
    BOTH            reduce using rule 2 (statements -> statements statement .)
    EITHER          reduce using rule 2 (statements -> statements statement .)
    WON             reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    ALL             reduce using rule 2 (statements -> statements statement .)
    ANY             reduce using rule 2 (statements -> statements statement .)
    DIFFRINT        reduce using rule 2 (statements -> statements statement .)
    SMOOSH          reduce using rule 2 (statements -> statements statement .)
    MAEK            reduce using rule 2 (statements -> statements statement .)
    VISIBLE         reduce using rule 2 (statements -> statements statement .)
    GIMMEH          reduce using rule 2 (statements -> statements statement .)
    I               reduce using rule 2 (statements -> statements statement .)
    O               reduce using rule 2 (statements -> statements statement .)
    IM              reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    INTEGER         reduce using rule 2 (statements -> statements statement .)
    WIN             reduce using rule 2 (statements -> statements statement .)
    FAIL            reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    IT              reduce using rule 2 (statements -> statements statement .)
    NEWLINE         reduce using rule 2 (statements -> statements statement .)
    COMMA           reduce using rule 2 (statements -> statements statement .)
    NO              reduce using rule 2 (statements -> statements statement .)
    OIC             reduce using rule 2 (statements -> statements statement .)
    MEBBE           reduce using rule 2 (statements -> statements statement .)


state 51

    (4) statement -> command NEWLINE .

    KTHXBYE         reduce using rule 4 (statement -> command NEWLINE .)
    SIZE            reduce using rule 4 (statement -> command NEWLINE .)
    ABSLUT          reduce using rule 4 (statement -> command NEWLINE .)
    SUM             reduce using rule 4 (statement -> command NEWLINE .)
    DIFF            reduce using rule 4 (statement -> command NEWLINE .)
    PRODUKT         reduce using rule 4 (statement -> command NEWLINE .)
    QUOSHUNT        reduce using rule 4 (statement -> command NEWLINE .)
    MOD             reduce using rule 4 (statement -> command NEWLINE .)
    BIGGR           reduce using rule 4 (statement -> command NEWLINE .)
    SMALLR          reduce using rule 4 (statement -> command NEWLINE .)
    BOTH            reduce using rule 4 (statement -> command NEWLINE .)
    EITHER          reduce using rule 4 (statement -> command NEWLINE .)
    WON             reduce using rule 4 (statement -> command NEWLINE .)
    NOT             reduce using rule 4 (statement -> command NEWLINE .)
    ALL             reduce using rule 4 (statement -> command NEWLINE .)
    ANY             reduce using rule 4 (statement -> command NEWLINE .)
    DIFFRINT        reduce using rule 4 (statement -> command NEWLINE .)
    SMOOSH          reduce using rule 4 (statement -> command NEWLINE .)
    MAEK            reduce using rule 4 (statement -> command NEWLINE .)
    VISIBLE         reduce using rule 4 (statement -> command NEWLINE .)
    GIMMEH          reduce using rule 4 (statement -> command NEWLINE .)
    I               reduce using rule 4 (statement -> command NEWLINE .)
    O               reduce using rule 4 (statement -> command NEWLINE .)
    IM              reduce using rule 4 (statement -> command NEWLINE .)
    STRING          reduce using rule 4 (statement -> command NEWLINE .)
    FLOAT           reduce using rule 4 (statement -> command NEWLINE .)
    INTEGER         reduce using rule 4 (statement -> command NEWLINE .)
    WIN             reduce using rule 4 (statement -> command NEWLINE .)
    FAIL            reduce using rule 4 (statement -> command NEWLINE .)
    ID              reduce using rule 4 (statement -> command NEWLINE .)
    IT              reduce using rule 4 (statement -> command NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> command NEWLINE .)
    COMMA           reduce using rule 4 (statement -> command NEWLINE .)
    NO              reduce using rule 4 (statement -> command NEWLINE .)
    OIC             reduce using rule 4 (statement -> command NEWLINE .)
    MEBBE           reduce using rule 4 (statement -> command NEWLINE .)


state 52

    (5) statement -> command COMMA .

    KTHXBYE         reduce using rule 5 (statement -> command COMMA .)
    SIZE            reduce using rule 5 (statement -> command COMMA .)
    ABSLUT          reduce using rule 5 (statement -> command COMMA .)
    SUM             reduce using rule 5 (statement -> command COMMA .)
    DIFF            reduce using rule 5 (statement -> command COMMA .)
    PRODUKT         reduce using rule 5 (statement -> command COMMA .)
    QUOSHUNT        reduce using rule 5 (statement -> command COMMA .)
    MOD             reduce using rule 5 (statement -> command COMMA .)
    BIGGR           reduce using rule 5 (statement -> command COMMA .)
    SMALLR          reduce using rule 5 (statement -> command COMMA .)
    BOTH            reduce using rule 5 (statement -> command COMMA .)
    EITHER          reduce using rule 5 (statement -> command COMMA .)
    WON             reduce using rule 5 (statement -> command COMMA .)
    NOT             reduce using rule 5 (statement -> command COMMA .)
    ALL             reduce using rule 5 (statement -> command COMMA .)
    ANY             reduce using rule 5 (statement -> command COMMA .)
    DIFFRINT        reduce using rule 5 (statement -> command COMMA .)
    SMOOSH          reduce using rule 5 (statement -> command COMMA .)
    MAEK            reduce using rule 5 (statement -> command COMMA .)
    VISIBLE         reduce using rule 5 (statement -> command COMMA .)
    GIMMEH          reduce using rule 5 (statement -> command COMMA .)
    I               reduce using rule 5 (statement -> command COMMA .)
    O               reduce using rule 5 (statement -> command COMMA .)
    IM              reduce using rule 5 (statement -> command COMMA .)
    STRING          reduce using rule 5 (statement -> command COMMA .)
    FLOAT           reduce using rule 5 (statement -> command COMMA .)
    INTEGER         reduce using rule 5 (statement -> command COMMA .)
    WIN             reduce using rule 5 (statement -> command COMMA .)
    FAIL            reduce using rule 5 (statement -> command COMMA .)
    ID              reduce using rule 5 (statement -> command COMMA .)
    IT              reduce using rule 5 (statement -> command COMMA .)
    NEWLINE         reduce using rule 5 (statement -> command COMMA .)
    COMMA           reduce using rule 5 (statement -> command COMMA .)
    NO              reduce using rule 5 (statement -> command COMMA .)
    OIC             reduce using rule 5 (statement -> command COMMA .)
    MEBBE           reduce using rule 5 (statement -> command COMMA .)


state 53

    (47) expr -> SIZE OF . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 83
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 54

    (48) expr -> ABSLUT OF . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 84
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 55

    (28) cast -> variable IS . NOW A type

    NOW             shift and go to state 85


state 56

    (29) cast -> variable R . MAEK variable A type
    (30) cast -> variable R . MAEK variable type
    (27) assign -> variable R . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    MAEK            shift and go to state 86
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 69
    expr                           shift and go to state 87
    value                          shift and go to state 20

state 57

    (51) expr -> SUM OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 88
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 58

    (52) expr -> DIFF OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 89
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 59

    (53) expr -> PRODUKT OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 90
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 60

    (54) expr -> QUOSHUNT OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 91
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 61

    (55) expr -> MOD OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 92
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 62

    (56) expr -> BIGGR OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 93
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 63

    (57) expr -> SMALLR OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 94
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 64

    (58) expr -> BOTH OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 95
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 65

    (66) expr -> BOTH SAEM . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 96
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 66

    (59) expr -> EITHER OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 97
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 67

    (60) expr -> WON OF . expr AN expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 98
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 68

    (61) expr -> NOT expr .

    NEWLINE         reduce using rule 61 (expr -> NOT expr .)
    COMMA           reduce using rule 61 (expr -> NOT expr .)
    AN              reduce using rule 61 (expr -> NOT expr .)
    MKAY            reduce using rule 61 (expr -> NOT expr .)
    SIZE            reduce using rule 61 (expr -> NOT expr .)
    ABSLUT          reduce using rule 61 (expr -> NOT expr .)
    SUM             reduce using rule 61 (expr -> NOT expr .)
    DIFF            reduce using rule 61 (expr -> NOT expr .)
    PRODUKT         reduce using rule 61 (expr -> NOT expr .)
    QUOSHUNT        reduce using rule 61 (expr -> NOT expr .)
    MOD             reduce using rule 61 (expr -> NOT expr .)
    BIGGR           reduce using rule 61 (expr -> NOT expr .)
    SMALLR          reduce using rule 61 (expr -> NOT expr .)
    BOTH            reduce using rule 61 (expr -> NOT expr .)
    EITHER          reduce using rule 61 (expr -> NOT expr .)
    WON             reduce using rule 61 (expr -> NOT expr .)
    NOT             reduce using rule 61 (expr -> NOT expr .)
    ALL             reduce using rule 61 (expr -> NOT expr .)
    ANY             reduce using rule 61 (expr -> NOT expr .)
    DIFFRINT        reduce using rule 61 (expr -> NOT expr .)
    SMOOSH          reduce using rule 61 (expr -> NOT expr .)
    MAEK            reduce using rule 61 (expr -> NOT expr .)
    STRING          reduce using rule 61 (expr -> NOT expr .)
    FLOAT           reduce using rule 61 (expr -> NOT expr .)
    INTEGER         reduce using rule 61 (expr -> NOT expr .)
    WIN             reduce using rule 61 (expr -> NOT expr .)
    FAIL            reduce using rule 61 (expr -> NOT expr .)
    ID              reduce using rule 61 (expr -> NOT expr .)
    IT              reduce using rule 61 (expr -> NOT expr .)
    A               reduce using rule 61 (expr -> NOT expr .)
    YARN            reduce using rule 61 (expr -> NOT expr .)
    NUMBR           reduce using rule 61 (expr -> NOT expr .)
    NUMBAR          reduce using rule 61 (expr -> NOT expr .)
    NOOB            reduce using rule 61 (expr -> NOT expr .)
    EXCLAMATION     reduce using rule 61 (expr -> NOT expr .)


state 69

    (50) expr -> variable .

    NEWLINE         reduce using rule 50 (expr -> variable .)
    COMMA           reduce using rule 50 (expr -> variable .)
    AN              reduce using rule 50 (expr -> variable .)
    MKAY            reduce using rule 50 (expr -> variable .)
    SIZE            reduce using rule 50 (expr -> variable .)
    ABSLUT          reduce using rule 50 (expr -> variable .)
    SUM             reduce using rule 50 (expr -> variable .)
    DIFF            reduce using rule 50 (expr -> variable .)
    PRODUKT         reduce using rule 50 (expr -> variable .)
    QUOSHUNT        reduce using rule 50 (expr -> variable .)
    MOD             reduce using rule 50 (expr -> variable .)
    BIGGR           reduce using rule 50 (expr -> variable .)
    SMALLR          reduce using rule 50 (expr -> variable .)
    BOTH            reduce using rule 50 (expr -> variable .)
    EITHER          reduce using rule 50 (expr -> variable .)
    WON             reduce using rule 50 (expr -> variable .)
    NOT             reduce using rule 50 (expr -> variable .)
    ALL             reduce using rule 50 (expr -> variable .)
    ANY             reduce using rule 50 (expr -> variable .)
    DIFFRINT        reduce using rule 50 (expr -> variable .)
    SMOOSH          reduce using rule 50 (expr -> variable .)
    MAEK            reduce using rule 50 (expr -> variable .)
    STRING          reduce using rule 50 (expr -> variable .)
    FLOAT           reduce using rule 50 (expr -> variable .)
    INTEGER         reduce using rule 50 (expr -> variable .)
    WIN             reduce using rule 50 (expr -> variable .)
    FAIL            reduce using rule 50 (expr -> variable .)
    ID              reduce using rule 50 (expr -> variable .)
    IT              reduce using rule 50 (expr -> variable .)
    A               reduce using rule 50 (expr -> variable .)
    YARN            reduce using rule 50 (expr -> variable .)
    NUMBR           reduce using rule 50 (expr -> variable .)
    NUMBAR          reduce using rule 50 (expr -> variable .)
    NOOB            reduce using rule 50 (expr -> variable .)
    EXCLAMATION     reduce using rule 50 (expr -> variable .)


state 70

    (62) expr -> ALL OF . sep_args MKAY
    (64) expr -> ALL OF . args MKAY
    (33) sep_args -> . sep_args AN expr
    (34) sep_args -> . expr
    (31) args -> . args expr
    (32) args -> . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    sep_args                       shift and go to state 99
    args                           shift and go to state 100
    expr                           shift and go to state 75
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 71

    (63) expr -> ANY OF . sep_args MKAY
    (65) expr -> ANY OF . args MKAY
    (33) sep_args -> . sep_args AN expr
    (34) sep_args -> . expr
    (31) args -> . args expr
    (32) args -> . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    sep_args                       shift and go to state 101
    args                           shift and go to state 102
    expr                           shift and go to state 75
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 72

    (67) expr -> DIFFRINT expr . AN expr

    AN              shift and go to state 103


state 73

    (68) expr -> SMOOSH sep_args . MKAY
    (33) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 104
    AN              shift and go to state 105


state 74

    (69) expr -> SMOOSH args . MKAY
    (31) args -> args . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    MKAY            shift and go to state 106
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 107
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 75

    (34) sep_args -> expr .
    (32) args -> expr .

  ! reduce/reduce conflict for MKAY resolved using rule 32 (args -> expr .)
    AN              reduce using rule 34 (sep_args -> expr .)
    MKAY            reduce using rule 32 (args -> expr .)
    SIZE            reduce using rule 32 (args -> expr .)
    ABSLUT          reduce using rule 32 (args -> expr .)
    SUM             reduce using rule 32 (args -> expr .)
    DIFF            reduce using rule 32 (args -> expr .)
    PRODUKT         reduce using rule 32 (args -> expr .)
    QUOSHUNT        reduce using rule 32 (args -> expr .)
    MOD             reduce using rule 32 (args -> expr .)
    BIGGR           reduce using rule 32 (args -> expr .)
    SMALLR          reduce using rule 32 (args -> expr .)
    BOTH            reduce using rule 32 (args -> expr .)
    EITHER          reduce using rule 32 (args -> expr .)
    WON             reduce using rule 32 (args -> expr .)
    NOT             reduce using rule 32 (args -> expr .)
    ALL             reduce using rule 32 (args -> expr .)
    ANY             reduce using rule 32 (args -> expr .)
    DIFFRINT        reduce using rule 32 (args -> expr .)
    SMOOSH          reduce using rule 32 (args -> expr .)
    MAEK            reduce using rule 32 (args -> expr .)
    STRING          reduce using rule 32 (args -> expr .)
    FLOAT           reduce using rule 32 (args -> expr .)
    INTEGER         reduce using rule 32 (args -> expr .)
    WIN             reduce using rule 32 (args -> expr .)
    FAIL            reduce using rule 32 (args -> expr .)
    ID              reduce using rule 32 (args -> expr .)
    IT              reduce using rule 32 (args -> expr .)

  ! MKAY            [ reduce using rule 34 (sep_args -> expr .) ]


state 76

    (70) expr -> MAEK expr . A type
    (71) expr -> MAEK expr . type
    (35) type -> . YARN
    (36) type -> . NUMBR
    (37) type -> . NUMBAR
    (38) type -> . NOOB

    A               shift and go to state 108
    YARN            shift and go to state 110
    NUMBR           shift and go to state 111
    NUMBAR          shift and go to state 112
    NOOB            shift and go to state 113

    type                           shift and go to state 109

state 77

    (44) call -> VISIBLE args .
    (45) call -> VISIBLE args . EXCLAMATION
    (31) args -> args . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 44 (call -> VISIBLE args .)
    COMMA           reduce using rule 44 (call -> VISIBLE args .)
    EXCLAMATION     shift and go to state 114
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 107
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 78

    (32) args -> expr .

    EXCLAMATION     reduce using rule 32 (args -> expr .)
    SIZE            reduce using rule 32 (args -> expr .)
    ABSLUT          reduce using rule 32 (args -> expr .)
    SUM             reduce using rule 32 (args -> expr .)
    DIFF            reduce using rule 32 (args -> expr .)
    PRODUKT         reduce using rule 32 (args -> expr .)
    QUOSHUNT        reduce using rule 32 (args -> expr .)
    MOD             reduce using rule 32 (args -> expr .)
    BIGGR           reduce using rule 32 (args -> expr .)
    SMALLR          reduce using rule 32 (args -> expr .)
    BOTH            reduce using rule 32 (args -> expr .)
    EITHER          reduce using rule 32 (args -> expr .)
    WON             reduce using rule 32 (args -> expr .)
    NOT             reduce using rule 32 (args -> expr .)
    ALL             reduce using rule 32 (args -> expr .)
    ANY             reduce using rule 32 (args -> expr .)
    DIFFRINT        reduce using rule 32 (args -> expr .)
    SMOOSH          reduce using rule 32 (args -> expr .)
    MAEK            reduce using rule 32 (args -> expr .)
    STRING          reduce using rule 32 (args -> expr .)
    FLOAT           reduce using rule 32 (args -> expr .)
    INTEGER         reduce using rule 32 (args -> expr .)
    WIN             reduce using rule 32 (args -> expr .)
    FAIL            reduce using rule 32 (args -> expr .)
    ID              reduce using rule 32 (args -> expr .)
    IT              reduce using rule 32 (args -> expr .)
    NEWLINE         reduce using rule 32 (args -> expr .)
    COMMA           reduce using rule 32 (args -> expr .)


state 79

    (46) call -> GIMMEH variable .

    NEWLINE         reduce using rule 46 (call -> GIMMEH variable .)
    COMMA           reduce using rule 46 (call -> GIMMEH variable .)


state 80

    (25) decl -> I HAS . A variable
    (26) decl -> I HAS . A variable ITZ value

    A               shift and go to state 115


state 81

    (19) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    QUESTION        shift and go to state 116


state 82

    (14) loop -> IM IN . YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 117


state 83

    (47) expr -> SIZE OF expr .

    NEWLINE         reduce using rule 47 (expr -> SIZE OF expr .)
    COMMA           reduce using rule 47 (expr -> SIZE OF expr .)
    AN              reduce using rule 47 (expr -> SIZE OF expr .)
    MKAY            reduce using rule 47 (expr -> SIZE OF expr .)
    SIZE            reduce using rule 47 (expr -> SIZE OF expr .)
    ABSLUT          reduce using rule 47 (expr -> SIZE OF expr .)
    SUM             reduce using rule 47 (expr -> SIZE OF expr .)
    DIFF            reduce using rule 47 (expr -> SIZE OF expr .)
    PRODUKT         reduce using rule 47 (expr -> SIZE OF expr .)
    QUOSHUNT        reduce using rule 47 (expr -> SIZE OF expr .)
    MOD             reduce using rule 47 (expr -> SIZE OF expr .)
    BIGGR           reduce using rule 47 (expr -> SIZE OF expr .)
    SMALLR          reduce using rule 47 (expr -> SIZE OF expr .)
    BOTH            reduce using rule 47 (expr -> SIZE OF expr .)
    EITHER          reduce using rule 47 (expr -> SIZE OF expr .)
    WON             reduce using rule 47 (expr -> SIZE OF expr .)
    NOT             reduce using rule 47 (expr -> SIZE OF expr .)
    ALL             reduce using rule 47 (expr -> SIZE OF expr .)
    ANY             reduce using rule 47 (expr -> SIZE OF expr .)
    DIFFRINT        reduce using rule 47 (expr -> SIZE OF expr .)
    SMOOSH          reduce using rule 47 (expr -> SIZE OF expr .)
    MAEK            reduce using rule 47 (expr -> SIZE OF expr .)
    STRING          reduce using rule 47 (expr -> SIZE OF expr .)
    FLOAT           reduce using rule 47 (expr -> SIZE OF expr .)
    INTEGER         reduce using rule 47 (expr -> SIZE OF expr .)
    WIN             reduce using rule 47 (expr -> SIZE OF expr .)
    FAIL            reduce using rule 47 (expr -> SIZE OF expr .)
    ID              reduce using rule 47 (expr -> SIZE OF expr .)
    IT              reduce using rule 47 (expr -> SIZE OF expr .)
    A               reduce using rule 47 (expr -> SIZE OF expr .)
    YARN            reduce using rule 47 (expr -> SIZE OF expr .)
    NUMBR           reduce using rule 47 (expr -> SIZE OF expr .)
    NUMBAR          reduce using rule 47 (expr -> SIZE OF expr .)
    NOOB            reduce using rule 47 (expr -> SIZE OF expr .)
    EXCLAMATION     reduce using rule 47 (expr -> SIZE OF expr .)


state 84

    (48) expr -> ABSLUT OF expr .

    NEWLINE         reduce using rule 48 (expr -> ABSLUT OF expr .)
    COMMA           reduce using rule 48 (expr -> ABSLUT OF expr .)
    AN              reduce using rule 48 (expr -> ABSLUT OF expr .)
    MKAY            reduce using rule 48 (expr -> ABSLUT OF expr .)
    SIZE            reduce using rule 48 (expr -> ABSLUT OF expr .)
    ABSLUT          reduce using rule 48 (expr -> ABSLUT OF expr .)
    SUM             reduce using rule 48 (expr -> ABSLUT OF expr .)
    DIFF            reduce using rule 48 (expr -> ABSLUT OF expr .)
    PRODUKT         reduce using rule 48 (expr -> ABSLUT OF expr .)
    QUOSHUNT        reduce using rule 48 (expr -> ABSLUT OF expr .)
    MOD             reduce using rule 48 (expr -> ABSLUT OF expr .)
    BIGGR           reduce using rule 48 (expr -> ABSLUT OF expr .)
    SMALLR          reduce using rule 48 (expr -> ABSLUT OF expr .)
    BOTH            reduce using rule 48 (expr -> ABSLUT OF expr .)
    EITHER          reduce using rule 48 (expr -> ABSLUT OF expr .)
    WON             reduce using rule 48 (expr -> ABSLUT OF expr .)
    NOT             reduce using rule 48 (expr -> ABSLUT OF expr .)
    ALL             reduce using rule 48 (expr -> ABSLUT OF expr .)
    ANY             reduce using rule 48 (expr -> ABSLUT OF expr .)
    DIFFRINT        reduce using rule 48 (expr -> ABSLUT OF expr .)
    SMOOSH          reduce using rule 48 (expr -> ABSLUT OF expr .)
    MAEK            reduce using rule 48 (expr -> ABSLUT OF expr .)
    STRING          reduce using rule 48 (expr -> ABSLUT OF expr .)
    FLOAT           reduce using rule 48 (expr -> ABSLUT OF expr .)
    INTEGER         reduce using rule 48 (expr -> ABSLUT OF expr .)
    WIN             reduce using rule 48 (expr -> ABSLUT OF expr .)
    FAIL            reduce using rule 48 (expr -> ABSLUT OF expr .)
    ID              reduce using rule 48 (expr -> ABSLUT OF expr .)
    IT              reduce using rule 48 (expr -> ABSLUT OF expr .)
    A               reduce using rule 48 (expr -> ABSLUT OF expr .)
    YARN            reduce using rule 48 (expr -> ABSLUT OF expr .)
    NUMBR           reduce using rule 48 (expr -> ABSLUT OF expr .)
    NUMBAR          reduce using rule 48 (expr -> ABSLUT OF expr .)
    NOOB            reduce using rule 48 (expr -> ABSLUT OF expr .)
    EXCLAMATION     reduce using rule 48 (expr -> ABSLUT OF expr .)


state 85

    (28) cast -> variable IS NOW . A type

    A               shift and go to state 118


state 86

    (29) cast -> variable R MAEK . variable A type
    (30) cast -> variable R MAEK . variable type
    (70) expr -> MAEK . expr A type
    (71) expr -> MAEK . expr type
    (72) variable -> . ID
    (73) variable -> . IT
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL

    ID              shift and go to state 47
    IT              shift and go to state 48
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46

    variable                       shift and go to state 119
    expr                           shift and go to state 76
    value                          shift and go to state 20

state 87

    (27) assign -> variable R expr .

    NEWLINE         reduce using rule 27 (assign -> variable R expr .)
    COMMA           reduce using rule 27 (assign -> variable R expr .)


state 88

    (51) expr -> SUM OF expr . AN expr

    AN              shift and go to state 120


state 89

    (52) expr -> DIFF OF expr . AN expr

    AN              shift and go to state 121


state 90

    (53) expr -> PRODUKT OF expr . AN expr

    AN              shift and go to state 122


state 91

    (54) expr -> QUOSHUNT OF expr . AN expr

    AN              shift and go to state 123


state 92

    (55) expr -> MOD OF expr . AN expr

    AN              shift and go to state 124


state 93

    (56) expr -> BIGGR OF expr . AN expr

    AN              shift and go to state 125


state 94

    (57) expr -> SMALLR OF expr . AN expr

    AN              shift and go to state 126


state 95

    (58) expr -> BOTH OF expr . AN expr

    AN              shift and go to state 127


state 96

    (66) expr -> BOTH SAEM expr . AN expr

    AN              shift and go to state 128


state 97

    (59) expr -> EITHER OF expr . AN expr

    AN              shift and go to state 129


state 98

    (60) expr -> WON OF expr . AN expr

    AN              shift and go to state 130


state 99

    (62) expr -> ALL OF sep_args . MKAY
    (33) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 131
    AN              shift and go to state 105


state 100

    (64) expr -> ALL OF args . MKAY
    (31) args -> args . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    MKAY            shift and go to state 132
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 107
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 101

    (63) expr -> ANY OF sep_args . MKAY
    (33) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 133
    AN              shift and go to state 105


state 102

    (65) expr -> ANY OF args . MKAY
    (31) args -> args . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    MKAY            shift and go to state 134
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 107
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 103

    (67) expr -> DIFFRINT expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 135
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 104

    (68) expr -> SMOOSH sep_args MKAY .

    NEWLINE         reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    COMMA           reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    AN              reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    MKAY            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    SIZE            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    ABSLUT          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    SUM             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    DIFF            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    PRODUKT         reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    QUOSHUNT        reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    MOD             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    BIGGR           reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    SMALLR          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    BOTH            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    EITHER          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    WON             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    NOT             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    ALL             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    ANY             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    DIFFRINT        reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    SMOOSH          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    MAEK            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    STRING          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    FLOAT           reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    INTEGER         reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    WIN             reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    FAIL            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    ID              reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    IT              reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    A               reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    YARN            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    NUMBR           reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    NUMBAR          reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    NOOB            reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)
    EXCLAMATION     reduce using rule 68 (expr -> SMOOSH sep_args MKAY .)


state 105

    (33) sep_args -> sep_args AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 136
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 106

    (69) expr -> SMOOSH args MKAY .

    NEWLINE         reduce using rule 69 (expr -> SMOOSH args MKAY .)
    COMMA           reduce using rule 69 (expr -> SMOOSH args MKAY .)
    AN              reduce using rule 69 (expr -> SMOOSH args MKAY .)
    MKAY            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    SIZE            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    ABSLUT          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    SUM             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    DIFF            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    PRODUKT         reduce using rule 69 (expr -> SMOOSH args MKAY .)
    QUOSHUNT        reduce using rule 69 (expr -> SMOOSH args MKAY .)
    MOD             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    BIGGR           reduce using rule 69 (expr -> SMOOSH args MKAY .)
    SMALLR          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    BOTH            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    EITHER          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    WON             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    NOT             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    ALL             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    ANY             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    DIFFRINT        reduce using rule 69 (expr -> SMOOSH args MKAY .)
    SMOOSH          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    MAEK            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    STRING          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    FLOAT           reduce using rule 69 (expr -> SMOOSH args MKAY .)
    INTEGER         reduce using rule 69 (expr -> SMOOSH args MKAY .)
    WIN             reduce using rule 69 (expr -> SMOOSH args MKAY .)
    FAIL            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    ID              reduce using rule 69 (expr -> SMOOSH args MKAY .)
    IT              reduce using rule 69 (expr -> SMOOSH args MKAY .)
    A               reduce using rule 69 (expr -> SMOOSH args MKAY .)
    YARN            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    NUMBR           reduce using rule 69 (expr -> SMOOSH args MKAY .)
    NUMBAR          reduce using rule 69 (expr -> SMOOSH args MKAY .)
    NOOB            reduce using rule 69 (expr -> SMOOSH args MKAY .)
    EXCLAMATION     reduce using rule 69 (expr -> SMOOSH args MKAY .)


state 107

    (31) args -> args expr .

    MKAY            reduce using rule 31 (args -> args expr .)
    SIZE            reduce using rule 31 (args -> args expr .)
    ABSLUT          reduce using rule 31 (args -> args expr .)
    SUM             reduce using rule 31 (args -> args expr .)
    DIFF            reduce using rule 31 (args -> args expr .)
    PRODUKT         reduce using rule 31 (args -> args expr .)
    QUOSHUNT        reduce using rule 31 (args -> args expr .)
    MOD             reduce using rule 31 (args -> args expr .)
    BIGGR           reduce using rule 31 (args -> args expr .)
    SMALLR          reduce using rule 31 (args -> args expr .)
    BOTH            reduce using rule 31 (args -> args expr .)
    EITHER          reduce using rule 31 (args -> args expr .)
    WON             reduce using rule 31 (args -> args expr .)
    NOT             reduce using rule 31 (args -> args expr .)
    ALL             reduce using rule 31 (args -> args expr .)
    ANY             reduce using rule 31 (args -> args expr .)
    DIFFRINT        reduce using rule 31 (args -> args expr .)
    SMOOSH          reduce using rule 31 (args -> args expr .)
    MAEK            reduce using rule 31 (args -> args expr .)
    STRING          reduce using rule 31 (args -> args expr .)
    FLOAT           reduce using rule 31 (args -> args expr .)
    INTEGER         reduce using rule 31 (args -> args expr .)
    WIN             reduce using rule 31 (args -> args expr .)
    FAIL            reduce using rule 31 (args -> args expr .)
    ID              reduce using rule 31 (args -> args expr .)
    IT              reduce using rule 31 (args -> args expr .)
    EXCLAMATION     reduce using rule 31 (args -> args expr .)
    NEWLINE         reduce using rule 31 (args -> args expr .)
    COMMA           reduce using rule 31 (args -> args expr .)


state 108

    (70) expr -> MAEK expr A . type
    (35) type -> . YARN
    (36) type -> . NUMBR
    (37) type -> . NUMBAR
    (38) type -> . NOOB

    YARN            shift and go to state 110
    NUMBR           shift and go to state 111
    NUMBAR          shift and go to state 112
    NOOB            shift and go to state 113

    type                           shift and go to state 137

state 109

    (71) expr -> MAEK expr type .

    NEWLINE         reduce using rule 71 (expr -> MAEK expr type .)
    COMMA           reduce using rule 71 (expr -> MAEK expr type .)
    AN              reduce using rule 71 (expr -> MAEK expr type .)
    MKAY            reduce using rule 71 (expr -> MAEK expr type .)
    SIZE            reduce using rule 71 (expr -> MAEK expr type .)
    ABSLUT          reduce using rule 71 (expr -> MAEK expr type .)
    SUM             reduce using rule 71 (expr -> MAEK expr type .)
    DIFF            reduce using rule 71 (expr -> MAEK expr type .)
    PRODUKT         reduce using rule 71 (expr -> MAEK expr type .)
    QUOSHUNT        reduce using rule 71 (expr -> MAEK expr type .)
    MOD             reduce using rule 71 (expr -> MAEK expr type .)
    BIGGR           reduce using rule 71 (expr -> MAEK expr type .)
    SMALLR          reduce using rule 71 (expr -> MAEK expr type .)
    BOTH            reduce using rule 71 (expr -> MAEK expr type .)
    EITHER          reduce using rule 71 (expr -> MAEK expr type .)
    WON             reduce using rule 71 (expr -> MAEK expr type .)
    NOT             reduce using rule 71 (expr -> MAEK expr type .)
    ALL             reduce using rule 71 (expr -> MAEK expr type .)
    ANY             reduce using rule 71 (expr -> MAEK expr type .)
    DIFFRINT        reduce using rule 71 (expr -> MAEK expr type .)
    SMOOSH          reduce using rule 71 (expr -> MAEK expr type .)
    MAEK            reduce using rule 71 (expr -> MAEK expr type .)
    STRING          reduce using rule 71 (expr -> MAEK expr type .)
    FLOAT           reduce using rule 71 (expr -> MAEK expr type .)
    INTEGER         reduce using rule 71 (expr -> MAEK expr type .)
    WIN             reduce using rule 71 (expr -> MAEK expr type .)
    FAIL            reduce using rule 71 (expr -> MAEK expr type .)
    ID              reduce using rule 71 (expr -> MAEK expr type .)
    IT              reduce using rule 71 (expr -> MAEK expr type .)
    A               reduce using rule 71 (expr -> MAEK expr type .)
    YARN            reduce using rule 71 (expr -> MAEK expr type .)
    NUMBR           reduce using rule 71 (expr -> MAEK expr type .)
    NUMBAR          reduce using rule 71 (expr -> MAEK expr type .)
    NOOB            reduce using rule 71 (expr -> MAEK expr type .)
    EXCLAMATION     reduce using rule 71 (expr -> MAEK expr type .)


state 110

    (35) type -> YARN .

    NEWLINE         reduce using rule 35 (type -> YARN .)
    COMMA           reduce using rule 35 (type -> YARN .)
    AN              reduce using rule 35 (type -> YARN .)
    MKAY            reduce using rule 35 (type -> YARN .)
    SIZE            reduce using rule 35 (type -> YARN .)
    ABSLUT          reduce using rule 35 (type -> YARN .)
    SUM             reduce using rule 35 (type -> YARN .)
    DIFF            reduce using rule 35 (type -> YARN .)
    PRODUKT         reduce using rule 35 (type -> YARN .)
    QUOSHUNT        reduce using rule 35 (type -> YARN .)
    MOD             reduce using rule 35 (type -> YARN .)
    BIGGR           reduce using rule 35 (type -> YARN .)
    SMALLR          reduce using rule 35 (type -> YARN .)
    BOTH            reduce using rule 35 (type -> YARN .)
    EITHER          reduce using rule 35 (type -> YARN .)
    WON             reduce using rule 35 (type -> YARN .)
    NOT             reduce using rule 35 (type -> YARN .)
    ALL             reduce using rule 35 (type -> YARN .)
    ANY             reduce using rule 35 (type -> YARN .)
    DIFFRINT        reduce using rule 35 (type -> YARN .)
    SMOOSH          reduce using rule 35 (type -> YARN .)
    MAEK            reduce using rule 35 (type -> YARN .)
    STRING          reduce using rule 35 (type -> YARN .)
    FLOAT           reduce using rule 35 (type -> YARN .)
    INTEGER         reduce using rule 35 (type -> YARN .)
    WIN             reduce using rule 35 (type -> YARN .)
    FAIL            reduce using rule 35 (type -> YARN .)
    ID              reduce using rule 35 (type -> YARN .)
    IT              reduce using rule 35 (type -> YARN .)
    A               reduce using rule 35 (type -> YARN .)
    YARN            reduce using rule 35 (type -> YARN .)
    NUMBR           reduce using rule 35 (type -> YARN .)
    NUMBAR          reduce using rule 35 (type -> YARN .)
    NOOB            reduce using rule 35 (type -> YARN .)
    EXCLAMATION     reduce using rule 35 (type -> YARN .)


state 111

    (36) type -> NUMBR .

    NEWLINE         reduce using rule 36 (type -> NUMBR .)
    COMMA           reduce using rule 36 (type -> NUMBR .)
    AN              reduce using rule 36 (type -> NUMBR .)
    MKAY            reduce using rule 36 (type -> NUMBR .)
    SIZE            reduce using rule 36 (type -> NUMBR .)
    ABSLUT          reduce using rule 36 (type -> NUMBR .)
    SUM             reduce using rule 36 (type -> NUMBR .)
    DIFF            reduce using rule 36 (type -> NUMBR .)
    PRODUKT         reduce using rule 36 (type -> NUMBR .)
    QUOSHUNT        reduce using rule 36 (type -> NUMBR .)
    MOD             reduce using rule 36 (type -> NUMBR .)
    BIGGR           reduce using rule 36 (type -> NUMBR .)
    SMALLR          reduce using rule 36 (type -> NUMBR .)
    BOTH            reduce using rule 36 (type -> NUMBR .)
    EITHER          reduce using rule 36 (type -> NUMBR .)
    WON             reduce using rule 36 (type -> NUMBR .)
    NOT             reduce using rule 36 (type -> NUMBR .)
    ALL             reduce using rule 36 (type -> NUMBR .)
    ANY             reduce using rule 36 (type -> NUMBR .)
    DIFFRINT        reduce using rule 36 (type -> NUMBR .)
    SMOOSH          reduce using rule 36 (type -> NUMBR .)
    MAEK            reduce using rule 36 (type -> NUMBR .)
    STRING          reduce using rule 36 (type -> NUMBR .)
    FLOAT           reduce using rule 36 (type -> NUMBR .)
    INTEGER         reduce using rule 36 (type -> NUMBR .)
    WIN             reduce using rule 36 (type -> NUMBR .)
    FAIL            reduce using rule 36 (type -> NUMBR .)
    ID              reduce using rule 36 (type -> NUMBR .)
    IT              reduce using rule 36 (type -> NUMBR .)
    A               reduce using rule 36 (type -> NUMBR .)
    YARN            reduce using rule 36 (type -> NUMBR .)
    NUMBR           reduce using rule 36 (type -> NUMBR .)
    NUMBAR          reduce using rule 36 (type -> NUMBR .)
    NOOB            reduce using rule 36 (type -> NUMBR .)
    EXCLAMATION     reduce using rule 36 (type -> NUMBR .)


state 112

    (37) type -> NUMBAR .

    NEWLINE         reduce using rule 37 (type -> NUMBAR .)
    COMMA           reduce using rule 37 (type -> NUMBAR .)
    AN              reduce using rule 37 (type -> NUMBAR .)
    MKAY            reduce using rule 37 (type -> NUMBAR .)
    SIZE            reduce using rule 37 (type -> NUMBAR .)
    ABSLUT          reduce using rule 37 (type -> NUMBAR .)
    SUM             reduce using rule 37 (type -> NUMBAR .)
    DIFF            reduce using rule 37 (type -> NUMBAR .)
    PRODUKT         reduce using rule 37 (type -> NUMBAR .)
    QUOSHUNT        reduce using rule 37 (type -> NUMBAR .)
    MOD             reduce using rule 37 (type -> NUMBAR .)
    BIGGR           reduce using rule 37 (type -> NUMBAR .)
    SMALLR          reduce using rule 37 (type -> NUMBAR .)
    BOTH            reduce using rule 37 (type -> NUMBAR .)
    EITHER          reduce using rule 37 (type -> NUMBAR .)
    WON             reduce using rule 37 (type -> NUMBAR .)
    NOT             reduce using rule 37 (type -> NUMBAR .)
    ALL             reduce using rule 37 (type -> NUMBAR .)
    ANY             reduce using rule 37 (type -> NUMBAR .)
    DIFFRINT        reduce using rule 37 (type -> NUMBAR .)
    SMOOSH          reduce using rule 37 (type -> NUMBAR .)
    MAEK            reduce using rule 37 (type -> NUMBAR .)
    STRING          reduce using rule 37 (type -> NUMBAR .)
    FLOAT           reduce using rule 37 (type -> NUMBAR .)
    INTEGER         reduce using rule 37 (type -> NUMBAR .)
    WIN             reduce using rule 37 (type -> NUMBAR .)
    FAIL            reduce using rule 37 (type -> NUMBAR .)
    ID              reduce using rule 37 (type -> NUMBAR .)
    IT              reduce using rule 37 (type -> NUMBAR .)
    A               reduce using rule 37 (type -> NUMBAR .)
    YARN            reduce using rule 37 (type -> NUMBAR .)
    NUMBR           reduce using rule 37 (type -> NUMBAR .)
    NUMBAR          reduce using rule 37 (type -> NUMBAR .)
    NOOB            reduce using rule 37 (type -> NUMBAR .)
    EXCLAMATION     reduce using rule 37 (type -> NUMBAR .)


state 113

    (38) type -> NOOB .

    NEWLINE         reduce using rule 38 (type -> NOOB .)
    COMMA           reduce using rule 38 (type -> NOOB .)
    AN              reduce using rule 38 (type -> NOOB .)
    MKAY            reduce using rule 38 (type -> NOOB .)
    SIZE            reduce using rule 38 (type -> NOOB .)
    ABSLUT          reduce using rule 38 (type -> NOOB .)
    SUM             reduce using rule 38 (type -> NOOB .)
    DIFF            reduce using rule 38 (type -> NOOB .)
    PRODUKT         reduce using rule 38 (type -> NOOB .)
    QUOSHUNT        reduce using rule 38 (type -> NOOB .)
    MOD             reduce using rule 38 (type -> NOOB .)
    BIGGR           reduce using rule 38 (type -> NOOB .)
    SMALLR          reduce using rule 38 (type -> NOOB .)
    BOTH            reduce using rule 38 (type -> NOOB .)
    EITHER          reduce using rule 38 (type -> NOOB .)
    WON             reduce using rule 38 (type -> NOOB .)
    NOT             reduce using rule 38 (type -> NOOB .)
    ALL             reduce using rule 38 (type -> NOOB .)
    ANY             reduce using rule 38 (type -> NOOB .)
    DIFFRINT        reduce using rule 38 (type -> NOOB .)
    SMOOSH          reduce using rule 38 (type -> NOOB .)
    MAEK            reduce using rule 38 (type -> NOOB .)
    STRING          reduce using rule 38 (type -> NOOB .)
    FLOAT           reduce using rule 38 (type -> NOOB .)
    INTEGER         reduce using rule 38 (type -> NOOB .)
    WIN             reduce using rule 38 (type -> NOOB .)
    FAIL            reduce using rule 38 (type -> NOOB .)
    ID              reduce using rule 38 (type -> NOOB .)
    IT              reduce using rule 38 (type -> NOOB .)
    A               reduce using rule 38 (type -> NOOB .)
    YARN            reduce using rule 38 (type -> NOOB .)
    NUMBR           reduce using rule 38 (type -> NOOB .)
    NUMBAR          reduce using rule 38 (type -> NOOB .)
    NOOB            reduce using rule 38 (type -> NOOB .)
    EXCLAMATION     reduce using rule 38 (type -> NOOB .)


state 114

    (45) call -> VISIBLE args EXCLAMATION .

    NEWLINE         reduce using rule 45 (call -> VISIBLE args EXCLAMATION .)
    COMMA           reduce using rule 45 (call -> VISIBLE args EXCLAMATION .)


state 115

    (25) decl -> I HAS A . variable
    (26) decl -> I HAS A . variable ITZ value
    (72) variable -> . ID
    (73) variable -> . IT

    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 138

state 116

    (19) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 139


state 117

    (14) loop -> IM IN YR . variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (72) variable -> . ID
    (73) variable -> . IT

    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 140

state 118

    (28) cast -> variable IS NOW A . type
    (35) type -> . YARN
    (36) type -> . NUMBR
    (37) type -> . NUMBAR
    (38) type -> . NOOB

    YARN            shift and go to state 110
    NUMBR           shift and go to state 111
    NUMBAR          shift and go to state 112
    NOOB            shift and go to state 113

    type                           shift and go to state 141

state 119

    (29) cast -> variable R MAEK variable . A type
    (30) cast -> variable R MAEK variable . type
    (50) expr -> variable .
    (35) type -> . YARN
    (36) type -> . NUMBR
    (37) type -> . NUMBAR
    (38) type -> . NOOB

  ! shift/reduce conflict for A resolved as shift
  ! shift/reduce conflict for YARN resolved as shift
  ! shift/reduce conflict for NUMBR resolved as shift
  ! shift/reduce conflict for NUMBAR resolved as shift
  ! shift/reduce conflict for NOOB resolved as shift
    A               shift and go to state 142
    YARN            shift and go to state 110
    NUMBR           shift and go to state 111
    NUMBAR          shift and go to state 112
    NOOB            shift and go to state 113

  ! A               [ reduce using rule 50 (expr -> variable .) ]
  ! YARN            [ reduce using rule 50 (expr -> variable .) ]
  ! NUMBR           [ reduce using rule 50 (expr -> variable .) ]
  ! NUMBAR          [ reduce using rule 50 (expr -> variable .) ]
  ! NOOB            [ reduce using rule 50 (expr -> variable .) ]

    type                           shift and go to state 143

state 120

    (51) expr -> SUM OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 144
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 121

    (52) expr -> DIFF OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 145
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 122

    (53) expr -> PRODUKT OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 146
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 123

    (54) expr -> QUOSHUNT OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 147
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 124

    (55) expr -> MOD OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 148
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 125

    (56) expr -> BIGGR OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 149
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 126

    (57) expr -> SMALLR OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 150
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 127

    (58) expr -> BOTH OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 151
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 128

    (66) expr -> BOTH SAEM expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 152
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 129

    (59) expr -> EITHER OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 153
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 130

    (60) expr -> WON OF expr AN . expr
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 154
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 131

    (62) expr -> ALL OF sep_args MKAY .

    NEWLINE         reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    COMMA           reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    AN              reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    MKAY            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    SIZE            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    ABSLUT          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    SUM             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    DIFF            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    PRODUKT         reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    MOD             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    BIGGR           reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    SMALLR          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    BOTH            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    EITHER          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    WON             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    NOT             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    ALL             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    ANY             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    DIFFRINT        reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    SMOOSH          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    MAEK            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    STRING          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    FLOAT           reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    INTEGER         reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    WIN             reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    FAIL            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    ID              reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    IT              reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    A               reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    YARN            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    NUMBR           reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    NUMBAR          reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    NOOB            reduce using rule 62 (expr -> ALL OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 62 (expr -> ALL OF sep_args MKAY .)


state 132

    (64) expr -> ALL OF args MKAY .

    NEWLINE         reduce using rule 64 (expr -> ALL OF args MKAY .)
    COMMA           reduce using rule 64 (expr -> ALL OF args MKAY .)
    AN              reduce using rule 64 (expr -> ALL OF args MKAY .)
    MKAY            reduce using rule 64 (expr -> ALL OF args MKAY .)
    SIZE            reduce using rule 64 (expr -> ALL OF args MKAY .)
    ABSLUT          reduce using rule 64 (expr -> ALL OF args MKAY .)
    SUM             reduce using rule 64 (expr -> ALL OF args MKAY .)
    DIFF            reduce using rule 64 (expr -> ALL OF args MKAY .)
    PRODUKT         reduce using rule 64 (expr -> ALL OF args MKAY .)
    QUOSHUNT        reduce using rule 64 (expr -> ALL OF args MKAY .)
    MOD             reduce using rule 64 (expr -> ALL OF args MKAY .)
    BIGGR           reduce using rule 64 (expr -> ALL OF args MKAY .)
    SMALLR          reduce using rule 64 (expr -> ALL OF args MKAY .)
    BOTH            reduce using rule 64 (expr -> ALL OF args MKAY .)
    EITHER          reduce using rule 64 (expr -> ALL OF args MKAY .)
    WON             reduce using rule 64 (expr -> ALL OF args MKAY .)
    NOT             reduce using rule 64 (expr -> ALL OF args MKAY .)
    ALL             reduce using rule 64 (expr -> ALL OF args MKAY .)
    ANY             reduce using rule 64 (expr -> ALL OF args MKAY .)
    DIFFRINT        reduce using rule 64 (expr -> ALL OF args MKAY .)
    SMOOSH          reduce using rule 64 (expr -> ALL OF args MKAY .)
    MAEK            reduce using rule 64 (expr -> ALL OF args MKAY .)
    STRING          reduce using rule 64 (expr -> ALL OF args MKAY .)
    FLOAT           reduce using rule 64 (expr -> ALL OF args MKAY .)
    INTEGER         reduce using rule 64 (expr -> ALL OF args MKAY .)
    WIN             reduce using rule 64 (expr -> ALL OF args MKAY .)
    FAIL            reduce using rule 64 (expr -> ALL OF args MKAY .)
    ID              reduce using rule 64 (expr -> ALL OF args MKAY .)
    IT              reduce using rule 64 (expr -> ALL OF args MKAY .)
    A               reduce using rule 64 (expr -> ALL OF args MKAY .)
    YARN            reduce using rule 64 (expr -> ALL OF args MKAY .)
    NUMBR           reduce using rule 64 (expr -> ALL OF args MKAY .)
    NUMBAR          reduce using rule 64 (expr -> ALL OF args MKAY .)
    NOOB            reduce using rule 64 (expr -> ALL OF args MKAY .)
    EXCLAMATION     reduce using rule 64 (expr -> ALL OF args MKAY .)


state 133

    (63) expr -> ANY OF sep_args MKAY .

    NEWLINE         reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    COMMA           reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    AN              reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    MKAY            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    SIZE            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    ABSLUT          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    SUM             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    DIFF            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    PRODUKT         reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    MOD             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    BIGGR           reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    SMALLR          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    BOTH            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    EITHER          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    WON             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    NOT             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    ALL             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    ANY             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    DIFFRINT        reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    SMOOSH          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    MAEK            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    STRING          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    FLOAT           reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    INTEGER         reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    WIN             reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    FAIL            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    ID              reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    IT              reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    A               reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    YARN            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    NUMBR           reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    NUMBAR          reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    NOOB            reduce using rule 63 (expr -> ANY OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 63 (expr -> ANY OF sep_args MKAY .)


state 134

    (65) expr -> ANY OF args MKAY .

    NEWLINE         reduce using rule 65 (expr -> ANY OF args MKAY .)
    COMMA           reduce using rule 65 (expr -> ANY OF args MKAY .)
    AN              reduce using rule 65 (expr -> ANY OF args MKAY .)
    MKAY            reduce using rule 65 (expr -> ANY OF args MKAY .)
    SIZE            reduce using rule 65 (expr -> ANY OF args MKAY .)
    ABSLUT          reduce using rule 65 (expr -> ANY OF args MKAY .)
    SUM             reduce using rule 65 (expr -> ANY OF args MKAY .)
    DIFF            reduce using rule 65 (expr -> ANY OF args MKAY .)
    PRODUKT         reduce using rule 65 (expr -> ANY OF args MKAY .)
    QUOSHUNT        reduce using rule 65 (expr -> ANY OF args MKAY .)
    MOD             reduce using rule 65 (expr -> ANY OF args MKAY .)
    BIGGR           reduce using rule 65 (expr -> ANY OF args MKAY .)
    SMALLR          reduce using rule 65 (expr -> ANY OF args MKAY .)
    BOTH            reduce using rule 65 (expr -> ANY OF args MKAY .)
    EITHER          reduce using rule 65 (expr -> ANY OF args MKAY .)
    WON             reduce using rule 65 (expr -> ANY OF args MKAY .)
    NOT             reduce using rule 65 (expr -> ANY OF args MKAY .)
    ALL             reduce using rule 65 (expr -> ANY OF args MKAY .)
    ANY             reduce using rule 65 (expr -> ANY OF args MKAY .)
    DIFFRINT        reduce using rule 65 (expr -> ANY OF args MKAY .)
    SMOOSH          reduce using rule 65 (expr -> ANY OF args MKAY .)
    MAEK            reduce using rule 65 (expr -> ANY OF args MKAY .)
    STRING          reduce using rule 65 (expr -> ANY OF args MKAY .)
    FLOAT           reduce using rule 65 (expr -> ANY OF args MKAY .)
    INTEGER         reduce using rule 65 (expr -> ANY OF args MKAY .)
    WIN             reduce using rule 65 (expr -> ANY OF args MKAY .)
    FAIL            reduce using rule 65 (expr -> ANY OF args MKAY .)
    ID              reduce using rule 65 (expr -> ANY OF args MKAY .)
    IT              reduce using rule 65 (expr -> ANY OF args MKAY .)
    A               reduce using rule 65 (expr -> ANY OF args MKAY .)
    YARN            reduce using rule 65 (expr -> ANY OF args MKAY .)
    NUMBR           reduce using rule 65 (expr -> ANY OF args MKAY .)
    NUMBAR          reduce using rule 65 (expr -> ANY OF args MKAY .)
    NOOB            reduce using rule 65 (expr -> ANY OF args MKAY .)
    EXCLAMATION     reduce using rule 65 (expr -> ANY OF args MKAY .)


state 135

    (67) expr -> DIFFRINT expr AN expr .

    NEWLINE         reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    COMMA           reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    AN              reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    MKAY            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    SIZE            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    ABSLUT          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    SUM             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    DIFF            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    PRODUKT         reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    QUOSHUNT        reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    MOD             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    BIGGR           reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    SMALLR          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    BOTH            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    EITHER          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    WON             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    NOT             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    ALL             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    ANY             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    DIFFRINT        reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    SMOOSH          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    MAEK            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    STRING          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    FLOAT           reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    INTEGER         reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    WIN             reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    FAIL            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    ID              reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    IT              reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    A               reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    YARN            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    NUMBR           reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    NUMBAR          reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    NOOB            reduce using rule 67 (expr -> DIFFRINT expr AN expr .)
    EXCLAMATION     reduce using rule 67 (expr -> DIFFRINT expr AN expr .)


state 136

    (33) sep_args -> sep_args AN expr .

    MKAY            reduce using rule 33 (sep_args -> sep_args AN expr .)
    AN              reduce using rule 33 (sep_args -> sep_args AN expr .)


state 137

    (70) expr -> MAEK expr A type .

    NEWLINE         reduce using rule 70 (expr -> MAEK expr A type .)
    COMMA           reduce using rule 70 (expr -> MAEK expr A type .)
    AN              reduce using rule 70 (expr -> MAEK expr A type .)
    MKAY            reduce using rule 70 (expr -> MAEK expr A type .)
    SIZE            reduce using rule 70 (expr -> MAEK expr A type .)
    ABSLUT          reduce using rule 70 (expr -> MAEK expr A type .)
    SUM             reduce using rule 70 (expr -> MAEK expr A type .)
    DIFF            reduce using rule 70 (expr -> MAEK expr A type .)
    PRODUKT         reduce using rule 70 (expr -> MAEK expr A type .)
    QUOSHUNT        reduce using rule 70 (expr -> MAEK expr A type .)
    MOD             reduce using rule 70 (expr -> MAEK expr A type .)
    BIGGR           reduce using rule 70 (expr -> MAEK expr A type .)
    SMALLR          reduce using rule 70 (expr -> MAEK expr A type .)
    BOTH            reduce using rule 70 (expr -> MAEK expr A type .)
    EITHER          reduce using rule 70 (expr -> MAEK expr A type .)
    WON             reduce using rule 70 (expr -> MAEK expr A type .)
    NOT             reduce using rule 70 (expr -> MAEK expr A type .)
    ALL             reduce using rule 70 (expr -> MAEK expr A type .)
    ANY             reduce using rule 70 (expr -> MAEK expr A type .)
    DIFFRINT        reduce using rule 70 (expr -> MAEK expr A type .)
    SMOOSH          reduce using rule 70 (expr -> MAEK expr A type .)
    MAEK            reduce using rule 70 (expr -> MAEK expr A type .)
    STRING          reduce using rule 70 (expr -> MAEK expr A type .)
    FLOAT           reduce using rule 70 (expr -> MAEK expr A type .)
    INTEGER         reduce using rule 70 (expr -> MAEK expr A type .)
    WIN             reduce using rule 70 (expr -> MAEK expr A type .)
    FAIL            reduce using rule 70 (expr -> MAEK expr A type .)
    ID              reduce using rule 70 (expr -> MAEK expr A type .)
    IT              reduce using rule 70 (expr -> MAEK expr A type .)
    A               reduce using rule 70 (expr -> MAEK expr A type .)
    YARN            reduce using rule 70 (expr -> MAEK expr A type .)
    NUMBR           reduce using rule 70 (expr -> MAEK expr A type .)
    NUMBAR          reduce using rule 70 (expr -> MAEK expr A type .)
    NOOB            reduce using rule 70 (expr -> MAEK expr A type .)
    EXCLAMATION     reduce using rule 70 (expr -> MAEK expr A type .)


state 138

    (25) decl -> I HAS A variable .
    (26) decl -> I HAS A variable . ITZ value

    NEWLINE         reduce using rule 25 (decl -> I HAS A variable .)
    COMMA           reduce using rule 25 (decl -> I HAS A variable .)
    ITZ             shift and go to state 155


state 139

    (19) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements OIC
    (21) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    YA              shift and go to state 156


state 140

    (14) loop -> IM IN YR variable . operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (15) operation -> . UPPIN
    (16) operation -> . NERFIN

    UPPIN           shift and go to state 158
    NERFIN          shift and go to state 159

    operation                      shift and go to state 157

state 141

    (28) cast -> variable IS NOW A type .

    NEWLINE         reduce using rule 28 (cast -> variable IS NOW A type .)
    COMMA           reduce using rule 28 (cast -> variable IS NOW A type .)


state 142

    (29) cast -> variable R MAEK variable A . type
    (35) type -> . YARN
    (36) type -> . NUMBR
    (37) type -> . NUMBAR
    (38) type -> . NOOB

    YARN            shift and go to state 110
    NUMBR           shift and go to state 111
    NUMBAR          shift and go to state 112
    NOOB            shift and go to state 113

    type                           shift and go to state 160

state 143

    (30) cast -> variable R MAEK variable type .

    NEWLINE         reduce using rule 30 (cast -> variable R MAEK variable type .)
    COMMA           reduce using rule 30 (cast -> variable R MAEK variable type .)


state 144

    (51) expr -> SUM OF expr AN expr .

    NEWLINE         reduce using rule 51 (expr -> SUM OF expr AN expr .)
    COMMA           reduce using rule 51 (expr -> SUM OF expr AN expr .)
    AN              reduce using rule 51 (expr -> SUM OF expr AN expr .)
    MKAY            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    SIZE            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    ABSLUT          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    SUM             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    DIFF            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    PRODUKT         reduce using rule 51 (expr -> SUM OF expr AN expr .)
    QUOSHUNT        reduce using rule 51 (expr -> SUM OF expr AN expr .)
    MOD             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    BIGGR           reduce using rule 51 (expr -> SUM OF expr AN expr .)
    SMALLR          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    BOTH            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    EITHER          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    WON             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    NOT             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    ALL             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    ANY             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    DIFFRINT        reduce using rule 51 (expr -> SUM OF expr AN expr .)
    SMOOSH          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    MAEK            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    STRING          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    FLOAT           reduce using rule 51 (expr -> SUM OF expr AN expr .)
    INTEGER         reduce using rule 51 (expr -> SUM OF expr AN expr .)
    WIN             reduce using rule 51 (expr -> SUM OF expr AN expr .)
    FAIL            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    ID              reduce using rule 51 (expr -> SUM OF expr AN expr .)
    IT              reduce using rule 51 (expr -> SUM OF expr AN expr .)
    A               reduce using rule 51 (expr -> SUM OF expr AN expr .)
    YARN            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    NUMBR           reduce using rule 51 (expr -> SUM OF expr AN expr .)
    NUMBAR          reduce using rule 51 (expr -> SUM OF expr AN expr .)
    NOOB            reduce using rule 51 (expr -> SUM OF expr AN expr .)
    EXCLAMATION     reduce using rule 51 (expr -> SUM OF expr AN expr .)


state 145

    (52) expr -> DIFF OF expr AN expr .

    NEWLINE         reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    COMMA           reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    AN              reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    MKAY            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    SIZE            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    ABSLUT          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    SUM             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    DIFF            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    PRODUKT         reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    QUOSHUNT        reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    MOD             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    BIGGR           reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    SMALLR          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    BOTH            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    EITHER          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    WON             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    NOT             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    ALL             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    ANY             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    DIFFRINT        reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    SMOOSH          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    MAEK            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    STRING          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    FLOAT           reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    INTEGER         reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    WIN             reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    FAIL            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    ID              reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    IT              reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    A               reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    YARN            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    NUMBR           reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    NUMBAR          reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    NOOB            reduce using rule 52 (expr -> DIFF OF expr AN expr .)
    EXCLAMATION     reduce using rule 52 (expr -> DIFF OF expr AN expr .)


state 146

    (53) expr -> PRODUKT OF expr AN expr .

    NEWLINE         reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    COMMA           reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    AN              reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    MKAY            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    SIZE            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    ABSLUT          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    SUM             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    DIFF            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    PRODUKT         reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    QUOSHUNT        reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    MOD             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    BIGGR           reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    SMALLR          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    BOTH            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    EITHER          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    WON             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    NOT             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    ALL             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    ANY             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    DIFFRINT        reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    SMOOSH          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    MAEK            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    STRING          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    FLOAT           reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    INTEGER         reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    WIN             reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    FAIL            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    ID              reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    IT              reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    A               reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    YARN            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    NUMBR           reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    NUMBAR          reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    NOOB            reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)
    EXCLAMATION     reduce using rule 53 (expr -> PRODUKT OF expr AN expr .)


state 147

    (54) expr -> QUOSHUNT OF expr AN expr .

    NEWLINE         reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    COMMA           reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    AN              reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    MKAY            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    SIZE            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    ABSLUT          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    SUM             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    DIFF            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    PRODUKT         reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    QUOSHUNT        reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    MOD             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    BIGGR           reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    SMALLR          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    BOTH            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    EITHER          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    WON             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    NOT             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    ALL             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    ANY             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    DIFFRINT        reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    SMOOSH          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    MAEK            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    STRING          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    FLOAT           reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    INTEGER         reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    WIN             reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    FAIL            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    ID              reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    IT              reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    A               reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    YARN            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBR           reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBAR          reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    NOOB            reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)
    EXCLAMATION     reduce using rule 54 (expr -> QUOSHUNT OF expr AN expr .)


state 148

    (55) expr -> MOD OF expr AN expr .

    NEWLINE         reduce using rule 55 (expr -> MOD OF expr AN expr .)
    COMMA           reduce using rule 55 (expr -> MOD OF expr AN expr .)
    AN              reduce using rule 55 (expr -> MOD OF expr AN expr .)
    MKAY            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    SIZE            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    ABSLUT          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    SUM             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    DIFF            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    PRODUKT         reduce using rule 55 (expr -> MOD OF expr AN expr .)
    QUOSHUNT        reduce using rule 55 (expr -> MOD OF expr AN expr .)
    MOD             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    BIGGR           reduce using rule 55 (expr -> MOD OF expr AN expr .)
    SMALLR          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    BOTH            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    EITHER          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    WON             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    NOT             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    ALL             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    ANY             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    DIFFRINT        reduce using rule 55 (expr -> MOD OF expr AN expr .)
    SMOOSH          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    MAEK            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    STRING          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    FLOAT           reduce using rule 55 (expr -> MOD OF expr AN expr .)
    INTEGER         reduce using rule 55 (expr -> MOD OF expr AN expr .)
    WIN             reduce using rule 55 (expr -> MOD OF expr AN expr .)
    FAIL            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    ID              reduce using rule 55 (expr -> MOD OF expr AN expr .)
    IT              reduce using rule 55 (expr -> MOD OF expr AN expr .)
    A               reduce using rule 55 (expr -> MOD OF expr AN expr .)
    YARN            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    NUMBR           reduce using rule 55 (expr -> MOD OF expr AN expr .)
    NUMBAR          reduce using rule 55 (expr -> MOD OF expr AN expr .)
    NOOB            reduce using rule 55 (expr -> MOD OF expr AN expr .)
    EXCLAMATION     reduce using rule 55 (expr -> MOD OF expr AN expr .)


state 149

    (56) expr -> BIGGR OF expr AN expr .

    NEWLINE         reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    COMMA           reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    AN              reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    MKAY            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    SIZE            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    ABSLUT          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    SUM             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    DIFF            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    PRODUKT         reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    QUOSHUNT        reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    MOD             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    BIGGR           reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    SMALLR          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    BOTH            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    EITHER          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    WON             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    NOT             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    ALL             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    ANY             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    DIFFRINT        reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    SMOOSH          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    MAEK            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    STRING          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    FLOAT           reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    INTEGER         reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    WIN             reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    FAIL            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    ID              reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    IT              reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    A               reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    YARN            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    NUMBR           reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    NUMBAR          reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    NOOB            reduce using rule 56 (expr -> BIGGR OF expr AN expr .)
    EXCLAMATION     reduce using rule 56 (expr -> BIGGR OF expr AN expr .)


state 150

    (57) expr -> SMALLR OF expr AN expr .

    NEWLINE         reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    COMMA           reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    AN              reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    MKAY            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    SIZE            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    ABSLUT          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    SUM             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    DIFF            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    PRODUKT         reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    QUOSHUNT        reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    MOD             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    BIGGR           reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    SMALLR          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    BOTH            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    EITHER          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    WON             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    NOT             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    ALL             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    ANY             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    DIFFRINT        reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    SMOOSH          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    MAEK            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    STRING          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    FLOAT           reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    INTEGER         reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    WIN             reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    FAIL            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    ID              reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    IT              reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    A               reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    YARN            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    NUMBR           reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    NUMBAR          reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    NOOB            reduce using rule 57 (expr -> SMALLR OF expr AN expr .)
    EXCLAMATION     reduce using rule 57 (expr -> SMALLR OF expr AN expr .)


state 151

    (58) expr -> BOTH OF expr AN expr .

    NEWLINE         reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    COMMA           reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    AN              reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    MKAY            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    SIZE            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    ABSLUT          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    SUM             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    DIFF            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    PRODUKT         reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    QUOSHUNT        reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    MOD             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    BIGGR           reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    SMALLR          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    BOTH            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    EITHER          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    WON             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    NOT             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    ALL             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    ANY             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    DIFFRINT        reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    SMOOSH          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    MAEK            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    STRING          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    FLOAT           reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    INTEGER         reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    WIN             reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    FAIL            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    ID              reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    IT              reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    A               reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    YARN            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    NUMBR           reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    NUMBAR          reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    NOOB            reduce using rule 58 (expr -> BOTH OF expr AN expr .)
    EXCLAMATION     reduce using rule 58 (expr -> BOTH OF expr AN expr .)


state 152

    (66) expr -> BOTH SAEM expr AN expr .

    NEWLINE         reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    COMMA           reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    AN              reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    MKAY            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    SIZE            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    ABSLUT          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    SUM             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    DIFF            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    PRODUKT         reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    QUOSHUNT        reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    MOD             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    BIGGR           reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    SMALLR          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    BOTH            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    EITHER          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    WON             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    NOT             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    ALL             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    ANY             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    DIFFRINT        reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    SMOOSH          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    MAEK            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    STRING          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    FLOAT           reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    INTEGER         reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    WIN             reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    FAIL            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    ID              reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    IT              reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    A               reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    YARN            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    NUMBR           reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    NUMBAR          reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    NOOB            reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)
    EXCLAMATION     reduce using rule 66 (expr -> BOTH SAEM expr AN expr .)


state 153

    (59) expr -> EITHER OF expr AN expr .

    NEWLINE         reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    COMMA           reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    AN              reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    MKAY            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    SIZE            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    ABSLUT          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    SUM             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    DIFF            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    PRODUKT         reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    QUOSHUNT        reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    MOD             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    BIGGR           reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    SMALLR          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    BOTH            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    EITHER          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    WON             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    NOT             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    ALL             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    ANY             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    DIFFRINT        reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    SMOOSH          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    MAEK            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    STRING          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    FLOAT           reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    INTEGER         reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    WIN             reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    FAIL            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    ID              reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    IT              reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    A               reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    YARN            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    NUMBR           reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    NUMBAR          reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    NOOB            reduce using rule 59 (expr -> EITHER OF expr AN expr .)
    EXCLAMATION     reduce using rule 59 (expr -> EITHER OF expr AN expr .)


state 154

    (60) expr -> WON OF expr AN expr .

    NEWLINE         reduce using rule 60 (expr -> WON OF expr AN expr .)
    COMMA           reduce using rule 60 (expr -> WON OF expr AN expr .)
    AN              reduce using rule 60 (expr -> WON OF expr AN expr .)
    MKAY            reduce using rule 60 (expr -> WON OF expr AN expr .)
    SIZE            reduce using rule 60 (expr -> WON OF expr AN expr .)
    ABSLUT          reduce using rule 60 (expr -> WON OF expr AN expr .)
    SUM             reduce using rule 60 (expr -> WON OF expr AN expr .)
    DIFF            reduce using rule 60 (expr -> WON OF expr AN expr .)
    PRODUKT         reduce using rule 60 (expr -> WON OF expr AN expr .)
    QUOSHUNT        reduce using rule 60 (expr -> WON OF expr AN expr .)
    MOD             reduce using rule 60 (expr -> WON OF expr AN expr .)
    BIGGR           reduce using rule 60 (expr -> WON OF expr AN expr .)
    SMALLR          reduce using rule 60 (expr -> WON OF expr AN expr .)
    BOTH            reduce using rule 60 (expr -> WON OF expr AN expr .)
    EITHER          reduce using rule 60 (expr -> WON OF expr AN expr .)
    WON             reduce using rule 60 (expr -> WON OF expr AN expr .)
    NOT             reduce using rule 60 (expr -> WON OF expr AN expr .)
    ALL             reduce using rule 60 (expr -> WON OF expr AN expr .)
    ANY             reduce using rule 60 (expr -> WON OF expr AN expr .)
    DIFFRINT        reduce using rule 60 (expr -> WON OF expr AN expr .)
    SMOOSH          reduce using rule 60 (expr -> WON OF expr AN expr .)
    MAEK            reduce using rule 60 (expr -> WON OF expr AN expr .)
    STRING          reduce using rule 60 (expr -> WON OF expr AN expr .)
    FLOAT           reduce using rule 60 (expr -> WON OF expr AN expr .)
    INTEGER         reduce using rule 60 (expr -> WON OF expr AN expr .)
    WIN             reduce using rule 60 (expr -> WON OF expr AN expr .)
    FAIL            reduce using rule 60 (expr -> WON OF expr AN expr .)
    ID              reduce using rule 60 (expr -> WON OF expr AN expr .)
    IT              reduce using rule 60 (expr -> WON OF expr AN expr .)
    A               reduce using rule 60 (expr -> WON OF expr AN expr .)
    YARN            reduce using rule 60 (expr -> WON OF expr AN expr .)
    NUMBR           reduce using rule 60 (expr -> WON OF expr AN expr .)
    NUMBAR          reduce using rule 60 (expr -> WON OF expr AN expr .)
    NOOB            reduce using rule 60 (expr -> WON OF expr AN expr .)
    EXCLAMATION     reduce using rule 60 (expr -> WON OF expr AN expr .)


state 155

    (26) decl -> I HAS A variable ITZ . value
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL

    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46

    value                          shift and go to state 161

state 156

    (19) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements OIC
    (21) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 162


state 157

    (14) loop -> IM IN YR variable operation . YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 163


state 158

    (15) operation -> UPPIN .

    YR              reduce using rule 15 (operation -> UPPIN .)


state 159

    (16) operation -> NERFIN .

    YR              reduce using rule 16 (operation -> NERFIN .)


state 160

    (29) cast -> variable R MAEK variable A type .

    NEWLINE         reduce using rule 29 (cast -> variable R MAEK variable A type .)
    COMMA           reduce using rule 29 (cast -> variable R MAEK variable A type .)


state 161

    (26) decl -> I HAS A variable ITZ value .

    NEWLINE         reduce using rule 26 (decl -> I HAS A variable ITZ value .)
    COMMA           reduce using rule 26 (decl -> I HAS A variable ITZ value .)


state 162

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements OIC
    (21) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 164


state 163

    (14) loop -> IM IN YR variable operation YR . variable condition expr NEWLINE statements IM OUTTA YR variable
    (72) variable -> . ID
    (73) variable -> . IT

    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 165

state 164

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements OIC
    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements elifs NO WAI NEWLINE statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statements                     shift and go to state 166
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 165

    (14) loop -> IM IN YR variable operation YR variable . condition expr NEWLINE statements IM OUTTA YR variable
    (17) condition -> . TIL
    (18) condition -> . WILE

    TIL             shift and go to state 168
    WILE            shift and go to state 169

    condition                      shift and go to state 167

state 166

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . NO WAI NEWLINE statements OIC
    (20) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . OIC
    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . elifs NO WAI NEWLINE statements OIC
    (2) statements -> statements . statement
    (22) elifs -> . elifs elif
    (23) elifs -> . elif
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (24) elif -> . MEBBE expr NEWLINE statements
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NO              shift and go to state 170
    OIC             shift and go to state 171
    MEBBE           shift and go to state 174
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    elifs                          shift and go to state 172
    statement                      shift and go to state 50
    elif                           shift and go to state 173
    command                        shift and go to state 9
    expr                           shift and go to state 11
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 167

    (14) loop -> IM IN YR variable operation YR variable condition . expr NEWLINE statements IM OUTTA YR variable
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 69
    expr                           shift and go to state 175
    value                          shift and go to state 20

state 168

    (17) condition -> TIL .

    SIZE            reduce using rule 17 (condition -> TIL .)
    ABSLUT          reduce using rule 17 (condition -> TIL .)
    SUM             reduce using rule 17 (condition -> TIL .)
    DIFF            reduce using rule 17 (condition -> TIL .)
    PRODUKT         reduce using rule 17 (condition -> TIL .)
    QUOSHUNT        reduce using rule 17 (condition -> TIL .)
    MOD             reduce using rule 17 (condition -> TIL .)
    BIGGR           reduce using rule 17 (condition -> TIL .)
    SMALLR          reduce using rule 17 (condition -> TIL .)
    BOTH            reduce using rule 17 (condition -> TIL .)
    EITHER          reduce using rule 17 (condition -> TIL .)
    WON             reduce using rule 17 (condition -> TIL .)
    NOT             reduce using rule 17 (condition -> TIL .)
    ALL             reduce using rule 17 (condition -> TIL .)
    ANY             reduce using rule 17 (condition -> TIL .)
    DIFFRINT        reduce using rule 17 (condition -> TIL .)
    SMOOSH          reduce using rule 17 (condition -> TIL .)
    MAEK            reduce using rule 17 (condition -> TIL .)
    STRING          reduce using rule 17 (condition -> TIL .)
    FLOAT           reduce using rule 17 (condition -> TIL .)
    INTEGER         reduce using rule 17 (condition -> TIL .)
    WIN             reduce using rule 17 (condition -> TIL .)
    FAIL            reduce using rule 17 (condition -> TIL .)
    ID              reduce using rule 17 (condition -> TIL .)
    IT              reduce using rule 17 (condition -> TIL .)


state 169

    (18) condition -> WILE .

    SIZE            reduce using rule 18 (condition -> WILE .)
    ABSLUT          reduce using rule 18 (condition -> WILE .)
    SUM             reduce using rule 18 (condition -> WILE .)
    DIFF            reduce using rule 18 (condition -> WILE .)
    PRODUKT         reduce using rule 18 (condition -> WILE .)
    QUOSHUNT        reduce using rule 18 (condition -> WILE .)
    MOD             reduce using rule 18 (condition -> WILE .)
    BIGGR           reduce using rule 18 (condition -> WILE .)
    SMALLR          reduce using rule 18 (condition -> WILE .)
    BOTH            reduce using rule 18 (condition -> WILE .)
    EITHER          reduce using rule 18 (condition -> WILE .)
    WON             reduce using rule 18 (condition -> WILE .)
    NOT             reduce using rule 18 (condition -> WILE .)
    ALL             reduce using rule 18 (condition -> WILE .)
    ANY             reduce using rule 18 (condition -> WILE .)
    DIFFRINT        reduce using rule 18 (condition -> WILE .)
    SMOOSH          reduce using rule 18 (condition -> WILE .)
    MAEK            reduce using rule 18 (condition -> WILE .)
    STRING          reduce using rule 18 (condition -> WILE .)
    FLOAT           reduce using rule 18 (condition -> WILE .)
    INTEGER         reduce using rule 18 (condition -> WILE .)
    WIN             reduce using rule 18 (condition -> WILE .)
    FAIL            reduce using rule 18 (condition -> WILE .)
    ID              reduce using rule 18 (condition -> WILE .)
    IT              reduce using rule 18 (condition -> WILE .)


state 170

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 176


state 171

    (20) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .

    NEWLINE         reduce using rule 20 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)
    COMMA           reduce using rule 20 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)


state 172

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs . NO WAI NEWLINE statements OIC
    (22) elifs -> elifs . elif
    (24) elif -> . MEBBE expr NEWLINE statements

    NO              shift and go to state 177
    MEBBE           shift and go to state 174

    elif                           shift and go to state 178

state 173

    (23) elifs -> elif .

    NO              reduce using rule 23 (elifs -> elif .)
    MEBBE           reduce using rule 23 (elifs -> elif .)


state 174

    (24) elif -> MEBBE . expr NEWLINE statements
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 179
    value                          shift and go to state 20
    variable                       shift and go to state 69

state 175

    (14) loop -> IM IN YR variable operation YR variable condition expr . NEWLINE statements IM OUTTA YR variable

    NEWLINE         shift and go to state 180


state 176

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 181


state 177

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 182


state 178

    (22) elifs -> elifs elif .

    NO              reduce using rule 22 (elifs -> elifs elif .)
    MEBBE           reduce using rule 22 (elifs -> elifs elif .)


state 179

    (24) elif -> MEBBE expr . NEWLINE statements

    NEWLINE         shift and go to state 183


state 180

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE . statements IM OUTTA YR variable
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 21
    expr                           shift and go to state 11
    statements                     shift and go to state 184
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20

state 181

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statements                     shift and go to state 185
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 182

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 186


state 183

    (24) elif -> MEBBE expr NEWLINE . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 11
    statements                     shift and go to state 187
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 184

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements . IM OUTTA YR variable
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    IM              shift and go to state 188
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 21
    expr                           shift and go to state 11
    statement                      shift and go to state 50
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20

state 185

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    OIC             shift and go to state 189
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statement                      shift and go to state 50
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 186

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statements                     shift and go to state 190
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 187

    (24) elif -> MEBBE expr NEWLINE statements .
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    NO              reduce using rule 24 (elif -> MEBBE expr NEWLINE statements .)
    MEBBE           reduce using rule 24 (elif -> MEBBE expr NEWLINE statements .)
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    expr                           shift and go to state 11
    statement                      shift and go to state 50
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 188

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM . OUTTA YR variable
    (14) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    OUTTA           shift and go to state 191
    IN              shift and go to state 82


state 189

    (19) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 19 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 19 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)


state 190

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign
    (12) command -> . if_else
    (13) command -> . loop
    (75) empty -> .
    (47) expr -> . SIZE OF expr
    (48) expr -> . ABSLUT OF expr
    (49) expr -> . value
    (50) expr -> . variable
    (51) expr -> . SUM OF expr AN expr
    (52) expr -> . DIFF OF expr AN expr
    (53) expr -> . PRODUKT OF expr AN expr
    (54) expr -> . QUOSHUNT OF expr AN expr
    (55) expr -> . MOD OF expr AN expr
    (56) expr -> . BIGGR OF expr AN expr
    (57) expr -> . SMALLR OF expr AN expr
    (58) expr -> . BOTH OF expr AN expr
    (59) expr -> . EITHER OF expr AN expr
    (60) expr -> . WON OF expr AN expr
    (61) expr -> . NOT expr
    (62) expr -> . ALL OF sep_args MKAY
    (63) expr -> . ANY OF sep_args MKAY
    (64) expr -> . ALL OF args MKAY
    (65) expr -> . ANY OF args MKAY
    (66) expr -> . BOTH SAEM expr AN expr
    (67) expr -> . DIFFRINT expr AN expr
    (68) expr -> . SMOOSH sep_args MKAY
    (69) expr -> . SMOOSH args MKAY
    (70) expr -> . MAEK expr A type
    (71) expr -> . MAEK expr type
    (44) call -> . VISIBLE args
    (45) call -> . VISIBLE args EXCLAMATION
    (46) call -> . GIMMEH variable
    (28) cast -> . variable IS NOW A type
    (29) cast -> . variable R MAEK variable A type
    (30) cast -> . variable R MAEK variable type
    (25) decl -> . I HAS A variable
    (26) decl -> . I HAS A variable ITZ value
    (27) assign -> . variable R expr
    (19) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (20) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (14) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (39) value -> . STRING
    (40) value -> . FLOAT
    (41) value -> . INTEGER
    (42) value -> . WIN
    (43) value -> . FAIL
    (72) variable -> . ID
    (73) variable -> . IT

    OIC             shift and go to state 192
    NEWLINE         reduce using rule 75 (empty -> .)
    COMMA           reduce using rule 75 (empty -> .)
    SIZE            shift and go to state 18
    ABSLUT          shift and go to state 19
    SUM             shift and go to state 22
    DIFF            shift and go to state 23
    PRODUKT         shift and go to state 24
    QUOSHUNT        shift and go to state 25
    MOD             shift and go to state 26
    BIGGR           shift and go to state 27
    SMALLR          shift and go to state 28
    BOTH            shift and go to state 29
    EITHER          shift and go to state 30
    WON             shift and go to state 31
    NOT             shift and go to state 32
    ALL             shift and go to state 33
    ANY             shift and go to state 34
    DIFFRINT        shift and go to state 35
    SMOOSH          shift and go to state 36
    MAEK            shift and go to state 37
    VISIBLE         shift and go to state 38
    GIMMEH          shift and go to state 39
    I               shift and go to state 40
    O               shift and go to state 41
    IM              shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 44
    WIN             shift and go to state 45
    FAIL            shift and go to state 46
    ID              shift and go to state 47
    IT              shift and go to state 48

    statement                      shift and go to state 50
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign                         shift and go to state 15
    if_else                        shift and go to state 16
    loop                           shift and go to state 17
    value                          shift and go to state 20
    variable                       shift and go to state 21

state 191

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA . YR variable

    YR              shift and go to state 193


state 192

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 21 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 21 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)


state 193

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR . variable
    (72) variable -> . ID
    (73) variable -> . IT

    ID              shift and go to state 47
    IT              shift and go to state 48

    variable                       shift and go to state 194

state 194

    (14) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .

    NEWLINE         reduce using rule 14 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)
    COMMA           reduce using rule 14 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for A in state 119 resolved as shift
WARNING: shift/reduce conflict for YARN in state 119 resolved as shift
WARNING: shift/reduce conflict for NUMBR in state 119 resolved as shift
WARNING: shift/reduce conflict for NUMBAR in state 119 resolved as shift
WARNING: shift/reduce conflict for NOOB in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 75 resolved using rule (args -> expr)
WARNING: rejected rule (sep_args -> expr) in state 75

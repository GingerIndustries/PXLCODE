Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELLIPSIS
    GTFO
    OMG
    OMGWTF
    TROOF
    WTF

Grammar

Rule 0     S' -> program
Rule 1     program -> HAI FLOAT NEWLINE statements KTHXBYE
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> command NEWLINE
Rule 5     statement -> command COMMA
Rule 6     command -> empty
Rule 7     command -> expr
Rule 8     command -> call
Rule 9     command -> cast
Rule 10    command -> decl
Rule 11    command -> assign_bukkit
Rule 12    command -> assign
Rule 13    command -> if_else
Rule 14    command -> function
Rule 15    command -> loop
Rule 16    loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
Rule 17    operation -> UPPIN
Rule 18    operation -> NERFIN
Rule 19    condition -> TIL
Rule 20    condition -> WILE
Rule 21    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
Rule 22    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
Rule 23    if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
Rule 24    elifs -> elifs elif
Rule 25    elifs -> elif
Rule 26    elif -> MEBBE expr NEWLINE statements
Rule 27    decl -> I HAS A variable
Rule 28    decl -> I HAS A variable ITZ expr
Rule 29    decl -> I HAS A variable ITZ A type
Rule 30    assign_bukkit -> variable HAS A variable ITZ expr
Rule 31    assign -> variable R expr
Rule 32    expr -> variable APOSTROPHE_Z variable
Rule 33    cast -> variable IS NOW A type
Rule 34    cast -> variable R MAEK variable A type
Rule 35    cast -> variable R MAEK variable type
Rule 36    args -> args expr
Rule 37    args -> expr
Rule 38    sep_args -> sep_args AN expr
Rule 39    sep_args -> expr
Rule 40    sep_yr_args -> sep_yr_args AN YR expr
Rule 41    sep_yr_args -> expr
Rule 42    function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
Rule 43    function -> HOW IZ I ID NEWLINE statements IF U SAY SO
Rule 44    expr -> I IZ ID YR sep_yr_args MKAY
Rule 45    expr -> I IZ ID
Rule 46    type -> YARN
Rule 47    type -> NUMBR
Rule 48    type -> NUMBAR
Rule 49    type -> NOOB
Rule 50    type -> BUKKIT
Rule 51    value -> STRING
Rule 52    value -> FLOAT
Rule 53    value -> INTEGER
Rule 54    value -> WIN
Rule 55    value -> FAIL
Rule 56    value -> DICT
Rule 57    call -> VISIBLE args
Rule 58    call -> VISIBLE args EXCLAMATION
Rule 59    call -> GIMMEH variable
Rule 60    expr -> SIZE OF expr
Rule 61    expr -> ABSLUT OF expr
Rule 62    expr -> value
Rule 63    expr -> variable
Rule 64    expr -> SUM OF expr AN expr
Rule 65    expr -> DIFF OF expr AN expr
Rule 66    expr -> PRODUKT OF expr AN expr
Rule 67    expr -> QUOSHUNT OF expr AN expr
Rule 68    expr -> MOD OF expr AN expr
Rule 69    expr -> BIGGR OF expr AN expr
Rule 70    expr -> SMALLR OF expr AN expr
Rule 71    expr -> BOTH OF expr AN expr
Rule 72    expr -> EITHER OF expr AN expr
Rule 73    expr -> WON OF expr AN expr
Rule 74    expr -> NOT expr
Rule 75    expr -> ALL OF sep_args MKAY
Rule 76    expr -> ANY OF sep_args MKAY
Rule 77    expr -> ALL OF args MKAY
Rule 78    expr -> ANY OF args MKAY
Rule 79    expr -> BOTH SAEM expr AN expr
Rule 80    expr -> DIFFRINT expr AN expr
Rule 81    expr -> SMOOSH sep_args MKAY
Rule 82    expr -> SMOOSH args MKAY
Rule 83    expr -> MAEK expr A type
Rule 84    expr -> MAEK expr type
Rule 85    variable -> ID
Rule 86    variable -> IT
Rule 87    program -> error
Rule 88    empty -> <empty>

Terminals, with rules where they appear

A                    : 27 28 29 29 30 33 34 83
ABSLUT               : 61
ALL                  : 75 77
AN                   : 38 40 64 65 66 67 68 69 70 71 72 73 79 80
ANY                  : 76 78
APOSTROPHE_Z         : 32
BIGGR                : 69
BOTH                 : 71 79
BUKKIT               : 50
COMMA                : 5
DICT                 : 56
DIFF                 : 65
DIFFRINT             : 80
EITHER               : 72
ELLIPSIS             : 
EXCLAMATION          : 58
FAIL                 : 55
FLOAT                : 1 52
GIMMEH               : 59
GTFO                 : 
HAI                  : 1
HAS                  : 27 28 29 30
HOW                  : 42 43
I                    : 27 28 29 42 43 44 45
ID                   : 42 43 44 45 85
IF                   : 42 43
IM                   : 16 16
IN                   : 16
INTEGER              : 53
IS                   : 33
IT                   : 86
ITZ                  : 28 29 30
IZ                   : 42 43 44 45
KTHXBYE              : 1
MAEK                 : 34 35 83 84
MEBBE                : 26
MKAY                 : 44 75 76 77 78 81 82
MOD                  : 68
NERFIN               : 18
NEWLINE              : 1 4 16 21 21 21 22 22 23 23 23 26 42 43
NO                   : 21 23
NOOB                 : 49
NOT                  : 74
NOW                  : 33
NUMBAR               : 48
NUMBR                : 47
O                    : 21 22 23
OF                   : 60 61 64 65 66 67 68 69 70 71 72 73 75 76 77 78
OIC                  : 21 22 23
OMG                  : 
OMGWTF               : 
OUTTA                : 16
PRODUKT              : 66
QUESTION             : 21 22 23
QUOSHUNT             : 67
R                    : 31 34 35
RLY                  : 21 21 22 22 23 23
SAEM                 : 79
SAY                  : 42 43
SIZE                 : 60
SMALLR               : 70
SMOOSH               : 81 82
SO                   : 42 43
STRING               : 51
SUM                  : 64
TIL                  : 19
TROOF                : 
U                    : 42 43
UPPIN                : 17
VISIBLE              : 57 58
WAI                  : 21 23
WILE                 : 20
WIN                  : 54
WON                  : 73
WTF                  : 
YA                   : 21 22 23
YARN                 : 46
YR                   : 16 16 16 40 42 44
error                : 87

Nonterminals, with rules where they appear

args                 : 36 57 58 77 78 82
assign               : 12
assign_bukkit        : 11
call                 : 8
cast                 : 9
command              : 4 5
condition            : 16
decl                 : 10
elif                 : 24 25
elifs                : 23 24
empty                : 6
expr                 : 7 16 26 28 30 31 36 37 38 39 40 41 60 61 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 79 79 80 80 83 84
function             : 14
if_else              : 13
loop                 : 15
operation            : 16
program              : 0
sep_args             : 38 75 76 81
sep_yr_args          : 40 42 44
statement            : 2 3
statements           : 1 2 16 21 21 22 23 23 26 42 43
type                 : 29 33 34 35 83 84
value                : 62
variable             : 16 16 16 27 28 29 30 30 31 32 32 33 34 34 35 35 59 63

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . HAI FLOAT NEWLINE statements KTHXBYE
    (87) program -> . error

    HAI             shift and go to state 2
    error           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> HAI . FLOAT NEWLINE statements KTHXBYE

    FLOAT           shift and go to state 4


state 3

    (87) program -> error .

    $end            reduce using rule 87 (program -> error .)


state 4

    (1) program -> HAI FLOAT . NEWLINE statements KTHXBYE

    NEWLINE         shift and go to state 5


state 5

    (1) program -> HAI FLOAT NEWLINE . statements KTHXBYE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 7
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 6

    (52) value -> FLOAT .

    NEWLINE         reduce using rule 52 (value -> FLOAT .)
    COMMA           reduce using rule 52 (value -> FLOAT .)
    AN              reduce using rule 52 (value -> FLOAT .)
    MKAY            reduce using rule 52 (value -> FLOAT .)
    I               reduce using rule 52 (value -> FLOAT .)
    SIZE            reduce using rule 52 (value -> FLOAT .)
    ABSLUT          reduce using rule 52 (value -> FLOAT .)
    SUM             reduce using rule 52 (value -> FLOAT .)
    DIFF            reduce using rule 52 (value -> FLOAT .)
    PRODUKT         reduce using rule 52 (value -> FLOAT .)
    QUOSHUNT        reduce using rule 52 (value -> FLOAT .)
    MOD             reduce using rule 52 (value -> FLOAT .)
    BIGGR           reduce using rule 52 (value -> FLOAT .)
    SMALLR          reduce using rule 52 (value -> FLOAT .)
    BOTH            reduce using rule 52 (value -> FLOAT .)
    EITHER          reduce using rule 52 (value -> FLOAT .)
    WON             reduce using rule 52 (value -> FLOAT .)
    NOT             reduce using rule 52 (value -> FLOAT .)
    ALL             reduce using rule 52 (value -> FLOAT .)
    ANY             reduce using rule 52 (value -> FLOAT .)
    DIFFRINT        reduce using rule 52 (value -> FLOAT .)
    SMOOSH          reduce using rule 52 (value -> FLOAT .)
    MAEK            reduce using rule 52 (value -> FLOAT .)
    ID              reduce using rule 52 (value -> FLOAT .)
    IT              reduce using rule 52 (value -> FLOAT .)
    STRING          reduce using rule 52 (value -> FLOAT .)
    FLOAT           reduce using rule 52 (value -> FLOAT .)
    INTEGER         reduce using rule 52 (value -> FLOAT .)
    WIN             reduce using rule 52 (value -> FLOAT .)
    FAIL            reduce using rule 52 (value -> FLOAT .)
    DICT            reduce using rule 52 (value -> FLOAT .)
    A               reduce using rule 52 (value -> FLOAT .)
    YARN            reduce using rule 52 (value -> FLOAT .)
    NUMBR           reduce using rule 52 (value -> FLOAT .)
    NUMBAR          reduce using rule 52 (value -> FLOAT .)
    NOOB            reduce using rule 52 (value -> FLOAT .)
    BUKKIT          reduce using rule 52 (value -> FLOAT .)
    EXCLAMATION     reduce using rule 52 (value -> FLOAT .)


state 7

    (1) program -> HAI FLOAT NEWLINE statements . KTHXBYE
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    KTHXBYE         shift and go to state 53
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 8

    (3) statements -> statement .

    KTHXBYE         reduce using rule 3 (statements -> statement .)
    I               reduce using rule 3 (statements -> statement .)
    SIZE            reduce using rule 3 (statements -> statement .)
    ABSLUT          reduce using rule 3 (statements -> statement .)
    SUM             reduce using rule 3 (statements -> statement .)
    DIFF            reduce using rule 3 (statements -> statement .)
    PRODUKT         reduce using rule 3 (statements -> statement .)
    QUOSHUNT        reduce using rule 3 (statements -> statement .)
    MOD             reduce using rule 3 (statements -> statement .)
    BIGGR           reduce using rule 3 (statements -> statement .)
    SMALLR          reduce using rule 3 (statements -> statement .)
    BOTH            reduce using rule 3 (statements -> statement .)
    EITHER          reduce using rule 3 (statements -> statement .)
    WON             reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    ALL             reduce using rule 3 (statements -> statement .)
    ANY             reduce using rule 3 (statements -> statement .)
    DIFFRINT        reduce using rule 3 (statements -> statement .)
    SMOOSH          reduce using rule 3 (statements -> statement .)
    MAEK            reduce using rule 3 (statements -> statement .)
    VISIBLE         reduce using rule 3 (statements -> statement .)
    GIMMEH          reduce using rule 3 (statements -> statement .)
    O               reduce using rule 3 (statements -> statement .)
    HOW             reduce using rule 3 (statements -> statement .)
    IM              reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    IT              reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    INTEGER         reduce using rule 3 (statements -> statement .)
    WIN             reduce using rule 3 (statements -> statement .)
    FAIL            reduce using rule 3 (statements -> statement .)
    DICT            reduce using rule 3 (statements -> statement .)
    NEWLINE         reduce using rule 3 (statements -> statement .)
    COMMA           reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    NO              reduce using rule 3 (statements -> statement .)
    OIC             reduce using rule 3 (statements -> statement .)
    MEBBE           reduce using rule 3 (statements -> statement .)


state 9

    (4) statement -> command . NEWLINE
    (5) statement -> command . COMMA

    NEWLINE         shift and go to state 55
    COMMA           shift and go to state 56


state 10

    (6) command -> empty .

    NEWLINE         reduce using rule 6 (command -> empty .)
    COMMA           reduce using rule 6 (command -> empty .)


state 11

    (7) command -> expr .

    NEWLINE         reduce using rule 7 (command -> expr .)
    COMMA           reduce using rule 7 (command -> expr .)


state 12

    (8) command -> call .

    NEWLINE         reduce using rule 8 (command -> call .)
    COMMA           reduce using rule 8 (command -> call .)


state 13

    (9) command -> cast .

    NEWLINE         reduce using rule 9 (command -> cast .)
    COMMA           reduce using rule 9 (command -> cast .)


state 14

    (10) command -> decl .

    NEWLINE         reduce using rule 10 (command -> decl .)
    COMMA           reduce using rule 10 (command -> decl .)


state 15

    (11) command -> assign_bukkit .

    NEWLINE         reduce using rule 11 (command -> assign_bukkit .)
    COMMA           reduce using rule 11 (command -> assign_bukkit .)


state 16

    (12) command -> assign .

    NEWLINE         reduce using rule 12 (command -> assign .)
    COMMA           reduce using rule 12 (command -> assign .)


state 17

    (13) command -> if_else .

    NEWLINE         reduce using rule 13 (command -> if_else .)
    COMMA           reduce using rule 13 (command -> if_else .)


state 18

    (14) command -> function .

    NEWLINE         reduce using rule 14 (command -> function .)
    COMMA           reduce using rule 14 (command -> function .)


state 19

    (15) command -> loop .

    NEWLINE         reduce using rule 15 (command -> loop .)
    COMMA           reduce using rule 15 (command -> loop .)


state 20

    (32) expr -> variable . APOSTROPHE_Z variable
    (63) expr -> variable .
    (33) cast -> variable . IS NOW A type
    (34) cast -> variable . R MAEK variable A type
    (35) cast -> variable . R MAEK variable type
    (30) assign_bukkit -> variable . HAS A variable ITZ expr
    (31) assign -> variable . R expr

    APOSTROPHE_Z    shift and go to state 57
    NEWLINE         reduce using rule 63 (expr -> variable .)
    COMMA           reduce using rule 63 (expr -> variable .)
    IS              shift and go to state 58
    R               shift and go to state 59
    HAS             shift and go to state 60


state 21

    (44) expr -> I . IZ ID YR sep_yr_args MKAY
    (45) expr -> I . IZ ID
    (27) decl -> I . HAS A variable
    (28) decl -> I . HAS A variable ITZ expr
    (29) decl -> I . HAS A variable ITZ A type

    IZ              shift and go to state 61
    HAS             shift and go to state 62


state 22

    (85) variable -> ID .

    APOSTROPHE_Z    reduce using rule 85 (variable -> ID .)
    IS              reduce using rule 85 (variable -> ID .)
    R               reduce using rule 85 (variable -> ID .)
    HAS             reduce using rule 85 (variable -> ID .)
    NEWLINE         reduce using rule 85 (variable -> ID .)
    COMMA           reduce using rule 85 (variable -> ID .)
    AN              reduce using rule 85 (variable -> ID .)
    MKAY            reduce using rule 85 (variable -> ID .)
    I               reduce using rule 85 (variable -> ID .)
    SIZE            reduce using rule 85 (variable -> ID .)
    ABSLUT          reduce using rule 85 (variable -> ID .)
    SUM             reduce using rule 85 (variable -> ID .)
    DIFF            reduce using rule 85 (variable -> ID .)
    PRODUKT         reduce using rule 85 (variable -> ID .)
    QUOSHUNT        reduce using rule 85 (variable -> ID .)
    MOD             reduce using rule 85 (variable -> ID .)
    BIGGR           reduce using rule 85 (variable -> ID .)
    SMALLR          reduce using rule 85 (variable -> ID .)
    BOTH            reduce using rule 85 (variable -> ID .)
    EITHER          reduce using rule 85 (variable -> ID .)
    WON             reduce using rule 85 (variable -> ID .)
    NOT             reduce using rule 85 (variable -> ID .)
    ALL             reduce using rule 85 (variable -> ID .)
    ANY             reduce using rule 85 (variable -> ID .)
    DIFFRINT        reduce using rule 85 (variable -> ID .)
    SMOOSH          reduce using rule 85 (variable -> ID .)
    MAEK            reduce using rule 85 (variable -> ID .)
    ID              reduce using rule 85 (variable -> ID .)
    IT              reduce using rule 85 (variable -> ID .)
    STRING          reduce using rule 85 (variable -> ID .)
    FLOAT           reduce using rule 85 (variable -> ID .)
    INTEGER         reduce using rule 85 (variable -> ID .)
    WIN             reduce using rule 85 (variable -> ID .)
    FAIL            reduce using rule 85 (variable -> ID .)
    DICT            reduce using rule 85 (variable -> ID .)
    A               reduce using rule 85 (variable -> ID .)
    YARN            reduce using rule 85 (variable -> ID .)
    NUMBR           reduce using rule 85 (variable -> ID .)
    NUMBAR          reduce using rule 85 (variable -> ID .)
    NOOB            reduce using rule 85 (variable -> ID .)
    BUKKIT          reduce using rule 85 (variable -> ID .)
    EXCLAMATION     reduce using rule 85 (variable -> ID .)
    ITZ             reduce using rule 85 (variable -> ID .)
    UPPIN           reduce using rule 85 (variable -> ID .)
    NERFIN          reduce using rule 85 (variable -> ID .)
    TIL             reduce using rule 85 (variable -> ID .)
    WILE            reduce using rule 85 (variable -> ID .)


state 23

    (60) expr -> SIZE . OF expr

    OF              shift and go to state 63


state 24

    (61) expr -> ABSLUT . OF expr

    OF              shift and go to state 64


state 25

    (62) expr -> value .

    NEWLINE         reduce using rule 62 (expr -> value .)
    COMMA           reduce using rule 62 (expr -> value .)
    AN              reduce using rule 62 (expr -> value .)
    MKAY            reduce using rule 62 (expr -> value .)
    I               reduce using rule 62 (expr -> value .)
    SIZE            reduce using rule 62 (expr -> value .)
    ABSLUT          reduce using rule 62 (expr -> value .)
    SUM             reduce using rule 62 (expr -> value .)
    DIFF            reduce using rule 62 (expr -> value .)
    PRODUKT         reduce using rule 62 (expr -> value .)
    QUOSHUNT        reduce using rule 62 (expr -> value .)
    MOD             reduce using rule 62 (expr -> value .)
    BIGGR           reduce using rule 62 (expr -> value .)
    SMALLR          reduce using rule 62 (expr -> value .)
    BOTH            reduce using rule 62 (expr -> value .)
    EITHER          reduce using rule 62 (expr -> value .)
    WON             reduce using rule 62 (expr -> value .)
    NOT             reduce using rule 62 (expr -> value .)
    ALL             reduce using rule 62 (expr -> value .)
    ANY             reduce using rule 62 (expr -> value .)
    DIFFRINT        reduce using rule 62 (expr -> value .)
    SMOOSH          reduce using rule 62 (expr -> value .)
    MAEK            reduce using rule 62 (expr -> value .)
    ID              reduce using rule 62 (expr -> value .)
    IT              reduce using rule 62 (expr -> value .)
    STRING          reduce using rule 62 (expr -> value .)
    FLOAT           reduce using rule 62 (expr -> value .)
    INTEGER         reduce using rule 62 (expr -> value .)
    WIN             reduce using rule 62 (expr -> value .)
    FAIL            reduce using rule 62 (expr -> value .)
    DICT            reduce using rule 62 (expr -> value .)
    A               reduce using rule 62 (expr -> value .)
    YARN            reduce using rule 62 (expr -> value .)
    NUMBR           reduce using rule 62 (expr -> value .)
    NUMBAR          reduce using rule 62 (expr -> value .)
    NOOB            reduce using rule 62 (expr -> value .)
    BUKKIT          reduce using rule 62 (expr -> value .)
    EXCLAMATION     reduce using rule 62 (expr -> value .)


state 26

    (64) expr -> SUM . OF expr AN expr

    OF              shift and go to state 65


state 27

    (65) expr -> DIFF . OF expr AN expr

    OF              shift and go to state 66


state 28

    (66) expr -> PRODUKT . OF expr AN expr

    OF              shift and go to state 67


state 29

    (67) expr -> QUOSHUNT . OF expr AN expr

    OF              shift and go to state 68


state 30

    (68) expr -> MOD . OF expr AN expr

    OF              shift and go to state 69


state 31

    (69) expr -> BIGGR . OF expr AN expr

    OF              shift and go to state 70


state 32

    (70) expr -> SMALLR . OF expr AN expr

    OF              shift and go to state 71


state 33

    (71) expr -> BOTH . OF expr AN expr
    (79) expr -> BOTH . SAEM expr AN expr

    OF              shift and go to state 72
    SAEM            shift and go to state 73


state 34

    (72) expr -> EITHER . OF expr AN expr

    OF              shift and go to state 74


state 35

    (73) expr -> WON . OF expr AN expr

    OF              shift and go to state 75


state 36

    (74) expr -> NOT . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 76
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 37

    (75) expr -> ALL . OF sep_args MKAY
    (77) expr -> ALL . OF args MKAY

    OF              shift and go to state 79


state 38

    (76) expr -> ANY . OF sep_args MKAY
    (78) expr -> ANY . OF args MKAY

    OF              shift and go to state 80


state 39

    (80) expr -> DIFFRINT . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 81
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 40

    (81) expr -> SMOOSH . sep_args MKAY
    (82) expr -> SMOOSH . args MKAY
    (38) sep_args -> . sep_args AN expr
    (39) sep_args -> . expr
    (36) args -> . args expr
    (37) args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    sep_args                       shift and go to state 82
    args                           shift and go to state 83
    expr                           shift and go to state 84
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 41

    (83) expr -> MAEK . expr A type
    (84) expr -> MAEK . expr type
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 85
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 42

    (57) call -> VISIBLE . args
    (58) call -> VISIBLE . args EXCLAMATION
    (36) args -> . args expr
    (37) args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    args                           shift and go to state 86
    expr                           shift and go to state 87
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 43

    (59) call -> GIMMEH . variable
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 88

state 44

    (21) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> O . RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 89


state 45

    (42) function -> HOW . IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> HOW . IZ I ID NEWLINE statements IF U SAY SO

    IZ              shift and go to state 90


state 46

    (16) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    IN              shift and go to state 91


state 47

    (86) variable -> IT .

    APOSTROPHE_Z    reduce using rule 86 (variable -> IT .)
    IS              reduce using rule 86 (variable -> IT .)
    R               reduce using rule 86 (variable -> IT .)
    HAS             reduce using rule 86 (variable -> IT .)
    NEWLINE         reduce using rule 86 (variable -> IT .)
    COMMA           reduce using rule 86 (variable -> IT .)
    AN              reduce using rule 86 (variable -> IT .)
    MKAY            reduce using rule 86 (variable -> IT .)
    I               reduce using rule 86 (variable -> IT .)
    SIZE            reduce using rule 86 (variable -> IT .)
    ABSLUT          reduce using rule 86 (variable -> IT .)
    SUM             reduce using rule 86 (variable -> IT .)
    DIFF            reduce using rule 86 (variable -> IT .)
    PRODUKT         reduce using rule 86 (variable -> IT .)
    QUOSHUNT        reduce using rule 86 (variable -> IT .)
    MOD             reduce using rule 86 (variable -> IT .)
    BIGGR           reduce using rule 86 (variable -> IT .)
    SMALLR          reduce using rule 86 (variable -> IT .)
    BOTH            reduce using rule 86 (variable -> IT .)
    EITHER          reduce using rule 86 (variable -> IT .)
    WON             reduce using rule 86 (variable -> IT .)
    NOT             reduce using rule 86 (variable -> IT .)
    ALL             reduce using rule 86 (variable -> IT .)
    ANY             reduce using rule 86 (variable -> IT .)
    DIFFRINT        reduce using rule 86 (variable -> IT .)
    SMOOSH          reduce using rule 86 (variable -> IT .)
    MAEK            reduce using rule 86 (variable -> IT .)
    ID              reduce using rule 86 (variable -> IT .)
    IT              reduce using rule 86 (variable -> IT .)
    STRING          reduce using rule 86 (variable -> IT .)
    FLOAT           reduce using rule 86 (variable -> IT .)
    INTEGER         reduce using rule 86 (variable -> IT .)
    WIN             reduce using rule 86 (variable -> IT .)
    FAIL            reduce using rule 86 (variable -> IT .)
    DICT            reduce using rule 86 (variable -> IT .)
    A               reduce using rule 86 (variable -> IT .)
    YARN            reduce using rule 86 (variable -> IT .)
    NUMBR           reduce using rule 86 (variable -> IT .)
    NUMBAR          reduce using rule 86 (variable -> IT .)
    NOOB            reduce using rule 86 (variable -> IT .)
    BUKKIT          reduce using rule 86 (variable -> IT .)
    EXCLAMATION     reduce using rule 86 (variable -> IT .)
    ITZ             reduce using rule 86 (variable -> IT .)
    UPPIN           reduce using rule 86 (variable -> IT .)
    NERFIN          reduce using rule 86 (variable -> IT .)
    TIL             reduce using rule 86 (variable -> IT .)
    WILE            reduce using rule 86 (variable -> IT .)


state 48

    (51) value -> STRING .

    NEWLINE         reduce using rule 51 (value -> STRING .)
    COMMA           reduce using rule 51 (value -> STRING .)
    AN              reduce using rule 51 (value -> STRING .)
    MKAY            reduce using rule 51 (value -> STRING .)
    I               reduce using rule 51 (value -> STRING .)
    SIZE            reduce using rule 51 (value -> STRING .)
    ABSLUT          reduce using rule 51 (value -> STRING .)
    SUM             reduce using rule 51 (value -> STRING .)
    DIFF            reduce using rule 51 (value -> STRING .)
    PRODUKT         reduce using rule 51 (value -> STRING .)
    QUOSHUNT        reduce using rule 51 (value -> STRING .)
    MOD             reduce using rule 51 (value -> STRING .)
    BIGGR           reduce using rule 51 (value -> STRING .)
    SMALLR          reduce using rule 51 (value -> STRING .)
    BOTH            reduce using rule 51 (value -> STRING .)
    EITHER          reduce using rule 51 (value -> STRING .)
    WON             reduce using rule 51 (value -> STRING .)
    NOT             reduce using rule 51 (value -> STRING .)
    ALL             reduce using rule 51 (value -> STRING .)
    ANY             reduce using rule 51 (value -> STRING .)
    DIFFRINT        reduce using rule 51 (value -> STRING .)
    SMOOSH          reduce using rule 51 (value -> STRING .)
    MAEK            reduce using rule 51 (value -> STRING .)
    ID              reduce using rule 51 (value -> STRING .)
    IT              reduce using rule 51 (value -> STRING .)
    STRING          reduce using rule 51 (value -> STRING .)
    FLOAT           reduce using rule 51 (value -> STRING .)
    INTEGER         reduce using rule 51 (value -> STRING .)
    WIN             reduce using rule 51 (value -> STRING .)
    FAIL            reduce using rule 51 (value -> STRING .)
    DICT            reduce using rule 51 (value -> STRING .)
    A               reduce using rule 51 (value -> STRING .)
    YARN            reduce using rule 51 (value -> STRING .)
    NUMBR           reduce using rule 51 (value -> STRING .)
    NUMBAR          reduce using rule 51 (value -> STRING .)
    NOOB            reduce using rule 51 (value -> STRING .)
    BUKKIT          reduce using rule 51 (value -> STRING .)
    EXCLAMATION     reduce using rule 51 (value -> STRING .)


state 49

    (53) value -> INTEGER .

    NEWLINE         reduce using rule 53 (value -> INTEGER .)
    COMMA           reduce using rule 53 (value -> INTEGER .)
    AN              reduce using rule 53 (value -> INTEGER .)
    MKAY            reduce using rule 53 (value -> INTEGER .)
    I               reduce using rule 53 (value -> INTEGER .)
    SIZE            reduce using rule 53 (value -> INTEGER .)
    ABSLUT          reduce using rule 53 (value -> INTEGER .)
    SUM             reduce using rule 53 (value -> INTEGER .)
    DIFF            reduce using rule 53 (value -> INTEGER .)
    PRODUKT         reduce using rule 53 (value -> INTEGER .)
    QUOSHUNT        reduce using rule 53 (value -> INTEGER .)
    MOD             reduce using rule 53 (value -> INTEGER .)
    BIGGR           reduce using rule 53 (value -> INTEGER .)
    SMALLR          reduce using rule 53 (value -> INTEGER .)
    BOTH            reduce using rule 53 (value -> INTEGER .)
    EITHER          reduce using rule 53 (value -> INTEGER .)
    WON             reduce using rule 53 (value -> INTEGER .)
    NOT             reduce using rule 53 (value -> INTEGER .)
    ALL             reduce using rule 53 (value -> INTEGER .)
    ANY             reduce using rule 53 (value -> INTEGER .)
    DIFFRINT        reduce using rule 53 (value -> INTEGER .)
    SMOOSH          reduce using rule 53 (value -> INTEGER .)
    MAEK            reduce using rule 53 (value -> INTEGER .)
    ID              reduce using rule 53 (value -> INTEGER .)
    IT              reduce using rule 53 (value -> INTEGER .)
    STRING          reduce using rule 53 (value -> INTEGER .)
    FLOAT           reduce using rule 53 (value -> INTEGER .)
    INTEGER         reduce using rule 53 (value -> INTEGER .)
    WIN             reduce using rule 53 (value -> INTEGER .)
    FAIL            reduce using rule 53 (value -> INTEGER .)
    DICT            reduce using rule 53 (value -> INTEGER .)
    A               reduce using rule 53 (value -> INTEGER .)
    YARN            reduce using rule 53 (value -> INTEGER .)
    NUMBR           reduce using rule 53 (value -> INTEGER .)
    NUMBAR          reduce using rule 53 (value -> INTEGER .)
    NOOB            reduce using rule 53 (value -> INTEGER .)
    BUKKIT          reduce using rule 53 (value -> INTEGER .)
    EXCLAMATION     reduce using rule 53 (value -> INTEGER .)


state 50

    (54) value -> WIN .

    NEWLINE         reduce using rule 54 (value -> WIN .)
    COMMA           reduce using rule 54 (value -> WIN .)
    AN              reduce using rule 54 (value -> WIN .)
    MKAY            reduce using rule 54 (value -> WIN .)
    I               reduce using rule 54 (value -> WIN .)
    SIZE            reduce using rule 54 (value -> WIN .)
    ABSLUT          reduce using rule 54 (value -> WIN .)
    SUM             reduce using rule 54 (value -> WIN .)
    DIFF            reduce using rule 54 (value -> WIN .)
    PRODUKT         reduce using rule 54 (value -> WIN .)
    QUOSHUNT        reduce using rule 54 (value -> WIN .)
    MOD             reduce using rule 54 (value -> WIN .)
    BIGGR           reduce using rule 54 (value -> WIN .)
    SMALLR          reduce using rule 54 (value -> WIN .)
    BOTH            reduce using rule 54 (value -> WIN .)
    EITHER          reduce using rule 54 (value -> WIN .)
    WON             reduce using rule 54 (value -> WIN .)
    NOT             reduce using rule 54 (value -> WIN .)
    ALL             reduce using rule 54 (value -> WIN .)
    ANY             reduce using rule 54 (value -> WIN .)
    DIFFRINT        reduce using rule 54 (value -> WIN .)
    SMOOSH          reduce using rule 54 (value -> WIN .)
    MAEK            reduce using rule 54 (value -> WIN .)
    ID              reduce using rule 54 (value -> WIN .)
    IT              reduce using rule 54 (value -> WIN .)
    STRING          reduce using rule 54 (value -> WIN .)
    FLOAT           reduce using rule 54 (value -> WIN .)
    INTEGER         reduce using rule 54 (value -> WIN .)
    WIN             reduce using rule 54 (value -> WIN .)
    FAIL            reduce using rule 54 (value -> WIN .)
    DICT            reduce using rule 54 (value -> WIN .)
    A               reduce using rule 54 (value -> WIN .)
    YARN            reduce using rule 54 (value -> WIN .)
    NUMBR           reduce using rule 54 (value -> WIN .)
    NUMBAR          reduce using rule 54 (value -> WIN .)
    NOOB            reduce using rule 54 (value -> WIN .)
    BUKKIT          reduce using rule 54 (value -> WIN .)
    EXCLAMATION     reduce using rule 54 (value -> WIN .)


state 51

    (55) value -> FAIL .

    NEWLINE         reduce using rule 55 (value -> FAIL .)
    COMMA           reduce using rule 55 (value -> FAIL .)
    AN              reduce using rule 55 (value -> FAIL .)
    MKAY            reduce using rule 55 (value -> FAIL .)
    I               reduce using rule 55 (value -> FAIL .)
    SIZE            reduce using rule 55 (value -> FAIL .)
    ABSLUT          reduce using rule 55 (value -> FAIL .)
    SUM             reduce using rule 55 (value -> FAIL .)
    DIFF            reduce using rule 55 (value -> FAIL .)
    PRODUKT         reduce using rule 55 (value -> FAIL .)
    QUOSHUNT        reduce using rule 55 (value -> FAIL .)
    MOD             reduce using rule 55 (value -> FAIL .)
    BIGGR           reduce using rule 55 (value -> FAIL .)
    SMALLR          reduce using rule 55 (value -> FAIL .)
    BOTH            reduce using rule 55 (value -> FAIL .)
    EITHER          reduce using rule 55 (value -> FAIL .)
    WON             reduce using rule 55 (value -> FAIL .)
    NOT             reduce using rule 55 (value -> FAIL .)
    ALL             reduce using rule 55 (value -> FAIL .)
    ANY             reduce using rule 55 (value -> FAIL .)
    DIFFRINT        reduce using rule 55 (value -> FAIL .)
    SMOOSH          reduce using rule 55 (value -> FAIL .)
    MAEK            reduce using rule 55 (value -> FAIL .)
    ID              reduce using rule 55 (value -> FAIL .)
    IT              reduce using rule 55 (value -> FAIL .)
    STRING          reduce using rule 55 (value -> FAIL .)
    FLOAT           reduce using rule 55 (value -> FAIL .)
    INTEGER         reduce using rule 55 (value -> FAIL .)
    WIN             reduce using rule 55 (value -> FAIL .)
    FAIL            reduce using rule 55 (value -> FAIL .)
    DICT            reduce using rule 55 (value -> FAIL .)
    A               reduce using rule 55 (value -> FAIL .)
    YARN            reduce using rule 55 (value -> FAIL .)
    NUMBR           reduce using rule 55 (value -> FAIL .)
    NUMBAR          reduce using rule 55 (value -> FAIL .)
    NOOB            reduce using rule 55 (value -> FAIL .)
    BUKKIT          reduce using rule 55 (value -> FAIL .)
    EXCLAMATION     reduce using rule 55 (value -> FAIL .)


state 52

    (56) value -> DICT .

    NEWLINE         reduce using rule 56 (value -> DICT .)
    COMMA           reduce using rule 56 (value -> DICT .)
    AN              reduce using rule 56 (value -> DICT .)
    MKAY            reduce using rule 56 (value -> DICT .)
    I               reduce using rule 56 (value -> DICT .)
    SIZE            reduce using rule 56 (value -> DICT .)
    ABSLUT          reduce using rule 56 (value -> DICT .)
    SUM             reduce using rule 56 (value -> DICT .)
    DIFF            reduce using rule 56 (value -> DICT .)
    PRODUKT         reduce using rule 56 (value -> DICT .)
    QUOSHUNT        reduce using rule 56 (value -> DICT .)
    MOD             reduce using rule 56 (value -> DICT .)
    BIGGR           reduce using rule 56 (value -> DICT .)
    SMALLR          reduce using rule 56 (value -> DICT .)
    BOTH            reduce using rule 56 (value -> DICT .)
    EITHER          reduce using rule 56 (value -> DICT .)
    WON             reduce using rule 56 (value -> DICT .)
    NOT             reduce using rule 56 (value -> DICT .)
    ALL             reduce using rule 56 (value -> DICT .)
    ANY             reduce using rule 56 (value -> DICT .)
    DIFFRINT        reduce using rule 56 (value -> DICT .)
    SMOOSH          reduce using rule 56 (value -> DICT .)
    MAEK            reduce using rule 56 (value -> DICT .)
    ID              reduce using rule 56 (value -> DICT .)
    IT              reduce using rule 56 (value -> DICT .)
    STRING          reduce using rule 56 (value -> DICT .)
    FLOAT           reduce using rule 56 (value -> DICT .)
    INTEGER         reduce using rule 56 (value -> DICT .)
    WIN             reduce using rule 56 (value -> DICT .)
    FAIL            reduce using rule 56 (value -> DICT .)
    DICT            reduce using rule 56 (value -> DICT .)
    A               reduce using rule 56 (value -> DICT .)
    YARN            reduce using rule 56 (value -> DICT .)
    NUMBR           reduce using rule 56 (value -> DICT .)
    NUMBAR          reduce using rule 56 (value -> DICT .)
    NOOB            reduce using rule 56 (value -> DICT .)
    BUKKIT          reduce using rule 56 (value -> DICT .)
    EXCLAMATION     reduce using rule 56 (value -> DICT .)


state 53

    (1) program -> HAI FLOAT NEWLINE statements KTHXBYE .

    $end            reduce using rule 1 (program -> HAI FLOAT NEWLINE statements KTHXBYE .)


state 54

    (2) statements -> statements statement .

    KTHXBYE         reduce using rule 2 (statements -> statements statement .)
    I               reduce using rule 2 (statements -> statements statement .)
    SIZE            reduce using rule 2 (statements -> statements statement .)
    ABSLUT          reduce using rule 2 (statements -> statements statement .)
    SUM             reduce using rule 2 (statements -> statements statement .)
    DIFF            reduce using rule 2 (statements -> statements statement .)
    PRODUKT         reduce using rule 2 (statements -> statements statement .)
    QUOSHUNT        reduce using rule 2 (statements -> statements statement .)
    MOD             reduce using rule 2 (statements -> statements statement .)
    BIGGR           reduce using rule 2 (statements -> statements statement .)
    SMALLR          reduce using rule 2 (statements -> statements statement .)
    BOTH            reduce using rule 2 (statements -> statements statement .)
    EITHER          reduce using rule 2 (statements -> statements statement .)
    WON             reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    ALL             reduce using rule 2 (statements -> statements statement .)
    ANY             reduce using rule 2 (statements -> statements statement .)
    DIFFRINT        reduce using rule 2 (statements -> statements statement .)
    SMOOSH          reduce using rule 2 (statements -> statements statement .)
    MAEK            reduce using rule 2 (statements -> statements statement .)
    VISIBLE         reduce using rule 2 (statements -> statements statement .)
    GIMMEH          reduce using rule 2 (statements -> statements statement .)
    O               reduce using rule 2 (statements -> statements statement .)
    HOW             reduce using rule 2 (statements -> statements statement .)
    IM              reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    IT              reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    INTEGER         reduce using rule 2 (statements -> statements statement .)
    WIN             reduce using rule 2 (statements -> statements statement .)
    FAIL            reduce using rule 2 (statements -> statements statement .)
    DICT            reduce using rule 2 (statements -> statements statement .)
    NEWLINE         reduce using rule 2 (statements -> statements statement .)
    COMMA           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    NO              reduce using rule 2 (statements -> statements statement .)
    OIC             reduce using rule 2 (statements -> statements statement .)
    MEBBE           reduce using rule 2 (statements -> statements statement .)


state 55

    (4) statement -> command NEWLINE .

    KTHXBYE         reduce using rule 4 (statement -> command NEWLINE .)
    I               reduce using rule 4 (statement -> command NEWLINE .)
    SIZE            reduce using rule 4 (statement -> command NEWLINE .)
    ABSLUT          reduce using rule 4 (statement -> command NEWLINE .)
    SUM             reduce using rule 4 (statement -> command NEWLINE .)
    DIFF            reduce using rule 4 (statement -> command NEWLINE .)
    PRODUKT         reduce using rule 4 (statement -> command NEWLINE .)
    QUOSHUNT        reduce using rule 4 (statement -> command NEWLINE .)
    MOD             reduce using rule 4 (statement -> command NEWLINE .)
    BIGGR           reduce using rule 4 (statement -> command NEWLINE .)
    SMALLR          reduce using rule 4 (statement -> command NEWLINE .)
    BOTH            reduce using rule 4 (statement -> command NEWLINE .)
    EITHER          reduce using rule 4 (statement -> command NEWLINE .)
    WON             reduce using rule 4 (statement -> command NEWLINE .)
    NOT             reduce using rule 4 (statement -> command NEWLINE .)
    ALL             reduce using rule 4 (statement -> command NEWLINE .)
    ANY             reduce using rule 4 (statement -> command NEWLINE .)
    DIFFRINT        reduce using rule 4 (statement -> command NEWLINE .)
    SMOOSH          reduce using rule 4 (statement -> command NEWLINE .)
    MAEK            reduce using rule 4 (statement -> command NEWLINE .)
    VISIBLE         reduce using rule 4 (statement -> command NEWLINE .)
    GIMMEH          reduce using rule 4 (statement -> command NEWLINE .)
    O               reduce using rule 4 (statement -> command NEWLINE .)
    HOW             reduce using rule 4 (statement -> command NEWLINE .)
    IM              reduce using rule 4 (statement -> command NEWLINE .)
    ID              reduce using rule 4 (statement -> command NEWLINE .)
    IT              reduce using rule 4 (statement -> command NEWLINE .)
    STRING          reduce using rule 4 (statement -> command NEWLINE .)
    FLOAT           reduce using rule 4 (statement -> command NEWLINE .)
    INTEGER         reduce using rule 4 (statement -> command NEWLINE .)
    WIN             reduce using rule 4 (statement -> command NEWLINE .)
    FAIL            reduce using rule 4 (statement -> command NEWLINE .)
    DICT            reduce using rule 4 (statement -> command NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> command NEWLINE .)
    COMMA           reduce using rule 4 (statement -> command NEWLINE .)
    IF              reduce using rule 4 (statement -> command NEWLINE .)
    NO              reduce using rule 4 (statement -> command NEWLINE .)
    OIC             reduce using rule 4 (statement -> command NEWLINE .)
    MEBBE           reduce using rule 4 (statement -> command NEWLINE .)


state 56

    (5) statement -> command COMMA .

    KTHXBYE         reduce using rule 5 (statement -> command COMMA .)
    I               reduce using rule 5 (statement -> command COMMA .)
    SIZE            reduce using rule 5 (statement -> command COMMA .)
    ABSLUT          reduce using rule 5 (statement -> command COMMA .)
    SUM             reduce using rule 5 (statement -> command COMMA .)
    DIFF            reduce using rule 5 (statement -> command COMMA .)
    PRODUKT         reduce using rule 5 (statement -> command COMMA .)
    QUOSHUNT        reduce using rule 5 (statement -> command COMMA .)
    MOD             reduce using rule 5 (statement -> command COMMA .)
    BIGGR           reduce using rule 5 (statement -> command COMMA .)
    SMALLR          reduce using rule 5 (statement -> command COMMA .)
    BOTH            reduce using rule 5 (statement -> command COMMA .)
    EITHER          reduce using rule 5 (statement -> command COMMA .)
    WON             reduce using rule 5 (statement -> command COMMA .)
    NOT             reduce using rule 5 (statement -> command COMMA .)
    ALL             reduce using rule 5 (statement -> command COMMA .)
    ANY             reduce using rule 5 (statement -> command COMMA .)
    DIFFRINT        reduce using rule 5 (statement -> command COMMA .)
    SMOOSH          reduce using rule 5 (statement -> command COMMA .)
    MAEK            reduce using rule 5 (statement -> command COMMA .)
    VISIBLE         reduce using rule 5 (statement -> command COMMA .)
    GIMMEH          reduce using rule 5 (statement -> command COMMA .)
    O               reduce using rule 5 (statement -> command COMMA .)
    HOW             reduce using rule 5 (statement -> command COMMA .)
    IM              reduce using rule 5 (statement -> command COMMA .)
    ID              reduce using rule 5 (statement -> command COMMA .)
    IT              reduce using rule 5 (statement -> command COMMA .)
    STRING          reduce using rule 5 (statement -> command COMMA .)
    FLOAT           reduce using rule 5 (statement -> command COMMA .)
    INTEGER         reduce using rule 5 (statement -> command COMMA .)
    WIN             reduce using rule 5 (statement -> command COMMA .)
    FAIL            reduce using rule 5 (statement -> command COMMA .)
    DICT            reduce using rule 5 (statement -> command COMMA .)
    NEWLINE         reduce using rule 5 (statement -> command COMMA .)
    COMMA           reduce using rule 5 (statement -> command COMMA .)
    IF              reduce using rule 5 (statement -> command COMMA .)
    NO              reduce using rule 5 (statement -> command COMMA .)
    OIC             reduce using rule 5 (statement -> command COMMA .)
    MEBBE           reduce using rule 5 (statement -> command COMMA .)


state 57

    (32) expr -> variable APOSTROPHE_Z . variable
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 92

state 58

    (33) cast -> variable IS . NOW A type

    NOW             shift and go to state 93


state 59

    (34) cast -> variable R . MAEK variable A type
    (35) cast -> variable R . MAEK variable type
    (31) assign -> variable R . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    MAEK            shift and go to state 94
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 77
    expr                           shift and go to state 95
    value                          shift and go to state 25

state 60

    (30) assign_bukkit -> variable HAS . A variable ITZ expr

    A               shift and go to state 96


state 61

    (44) expr -> I IZ . ID YR sep_yr_args MKAY
    (45) expr -> I IZ . ID

    ID              shift and go to state 97


state 62

    (27) decl -> I HAS . A variable
    (28) decl -> I HAS . A variable ITZ expr
    (29) decl -> I HAS . A variable ITZ A type

    A               shift and go to state 98


state 63

    (60) expr -> SIZE OF . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 99
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 64

    (61) expr -> ABSLUT OF . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 100
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 65

    (64) expr -> SUM OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 101
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 66

    (65) expr -> DIFF OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 102
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 67

    (66) expr -> PRODUKT OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 103
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 68

    (67) expr -> QUOSHUNT OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 104
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 69

    (68) expr -> MOD OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 105
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 70

    (69) expr -> BIGGR OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 106
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 71

    (70) expr -> SMALLR OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 107
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 72

    (71) expr -> BOTH OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 108
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 73

    (79) expr -> BOTH SAEM . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 109
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 74

    (72) expr -> EITHER OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 110
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 75

    (73) expr -> WON OF . expr AN expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 111
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 76

    (74) expr -> NOT expr .

    NEWLINE         reduce using rule 74 (expr -> NOT expr .)
    COMMA           reduce using rule 74 (expr -> NOT expr .)
    AN              reduce using rule 74 (expr -> NOT expr .)
    MKAY            reduce using rule 74 (expr -> NOT expr .)
    I               reduce using rule 74 (expr -> NOT expr .)
    SIZE            reduce using rule 74 (expr -> NOT expr .)
    ABSLUT          reduce using rule 74 (expr -> NOT expr .)
    SUM             reduce using rule 74 (expr -> NOT expr .)
    DIFF            reduce using rule 74 (expr -> NOT expr .)
    PRODUKT         reduce using rule 74 (expr -> NOT expr .)
    QUOSHUNT        reduce using rule 74 (expr -> NOT expr .)
    MOD             reduce using rule 74 (expr -> NOT expr .)
    BIGGR           reduce using rule 74 (expr -> NOT expr .)
    SMALLR          reduce using rule 74 (expr -> NOT expr .)
    BOTH            reduce using rule 74 (expr -> NOT expr .)
    EITHER          reduce using rule 74 (expr -> NOT expr .)
    WON             reduce using rule 74 (expr -> NOT expr .)
    NOT             reduce using rule 74 (expr -> NOT expr .)
    ALL             reduce using rule 74 (expr -> NOT expr .)
    ANY             reduce using rule 74 (expr -> NOT expr .)
    DIFFRINT        reduce using rule 74 (expr -> NOT expr .)
    SMOOSH          reduce using rule 74 (expr -> NOT expr .)
    MAEK            reduce using rule 74 (expr -> NOT expr .)
    ID              reduce using rule 74 (expr -> NOT expr .)
    IT              reduce using rule 74 (expr -> NOT expr .)
    STRING          reduce using rule 74 (expr -> NOT expr .)
    FLOAT           reduce using rule 74 (expr -> NOT expr .)
    INTEGER         reduce using rule 74 (expr -> NOT expr .)
    WIN             reduce using rule 74 (expr -> NOT expr .)
    FAIL            reduce using rule 74 (expr -> NOT expr .)
    DICT            reduce using rule 74 (expr -> NOT expr .)
    A               reduce using rule 74 (expr -> NOT expr .)
    YARN            reduce using rule 74 (expr -> NOT expr .)
    NUMBR           reduce using rule 74 (expr -> NOT expr .)
    NUMBAR          reduce using rule 74 (expr -> NOT expr .)
    NOOB            reduce using rule 74 (expr -> NOT expr .)
    BUKKIT          reduce using rule 74 (expr -> NOT expr .)
    EXCLAMATION     reduce using rule 74 (expr -> NOT expr .)


state 77

    (32) expr -> variable . APOSTROPHE_Z variable
    (63) expr -> variable .

    APOSTROPHE_Z    shift and go to state 57
    NEWLINE         reduce using rule 63 (expr -> variable .)
    COMMA           reduce using rule 63 (expr -> variable .)
    AN              reduce using rule 63 (expr -> variable .)
    MKAY            reduce using rule 63 (expr -> variable .)
    I               reduce using rule 63 (expr -> variable .)
    SIZE            reduce using rule 63 (expr -> variable .)
    ABSLUT          reduce using rule 63 (expr -> variable .)
    SUM             reduce using rule 63 (expr -> variable .)
    DIFF            reduce using rule 63 (expr -> variable .)
    PRODUKT         reduce using rule 63 (expr -> variable .)
    QUOSHUNT        reduce using rule 63 (expr -> variable .)
    MOD             reduce using rule 63 (expr -> variable .)
    BIGGR           reduce using rule 63 (expr -> variable .)
    SMALLR          reduce using rule 63 (expr -> variable .)
    BOTH            reduce using rule 63 (expr -> variable .)
    EITHER          reduce using rule 63 (expr -> variable .)
    WON             reduce using rule 63 (expr -> variable .)
    NOT             reduce using rule 63 (expr -> variable .)
    ALL             reduce using rule 63 (expr -> variable .)
    ANY             reduce using rule 63 (expr -> variable .)
    DIFFRINT        reduce using rule 63 (expr -> variable .)
    SMOOSH          reduce using rule 63 (expr -> variable .)
    MAEK            reduce using rule 63 (expr -> variable .)
    ID              reduce using rule 63 (expr -> variable .)
    IT              reduce using rule 63 (expr -> variable .)
    STRING          reduce using rule 63 (expr -> variable .)
    FLOAT           reduce using rule 63 (expr -> variable .)
    INTEGER         reduce using rule 63 (expr -> variable .)
    WIN             reduce using rule 63 (expr -> variable .)
    FAIL            reduce using rule 63 (expr -> variable .)
    DICT            reduce using rule 63 (expr -> variable .)
    A               reduce using rule 63 (expr -> variable .)
    YARN            reduce using rule 63 (expr -> variable .)
    NUMBR           reduce using rule 63 (expr -> variable .)
    NUMBAR          reduce using rule 63 (expr -> variable .)
    NOOB            reduce using rule 63 (expr -> variable .)
    BUKKIT          reduce using rule 63 (expr -> variable .)
    EXCLAMATION     reduce using rule 63 (expr -> variable .)


state 78

    (44) expr -> I . IZ ID YR sep_yr_args MKAY
    (45) expr -> I . IZ ID

    IZ              shift and go to state 61


state 79

    (75) expr -> ALL OF . sep_args MKAY
    (77) expr -> ALL OF . args MKAY
    (38) sep_args -> . sep_args AN expr
    (39) sep_args -> . expr
    (36) args -> . args expr
    (37) args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    sep_args                       shift and go to state 112
    args                           shift and go to state 113
    expr                           shift and go to state 84
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 80

    (76) expr -> ANY OF . sep_args MKAY
    (78) expr -> ANY OF . args MKAY
    (38) sep_args -> . sep_args AN expr
    (39) sep_args -> . expr
    (36) args -> . args expr
    (37) args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    sep_args                       shift and go to state 114
    args                           shift and go to state 115
    expr                           shift and go to state 84
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 81

    (80) expr -> DIFFRINT expr . AN expr

    AN              shift and go to state 116


state 82

    (81) expr -> SMOOSH sep_args . MKAY
    (38) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 117
    AN              shift and go to state 118


state 83

    (82) expr -> SMOOSH args . MKAY
    (36) args -> args . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    MKAY            shift and go to state 119
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 120
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 84

    (39) sep_args -> expr .
    (37) args -> expr .

  ! reduce/reduce conflict for MKAY resolved using rule 37 (args -> expr .)
    AN              reduce using rule 39 (sep_args -> expr .)
    MKAY            reduce using rule 37 (args -> expr .)
    I               reduce using rule 37 (args -> expr .)
    SIZE            reduce using rule 37 (args -> expr .)
    ABSLUT          reduce using rule 37 (args -> expr .)
    SUM             reduce using rule 37 (args -> expr .)
    DIFF            reduce using rule 37 (args -> expr .)
    PRODUKT         reduce using rule 37 (args -> expr .)
    QUOSHUNT        reduce using rule 37 (args -> expr .)
    MOD             reduce using rule 37 (args -> expr .)
    BIGGR           reduce using rule 37 (args -> expr .)
    SMALLR          reduce using rule 37 (args -> expr .)
    BOTH            reduce using rule 37 (args -> expr .)
    EITHER          reduce using rule 37 (args -> expr .)
    WON             reduce using rule 37 (args -> expr .)
    NOT             reduce using rule 37 (args -> expr .)
    ALL             reduce using rule 37 (args -> expr .)
    ANY             reduce using rule 37 (args -> expr .)
    DIFFRINT        reduce using rule 37 (args -> expr .)
    SMOOSH          reduce using rule 37 (args -> expr .)
    MAEK            reduce using rule 37 (args -> expr .)
    ID              reduce using rule 37 (args -> expr .)
    IT              reduce using rule 37 (args -> expr .)
    STRING          reduce using rule 37 (args -> expr .)
    FLOAT           reduce using rule 37 (args -> expr .)
    INTEGER         reduce using rule 37 (args -> expr .)
    WIN             reduce using rule 37 (args -> expr .)
    FAIL            reduce using rule 37 (args -> expr .)
    DICT            reduce using rule 37 (args -> expr .)

  ! MKAY            [ reduce using rule 39 (sep_args -> expr .) ]


state 85

    (83) expr -> MAEK expr . A type
    (84) expr -> MAEK expr . type
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

    A               shift and go to state 121
    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

    type                           shift and go to state 122

state 86

    (57) call -> VISIBLE args .
    (58) call -> VISIBLE args . EXCLAMATION
    (36) args -> args . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 57 (call -> VISIBLE args .)
    COMMA           reduce using rule 57 (call -> VISIBLE args .)
    EXCLAMATION     shift and go to state 128
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 120
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 87

    (37) args -> expr .

    EXCLAMATION     reduce using rule 37 (args -> expr .)
    I               reduce using rule 37 (args -> expr .)
    SIZE            reduce using rule 37 (args -> expr .)
    ABSLUT          reduce using rule 37 (args -> expr .)
    SUM             reduce using rule 37 (args -> expr .)
    DIFF            reduce using rule 37 (args -> expr .)
    PRODUKT         reduce using rule 37 (args -> expr .)
    QUOSHUNT        reduce using rule 37 (args -> expr .)
    MOD             reduce using rule 37 (args -> expr .)
    BIGGR           reduce using rule 37 (args -> expr .)
    SMALLR          reduce using rule 37 (args -> expr .)
    BOTH            reduce using rule 37 (args -> expr .)
    EITHER          reduce using rule 37 (args -> expr .)
    WON             reduce using rule 37 (args -> expr .)
    NOT             reduce using rule 37 (args -> expr .)
    ALL             reduce using rule 37 (args -> expr .)
    ANY             reduce using rule 37 (args -> expr .)
    DIFFRINT        reduce using rule 37 (args -> expr .)
    SMOOSH          reduce using rule 37 (args -> expr .)
    MAEK            reduce using rule 37 (args -> expr .)
    ID              reduce using rule 37 (args -> expr .)
    IT              reduce using rule 37 (args -> expr .)
    STRING          reduce using rule 37 (args -> expr .)
    FLOAT           reduce using rule 37 (args -> expr .)
    INTEGER         reduce using rule 37 (args -> expr .)
    WIN             reduce using rule 37 (args -> expr .)
    FAIL            reduce using rule 37 (args -> expr .)
    DICT            reduce using rule 37 (args -> expr .)
    NEWLINE         reduce using rule 37 (args -> expr .)
    COMMA           reduce using rule 37 (args -> expr .)


state 88

    (59) call -> GIMMEH variable .

    NEWLINE         reduce using rule 59 (call -> GIMMEH variable .)
    COMMA           reduce using rule 59 (call -> GIMMEH variable .)


state 89

    (21) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> O RLY . QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    QUESTION        shift and go to state 129


state 90

    (42) function -> HOW IZ . I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> HOW IZ . I ID NEWLINE statements IF U SAY SO

    I               shift and go to state 130


state 91

    (16) loop -> IM IN . YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 131


state 92

    (32) expr -> variable APOSTROPHE_Z variable .

    NEWLINE         reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    COMMA           reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    AN              reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    MKAY            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    I               reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    SIZE            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    ABSLUT          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    SUM             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    DIFF            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    PRODUKT         reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    QUOSHUNT        reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    MOD             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    BIGGR           reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    SMALLR          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    BOTH            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    EITHER          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    WON             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    NOT             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    ALL             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    ANY             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    DIFFRINT        reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    SMOOSH          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    MAEK            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    ID              reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    IT              reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    STRING          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    FLOAT           reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    INTEGER         reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    WIN             reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    FAIL            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    DICT            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    A               reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    YARN            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    NUMBR           reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    NUMBAR          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    NOOB            reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    BUKKIT          reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)
    EXCLAMATION     reduce using rule 32 (expr -> variable APOSTROPHE_Z variable .)


state 93

    (33) cast -> variable IS NOW . A type

    A               shift and go to state 132


state 94

    (34) cast -> variable R MAEK . variable A type
    (35) cast -> variable R MAEK . variable type
    (83) expr -> MAEK . expr A type
    (84) expr -> MAEK . expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    ID              shift and go to state 22
    IT              shift and go to state 47
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 133
    expr                           shift and go to state 85
    value                          shift and go to state 25

state 95

    (31) assign -> variable R expr .

    NEWLINE         reduce using rule 31 (assign -> variable R expr .)
    COMMA           reduce using rule 31 (assign -> variable R expr .)


state 96

    (30) assign_bukkit -> variable HAS A . variable ITZ expr
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 134

state 97

    (44) expr -> I IZ ID . YR sep_yr_args MKAY
    (45) expr -> I IZ ID .

    YR              shift and go to state 135
    NEWLINE         reduce using rule 45 (expr -> I IZ ID .)
    COMMA           reduce using rule 45 (expr -> I IZ ID .)
    AN              reduce using rule 45 (expr -> I IZ ID .)
    MKAY            reduce using rule 45 (expr -> I IZ ID .)
    I               reduce using rule 45 (expr -> I IZ ID .)
    SIZE            reduce using rule 45 (expr -> I IZ ID .)
    ABSLUT          reduce using rule 45 (expr -> I IZ ID .)
    SUM             reduce using rule 45 (expr -> I IZ ID .)
    DIFF            reduce using rule 45 (expr -> I IZ ID .)
    PRODUKT         reduce using rule 45 (expr -> I IZ ID .)
    QUOSHUNT        reduce using rule 45 (expr -> I IZ ID .)
    MOD             reduce using rule 45 (expr -> I IZ ID .)
    BIGGR           reduce using rule 45 (expr -> I IZ ID .)
    SMALLR          reduce using rule 45 (expr -> I IZ ID .)
    BOTH            reduce using rule 45 (expr -> I IZ ID .)
    EITHER          reduce using rule 45 (expr -> I IZ ID .)
    WON             reduce using rule 45 (expr -> I IZ ID .)
    NOT             reduce using rule 45 (expr -> I IZ ID .)
    ALL             reduce using rule 45 (expr -> I IZ ID .)
    ANY             reduce using rule 45 (expr -> I IZ ID .)
    DIFFRINT        reduce using rule 45 (expr -> I IZ ID .)
    SMOOSH          reduce using rule 45 (expr -> I IZ ID .)
    MAEK            reduce using rule 45 (expr -> I IZ ID .)
    ID              reduce using rule 45 (expr -> I IZ ID .)
    IT              reduce using rule 45 (expr -> I IZ ID .)
    STRING          reduce using rule 45 (expr -> I IZ ID .)
    FLOAT           reduce using rule 45 (expr -> I IZ ID .)
    INTEGER         reduce using rule 45 (expr -> I IZ ID .)
    WIN             reduce using rule 45 (expr -> I IZ ID .)
    FAIL            reduce using rule 45 (expr -> I IZ ID .)
    DICT            reduce using rule 45 (expr -> I IZ ID .)
    A               reduce using rule 45 (expr -> I IZ ID .)
    YARN            reduce using rule 45 (expr -> I IZ ID .)
    NUMBR           reduce using rule 45 (expr -> I IZ ID .)
    NUMBAR          reduce using rule 45 (expr -> I IZ ID .)
    NOOB            reduce using rule 45 (expr -> I IZ ID .)
    BUKKIT          reduce using rule 45 (expr -> I IZ ID .)
    EXCLAMATION     reduce using rule 45 (expr -> I IZ ID .)


state 98

    (27) decl -> I HAS A . variable
    (28) decl -> I HAS A . variable ITZ expr
    (29) decl -> I HAS A . variable ITZ A type
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 136

state 99

    (60) expr -> SIZE OF expr .

    NEWLINE         reduce using rule 60 (expr -> SIZE OF expr .)
    COMMA           reduce using rule 60 (expr -> SIZE OF expr .)
    AN              reduce using rule 60 (expr -> SIZE OF expr .)
    MKAY            reduce using rule 60 (expr -> SIZE OF expr .)
    I               reduce using rule 60 (expr -> SIZE OF expr .)
    SIZE            reduce using rule 60 (expr -> SIZE OF expr .)
    ABSLUT          reduce using rule 60 (expr -> SIZE OF expr .)
    SUM             reduce using rule 60 (expr -> SIZE OF expr .)
    DIFF            reduce using rule 60 (expr -> SIZE OF expr .)
    PRODUKT         reduce using rule 60 (expr -> SIZE OF expr .)
    QUOSHUNT        reduce using rule 60 (expr -> SIZE OF expr .)
    MOD             reduce using rule 60 (expr -> SIZE OF expr .)
    BIGGR           reduce using rule 60 (expr -> SIZE OF expr .)
    SMALLR          reduce using rule 60 (expr -> SIZE OF expr .)
    BOTH            reduce using rule 60 (expr -> SIZE OF expr .)
    EITHER          reduce using rule 60 (expr -> SIZE OF expr .)
    WON             reduce using rule 60 (expr -> SIZE OF expr .)
    NOT             reduce using rule 60 (expr -> SIZE OF expr .)
    ALL             reduce using rule 60 (expr -> SIZE OF expr .)
    ANY             reduce using rule 60 (expr -> SIZE OF expr .)
    DIFFRINT        reduce using rule 60 (expr -> SIZE OF expr .)
    SMOOSH          reduce using rule 60 (expr -> SIZE OF expr .)
    MAEK            reduce using rule 60 (expr -> SIZE OF expr .)
    ID              reduce using rule 60 (expr -> SIZE OF expr .)
    IT              reduce using rule 60 (expr -> SIZE OF expr .)
    STRING          reduce using rule 60 (expr -> SIZE OF expr .)
    FLOAT           reduce using rule 60 (expr -> SIZE OF expr .)
    INTEGER         reduce using rule 60 (expr -> SIZE OF expr .)
    WIN             reduce using rule 60 (expr -> SIZE OF expr .)
    FAIL            reduce using rule 60 (expr -> SIZE OF expr .)
    DICT            reduce using rule 60 (expr -> SIZE OF expr .)
    A               reduce using rule 60 (expr -> SIZE OF expr .)
    YARN            reduce using rule 60 (expr -> SIZE OF expr .)
    NUMBR           reduce using rule 60 (expr -> SIZE OF expr .)
    NUMBAR          reduce using rule 60 (expr -> SIZE OF expr .)
    NOOB            reduce using rule 60 (expr -> SIZE OF expr .)
    BUKKIT          reduce using rule 60 (expr -> SIZE OF expr .)
    EXCLAMATION     reduce using rule 60 (expr -> SIZE OF expr .)


state 100

    (61) expr -> ABSLUT OF expr .

    NEWLINE         reduce using rule 61 (expr -> ABSLUT OF expr .)
    COMMA           reduce using rule 61 (expr -> ABSLUT OF expr .)
    AN              reduce using rule 61 (expr -> ABSLUT OF expr .)
    MKAY            reduce using rule 61 (expr -> ABSLUT OF expr .)
    I               reduce using rule 61 (expr -> ABSLUT OF expr .)
    SIZE            reduce using rule 61 (expr -> ABSLUT OF expr .)
    ABSLUT          reduce using rule 61 (expr -> ABSLUT OF expr .)
    SUM             reduce using rule 61 (expr -> ABSLUT OF expr .)
    DIFF            reduce using rule 61 (expr -> ABSLUT OF expr .)
    PRODUKT         reduce using rule 61 (expr -> ABSLUT OF expr .)
    QUOSHUNT        reduce using rule 61 (expr -> ABSLUT OF expr .)
    MOD             reduce using rule 61 (expr -> ABSLUT OF expr .)
    BIGGR           reduce using rule 61 (expr -> ABSLUT OF expr .)
    SMALLR          reduce using rule 61 (expr -> ABSLUT OF expr .)
    BOTH            reduce using rule 61 (expr -> ABSLUT OF expr .)
    EITHER          reduce using rule 61 (expr -> ABSLUT OF expr .)
    WON             reduce using rule 61 (expr -> ABSLUT OF expr .)
    NOT             reduce using rule 61 (expr -> ABSLUT OF expr .)
    ALL             reduce using rule 61 (expr -> ABSLUT OF expr .)
    ANY             reduce using rule 61 (expr -> ABSLUT OF expr .)
    DIFFRINT        reduce using rule 61 (expr -> ABSLUT OF expr .)
    SMOOSH          reduce using rule 61 (expr -> ABSLUT OF expr .)
    MAEK            reduce using rule 61 (expr -> ABSLUT OF expr .)
    ID              reduce using rule 61 (expr -> ABSLUT OF expr .)
    IT              reduce using rule 61 (expr -> ABSLUT OF expr .)
    STRING          reduce using rule 61 (expr -> ABSLUT OF expr .)
    FLOAT           reduce using rule 61 (expr -> ABSLUT OF expr .)
    INTEGER         reduce using rule 61 (expr -> ABSLUT OF expr .)
    WIN             reduce using rule 61 (expr -> ABSLUT OF expr .)
    FAIL            reduce using rule 61 (expr -> ABSLUT OF expr .)
    DICT            reduce using rule 61 (expr -> ABSLUT OF expr .)
    A               reduce using rule 61 (expr -> ABSLUT OF expr .)
    YARN            reduce using rule 61 (expr -> ABSLUT OF expr .)
    NUMBR           reduce using rule 61 (expr -> ABSLUT OF expr .)
    NUMBAR          reduce using rule 61 (expr -> ABSLUT OF expr .)
    NOOB            reduce using rule 61 (expr -> ABSLUT OF expr .)
    BUKKIT          reduce using rule 61 (expr -> ABSLUT OF expr .)
    EXCLAMATION     reduce using rule 61 (expr -> ABSLUT OF expr .)


state 101

    (64) expr -> SUM OF expr . AN expr

    AN              shift and go to state 137


state 102

    (65) expr -> DIFF OF expr . AN expr

    AN              shift and go to state 138


state 103

    (66) expr -> PRODUKT OF expr . AN expr

    AN              shift and go to state 139


state 104

    (67) expr -> QUOSHUNT OF expr . AN expr

    AN              shift and go to state 140


state 105

    (68) expr -> MOD OF expr . AN expr

    AN              shift and go to state 141


state 106

    (69) expr -> BIGGR OF expr . AN expr

    AN              shift and go to state 142


state 107

    (70) expr -> SMALLR OF expr . AN expr

    AN              shift and go to state 143


state 108

    (71) expr -> BOTH OF expr . AN expr

    AN              shift and go to state 144


state 109

    (79) expr -> BOTH SAEM expr . AN expr

    AN              shift and go to state 145


state 110

    (72) expr -> EITHER OF expr . AN expr

    AN              shift and go to state 146


state 111

    (73) expr -> WON OF expr . AN expr

    AN              shift and go to state 147


state 112

    (75) expr -> ALL OF sep_args . MKAY
    (38) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 148
    AN              shift and go to state 118


state 113

    (77) expr -> ALL OF args . MKAY
    (36) args -> args . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    MKAY            shift and go to state 149
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 120
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 114

    (76) expr -> ANY OF sep_args . MKAY
    (38) sep_args -> sep_args . AN expr

    MKAY            shift and go to state 150
    AN              shift and go to state 118


state 115

    (78) expr -> ANY OF args . MKAY
    (36) args -> args . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    MKAY            shift and go to state 151
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 120
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 116

    (80) expr -> DIFFRINT expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 152
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 117

    (81) expr -> SMOOSH sep_args MKAY .

    NEWLINE         reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    COMMA           reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    AN              reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    MKAY            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    I               reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    SIZE            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    ABSLUT          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    SUM             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    DIFF            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    PRODUKT         reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    QUOSHUNT        reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    MOD             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    BIGGR           reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    SMALLR          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    BOTH            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    EITHER          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    WON             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    NOT             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    ALL             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    ANY             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    DIFFRINT        reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    SMOOSH          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    MAEK            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    ID              reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    IT              reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    STRING          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    FLOAT           reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    INTEGER         reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    WIN             reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    FAIL            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    DICT            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    A               reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    YARN            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    NUMBR           reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    NUMBAR          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    NOOB            reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    BUKKIT          reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)
    EXCLAMATION     reduce using rule 81 (expr -> SMOOSH sep_args MKAY .)


state 118

    (38) sep_args -> sep_args AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 153
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 119

    (82) expr -> SMOOSH args MKAY .

    NEWLINE         reduce using rule 82 (expr -> SMOOSH args MKAY .)
    COMMA           reduce using rule 82 (expr -> SMOOSH args MKAY .)
    AN              reduce using rule 82 (expr -> SMOOSH args MKAY .)
    MKAY            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    I               reduce using rule 82 (expr -> SMOOSH args MKAY .)
    SIZE            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    ABSLUT          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    SUM             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    DIFF            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    PRODUKT         reduce using rule 82 (expr -> SMOOSH args MKAY .)
    QUOSHUNT        reduce using rule 82 (expr -> SMOOSH args MKAY .)
    MOD             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    BIGGR           reduce using rule 82 (expr -> SMOOSH args MKAY .)
    SMALLR          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    BOTH            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    EITHER          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    WON             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    NOT             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    ALL             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    ANY             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    DIFFRINT        reduce using rule 82 (expr -> SMOOSH args MKAY .)
    SMOOSH          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    MAEK            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    ID              reduce using rule 82 (expr -> SMOOSH args MKAY .)
    IT              reduce using rule 82 (expr -> SMOOSH args MKAY .)
    STRING          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    FLOAT           reduce using rule 82 (expr -> SMOOSH args MKAY .)
    INTEGER         reduce using rule 82 (expr -> SMOOSH args MKAY .)
    WIN             reduce using rule 82 (expr -> SMOOSH args MKAY .)
    FAIL            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    DICT            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    A               reduce using rule 82 (expr -> SMOOSH args MKAY .)
    YARN            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    NUMBR           reduce using rule 82 (expr -> SMOOSH args MKAY .)
    NUMBAR          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    NOOB            reduce using rule 82 (expr -> SMOOSH args MKAY .)
    BUKKIT          reduce using rule 82 (expr -> SMOOSH args MKAY .)
    EXCLAMATION     reduce using rule 82 (expr -> SMOOSH args MKAY .)


state 120

    (36) args -> args expr .

    MKAY            reduce using rule 36 (args -> args expr .)
    I               reduce using rule 36 (args -> args expr .)
    SIZE            reduce using rule 36 (args -> args expr .)
    ABSLUT          reduce using rule 36 (args -> args expr .)
    SUM             reduce using rule 36 (args -> args expr .)
    DIFF            reduce using rule 36 (args -> args expr .)
    PRODUKT         reduce using rule 36 (args -> args expr .)
    QUOSHUNT        reduce using rule 36 (args -> args expr .)
    MOD             reduce using rule 36 (args -> args expr .)
    BIGGR           reduce using rule 36 (args -> args expr .)
    SMALLR          reduce using rule 36 (args -> args expr .)
    BOTH            reduce using rule 36 (args -> args expr .)
    EITHER          reduce using rule 36 (args -> args expr .)
    WON             reduce using rule 36 (args -> args expr .)
    NOT             reduce using rule 36 (args -> args expr .)
    ALL             reduce using rule 36 (args -> args expr .)
    ANY             reduce using rule 36 (args -> args expr .)
    DIFFRINT        reduce using rule 36 (args -> args expr .)
    SMOOSH          reduce using rule 36 (args -> args expr .)
    MAEK            reduce using rule 36 (args -> args expr .)
    ID              reduce using rule 36 (args -> args expr .)
    IT              reduce using rule 36 (args -> args expr .)
    STRING          reduce using rule 36 (args -> args expr .)
    FLOAT           reduce using rule 36 (args -> args expr .)
    INTEGER         reduce using rule 36 (args -> args expr .)
    WIN             reduce using rule 36 (args -> args expr .)
    FAIL            reduce using rule 36 (args -> args expr .)
    DICT            reduce using rule 36 (args -> args expr .)
    EXCLAMATION     reduce using rule 36 (args -> args expr .)
    NEWLINE         reduce using rule 36 (args -> args expr .)
    COMMA           reduce using rule 36 (args -> args expr .)


state 121

    (83) expr -> MAEK expr A . type
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

    type                           shift and go to state 154

state 122

    (84) expr -> MAEK expr type .

    NEWLINE         reduce using rule 84 (expr -> MAEK expr type .)
    COMMA           reduce using rule 84 (expr -> MAEK expr type .)
    AN              reduce using rule 84 (expr -> MAEK expr type .)
    MKAY            reduce using rule 84 (expr -> MAEK expr type .)
    I               reduce using rule 84 (expr -> MAEK expr type .)
    SIZE            reduce using rule 84 (expr -> MAEK expr type .)
    ABSLUT          reduce using rule 84 (expr -> MAEK expr type .)
    SUM             reduce using rule 84 (expr -> MAEK expr type .)
    DIFF            reduce using rule 84 (expr -> MAEK expr type .)
    PRODUKT         reduce using rule 84 (expr -> MAEK expr type .)
    QUOSHUNT        reduce using rule 84 (expr -> MAEK expr type .)
    MOD             reduce using rule 84 (expr -> MAEK expr type .)
    BIGGR           reduce using rule 84 (expr -> MAEK expr type .)
    SMALLR          reduce using rule 84 (expr -> MAEK expr type .)
    BOTH            reduce using rule 84 (expr -> MAEK expr type .)
    EITHER          reduce using rule 84 (expr -> MAEK expr type .)
    WON             reduce using rule 84 (expr -> MAEK expr type .)
    NOT             reduce using rule 84 (expr -> MAEK expr type .)
    ALL             reduce using rule 84 (expr -> MAEK expr type .)
    ANY             reduce using rule 84 (expr -> MAEK expr type .)
    DIFFRINT        reduce using rule 84 (expr -> MAEK expr type .)
    SMOOSH          reduce using rule 84 (expr -> MAEK expr type .)
    MAEK            reduce using rule 84 (expr -> MAEK expr type .)
    ID              reduce using rule 84 (expr -> MAEK expr type .)
    IT              reduce using rule 84 (expr -> MAEK expr type .)
    STRING          reduce using rule 84 (expr -> MAEK expr type .)
    FLOAT           reduce using rule 84 (expr -> MAEK expr type .)
    INTEGER         reduce using rule 84 (expr -> MAEK expr type .)
    WIN             reduce using rule 84 (expr -> MAEK expr type .)
    FAIL            reduce using rule 84 (expr -> MAEK expr type .)
    DICT            reduce using rule 84 (expr -> MAEK expr type .)
    A               reduce using rule 84 (expr -> MAEK expr type .)
    YARN            reduce using rule 84 (expr -> MAEK expr type .)
    NUMBR           reduce using rule 84 (expr -> MAEK expr type .)
    NUMBAR          reduce using rule 84 (expr -> MAEK expr type .)
    NOOB            reduce using rule 84 (expr -> MAEK expr type .)
    BUKKIT          reduce using rule 84 (expr -> MAEK expr type .)
    EXCLAMATION     reduce using rule 84 (expr -> MAEK expr type .)


state 123

    (46) type -> YARN .

    NEWLINE         reduce using rule 46 (type -> YARN .)
    COMMA           reduce using rule 46 (type -> YARN .)
    AN              reduce using rule 46 (type -> YARN .)
    MKAY            reduce using rule 46 (type -> YARN .)
    I               reduce using rule 46 (type -> YARN .)
    SIZE            reduce using rule 46 (type -> YARN .)
    ABSLUT          reduce using rule 46 (type -> YARN .)
    SUM             reduce using rule 46 (type -> YARN .)
    DIFF            reduce using rule 46 (type -> YARN .)
    PRODUKT         reduce using rule 46 (type -> YARN .)
    QUOSHUNT        reduce using rule 46 (type -> YARN .)
    MOD             reduce using rule 46 (type -> YARN .)
    BIGGR           reduce using rule 46 (type -> YARN .)
    SMALLR          reduce using rule 46 (type -> YARN .)
    BOTH            reduce using rule 46 (type -> YARN .)
    EITHER          reduce using rule 46 (type -> YARN .)
    WON             reduce using rule 46 (type -> YARN .)
    NOT             reduce using rule 46 (type -> YARN .)
    ALL             reduce using rule 46 (type -> YARN .)
    ANY             reduce using rule 46 (type -> YARN .)
    DIFFRINT        reduce using rule 46 (type -> YARN .)
    SMOOSH          reduce using rule 46 (type -> YARN .)
    MAEK            reduce using rule 46 (type -> YARN .)
    ID              reduce using rule 46 (type -> YARN .)
    IT              reduce using rule 46 (type -> YARN .)
    STRING          reduce using rule 46 (type -> YARN .)
    FLOAT           reduce using rule 46 (type -> YARN .)
    INTEGER         reduce using rule 46 (type -> YARN .)
    WIN             reduce using rule 46 (type -> YARN .)
    FAIL            reduce using rule 46 (type -> YARN .)
    DICT            reduce using rule 46 (type -> YARN .)
    A               reduce using rule 46 (type -> YARN .)
    YARN            reduce using rule 46 (type -> YARN .)
    NUMBR           reduce using rule 46 (type -> YARN .)
    NUMBAR          reduce using rule 46 (type -> YARN .)
    NOOB            reduce using rule 46 (type -> YARN .)
    BUKKIT          reduce using rule 46 (type -> YARN .)
    EXCLAMATION     reduce using rule 46 (type -> YARN .)


state 124

    (47) type -> NUMBR .

    NEWLINE         reduce using rule 47 (type -> NUMBR .)
    COMMA           reduce using rule 47 (type -> NUMBR .)
    AN              reduce using rule 47 (type -> NUMBR .)
    MKAY            reduce using rule 47 (type -> NUMBR .)
    I               reduce using rule 47 (type -> NUMBR .)
    SIZE            reduce using rule 47 (type -> NUMBR .)
    ABSLUT          reduce using rule 47 (type -> NUMBR .)
    SUM             reduce using rule 47 (type -> NUMBR .)
    DIFF            reduce using rule 47 (type -> NUMBR .)
    PRODUKT         reduce using rule 47 (type -> NUMBR .)
    QUOSHUNT        reduce using rule 47 (type -> NUMBR .)
    MOD             reduce using rule 47 (type -> NUMBR .)
    BIGGR           reduce using rule 47 (type -> NUMBR .)
    SMALLR          reduce using rule 47 (type -> NUMBR .)
    BOTH            reduce using rule 47 (type -> NUMBR .)
    EITHER          reduce using rule 47 (type -> NUMBR .)
    WON             reduce using rule 47 (type -> NUMBR .)
    NOT             reduce using rule 47 (type -> NUMBR .)
    ALL             reduce using rule 47 (type -> NUMBR .)
    ANY             reduce using rule 47 (type -> NUMBR .)
    DIFFRINT        reduce using rule 47 (type -> NUMBR .)
    SMOOSH          reduce using rule 47 (type -> NUMBR .)
    MAEK            reduce using rule 47 (type -> NUMBR .)
    ID              reduce using rule 47 (type -> NUMBR .)
    IT              reduce using rule 47 (type -> NUMBR .)
    STRING          reduce using rule 47 (type -> NUMBR .)
    FLOAT           reduce using rule 47 (type -> NUMBR .)
    INTEGER         reduce using rule 47 (type -> NUMBR .)
    WIN             reduce using rule 47 (type -> NUMBR .)
    FAIL            reduce using rule 47 (type -> NUMBR .)
    DICT            reduce using rule 47 (type -> NUMBR .)
    A               reduce using rule 47 (type -> NUMBR .)
    YARN            reduce using rule 47 (type -> NUMBR .)
    NUMBR           reduce using rule 47 (type -> NUMBR .)
    NUMBAR          reduce using rule 47 (type -> NUMBR .)
    NOOB            reduce using rule 47 (type -> NUMBR .)
    BUKKIT          reduce using rule 47 (type -> NUMBR .)
    EXCLAMATION     reduce using rule 47 (type -> NUMBR .)


state 125

    (48) type -> NUMBAR .

    NEWLINE         reduce using rule 48 (type -> NUMBAR .)
    COMMA           reduce using rule 48 (type -> NUMBAR .)
    AN              reduce using rule 48 (type -> NUMBAR .)
    MKAY            reduce using rule 48 (type -> NUMBAR .)
    I               reduce using rule 48 (type -> NUMBAR .)
    SIZE            reduce using rule 48 (type -> NUMBAR .)
    ABSLUT          reduce using rule 48 (type -> NUMBAR .)
    SUM             reduce using rule 48 (type -> NUMBAR .)
    DIFF            reduce using rule 48 (type -> NUMBAR .)
    PRODUKT         reduce using rule 48 (type -> NUMBAR .)
    QUOSHUNT        reduce using rule 48 (type -> NUMBAR .)
    MOD             reduce using rule 48 (type -> NUMBAR .)
    BIGGR           reduce using rule 48 (type -> NUMBAR .)
    SMALLR          reduce using rule 48 (type -> NUMBAR .)
    BOTH            reduce using rule 48 (type -> NUMBAR .)
    EITHER          reduce using rule 48 (type -> NUMBAR .)
    WON             reduce using rule 48 (type -> NUMBAR .)
    NOT             reduce using rule 48 (type -> NUMBAR .)
    ALL             reduce using rule 48 (type -> NUMBAR .)
    ANY             reduce using rule 48 (type -> NUMBAR .)
    DIFFRINT        reduce using rule 48 (type -> NUMBAR .)
    SMOOSH          reduce using rule 48 (type -> NUMBAR .)
    MAEK            reduce using rule 48 (type -> NUMBAR .)
    ID              reduce using rule 48 (type -> NUMBAR .)
    IT              reduce using rule 48 (type -> NUMBAR .)
    STRING          reduce using rule 48 (type -> NUMBAR .)
    FLOAT           reduce using rule 48 (type -> NUMBAR .)
    INTEGER         reduce using rule 48 (type -> NUMBAR .)
    WIN             reduce using rule 48 (type -> NUMBAR .)
    FAIL            reduce using rule 48 (type -> NUMBAR .)
    DICT            reduce using rule 48 (type -> NUMBAR .)
    A               reduce using rule 48 (type -> NUMBAR .)
    YARN            reduce using rule 48 (type -> NUMBAR .)
    NUMBR           reduce using rule 48 (type -> NUMBAR .)
    NUMBAR          reduce using rule 48 (type -> NUMBAR .)
    NOOB            reduce using rule 48 (type -> NUMBAR .)
    BUKKIT          reduce using rule 48 (type -> NUMBAR .)
    EXCLAMATION     reduce using rule 48 (type -> NUMBAR .)


state 126

    (49) type -> NOOB .

    NEWLINE         reduce using rule 49 (type -> NOOB .)
    COMMA           reduce using rule 49 (type -> NOOB .)
    AN              reduce using rule 49 (type -> NOOB .)
    MKAY            reduce using rule 49 (type -> NOOB .)
    I               reduce using rule 49 (type -> NOOB .)
    SIZE            reduce using rule 49 (type -> NOOB .)
    ABSLUT          reduce using rule 49 (type -> NOOB .)
    SUM             reduce using rule 49 (type -> NOOB .)
    DIFF            reduce using rule 49 (type -> NOOB .)
    PRODUKT         reduce using rule 49 (type -> NOOB .)
    QUOSHUNT        reduce using rule 49 (type -> NOOB .)
    MOD             reduce using rule 49 (type -> NOOB .)
    BIGGR           reduce using rule 49 (type -> NOOB .)
    SMALLR          reduce using rule 49 (type -> NOOB .)
    BOTH            reduce using rule 49 (type -> NOOB .)
    EITHER          reduce using rule 49 (type -> NOOB .)
    WON             reduce using rule 49 (type -> NOOB .)
    NOT             reduce using rule 49 (type -> NOOB .)
    ALL             reduce using rule 49 (type -> NOOB .)
    ANY             reduce using rule 49 (type -> NOOB .)
    DIFFRINT        reduce using rule 49 (type -> NOOB .)
    SMOOSH          reduce using rule 49 (type -> NOOB .)
    MAEK            reduce using rule 49 (type -> NOOB .)
    ID              reduce using rule 49 (type -> NOOB .)
    IT              reduce using rule 49 (type -> NOOB .)
    STRING          reduce using rule 49 (type -> NOOB .)
    FLOAT           reduce using rule 49 (type -> NOOB .)
    INTEGER         reduce using rule 49 (type -> NOOB .)
    WIN             reduce using rule 49 (type -> NOOB .)
    FAIL            reduce using rule 49 (type -> NOOB .)
    DICT            reduce using rule 49 (type -> NOOB .)
    A               reduce using rule 49 (type -> NOOB .)
    YARN            reduce using rule 49 (type -> NOOB .)
    NUMBR           reduce using rule 49 (type -> NOOB .)
    NUMBAR          reduce using rule 49 (type -> NOOB .)
    NOOB            reduce using rule 49 (type -> NOOB .)
    BUKKIT          reduce using rule 49 (type -> NOOB .)
    EXCLAMATION     reduce using rule 49 (type -> NOOB .)


state 127

    (50) type -> BUKKIT .

    NEWLINE         reduce using rule 50 (type -> BUKKIT .)
    COMMA           reduce using rule 50 (type -> BUKKIT .)
    AN              reduce using rule 50 (type -> BUKKIT .)
    MKAY            reduce using rule 50 (type -> BUKKIT .)
    I               reduce using rule 50 (type -> BUKKIT .)
    SIZE            reduce using rule 50 (type -> BUKKIT .)
    ABSLUT          reduce using rule 50 (type -> BUKKIT .)
    SUM             reduce using rule 50 (type -> BUKKIT .)
    DIFF            reduce using rule 50 (type -> BUKKIT .)
    PRODUKT         reduce using rule 50 (type -> BUKKIT .)
    QUOSHUNT        reduce using rule 50 (type -> BUKKIT .)
    MOD             reduce using rule 50 (type -> BUKKIT .)
    BIGGR           reduce using rule 50 (type -> BUKKIT .)
    SMALLR          reduce using rule 50 (type -> BUKKIT .)
    BOTH            reduce using rule 50 (type -> BUKKIT .)
    EITHER          reduce using rule 50 (type -> BUKKIT .)
    WON             reduce using rule 50 (type -> BUKKIT .)
    NOT             reduce using rule 50 (type -> BUKKIT .)
    ALL             reduce using rule 50 (type -> BUKKIT .)
    ANY             reduce using rule 50 (type -> BUKKIT .)
    DIFFRINT        reduce using rule 50 (type -> BUKKIT .)
    SMOOSH          reduce using rule 50 (type -> BUKKIT .)
    MAEK            reduce using rule 50 (type -> BUKKIT .)
    ID              reduce using rule 50 (type -> BUKKIT .)
    IT              reduce using rule 50 (type -> BUKKIT .)
    STRING          reduce using rule 50 (type -> BUKKIT .)
    FLOAT           reduce using rule 50 (type -> BUKKIT .)
    INTEGER         reduce using rule 50 (type -> BUKKIT .)
    WIN             reduce using rule 50 (type -> BUKKIT .)
    FAIL            reduce using rule 50 (type -> BUKKIT .)
    DICT            reduce using rule 50 (type -> BUKKIT .)
    A               reduce using rule 50 (type -> BUKKIT .)
    YARN            reduce using rule 50 (type -> BUKKIT .)
    NUMBR           reduce using rule 50 (type -> BUKKIT .)
    NUMBAR          reduce using rule 50 (type -> BUKKIT .)
    NOOB            reduce using rule 50 (type -> BUKKIT .)
    BUKKIT          reduce using rule 50 (type -> BUKKIT .)
    EXCLAMATION     reduce using rule 50 (type -> BUKKIT .)


state 128

    (58) call -> VISIBLE args EXCLAMATION .

    NEWLINE         reduce using rule 58 (call -> VISIBLE args EXCLAMATION .)
    COMMA           reduce using rule 58 (call -> VISIBLE args EXCLAMATION .)


state 129

    (21) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION . NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 155


state 130

    (42) function -> HOW IZ I . ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> HOW IZ I . ID NEWLINE statements IF U SAY SO

    ID              shift and go to state 156


state 131

    (16) loop -> IM IN YR . variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 157

state 132

    (33) cast -> variable IS NOW A . type
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

    type                           shift and go to state 158

state 133

    (34) cast -> variable R MAEK variable . A type
    (35) cast -> variable R MAEK variable . type
    (32) expr -> variable . APOSTROPHE_Z variable
    (63) expr -> variable .
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

  ! shift/reduce conflict for A resolved as shift
  ! shift/reduce conflict for YARN resolved as shift
  ! shift/reduce conflict for NUMBR resolved as shift
  ! shift/reduce conflict for NUMBAR resolved as shift
  ! shift/reduce conflict for NOOB resolved as shift
  ! shift/reduce conflict for BUKKIT resolved as shift
    A               shift and go to state 159
    APOSTROPHE_Z    shift and go to state 57
    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

  ! A               [ reduce using rule 63 (expr -> variable .) ]
  ! YARN            [ reduce using rule 63 (expr -> variable .) ]
  ! NUMBR           [ reduce using rule 63 (expr -> variable .) ]
  ! NUMBAR          [ reduce using rule 63 (expr -> variable .) ]
  ! NOOB            [ reduce using rule 63 (expr -> variable .) ]
  ! BUKKIT          [ reduce using rule 63 (expr -> variable .) ]

    type                           shift and go to state 160

state 134

    (30) assign_bukkit -> variable HAS A variable . ITZ expr

    ITZ             shift and go to state 161


state 135

    (44) expr -> I IZ ID YR . sep_yr_args MKAY
    (40) sep_yr_args -> . sep_yr_args AN YR expr
    (41) sep_yr_args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    sep_yr_args                    shift and go to state 162
    expr                           shift and go to state 163
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 136

    (27) decl -> I HAS A variable .
    (28) decl -> I HAS A variable . ITZ expr
    (29) decl -> I HAS A variable . ITZ A type

    NEWLINE         reduce using rule 27 (decl -> I HAS A variable .)
    COMMA           reduce using rule 27 (decl -> I HAS A variable .)
    ITZ             shift and go to state 164


state 137

    (64) expr -> SUM OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 165
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 138

    (65) expr -> DIFF OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 166
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 139

    (66) expr -> PRODUKT OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 167
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 140

    (67) expr -> QUOSHUNT OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 168
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 141

    (68) expr -> MOD OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 169
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 142

    (69) expr -> BIGGR OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 170
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 143

    (70) expr -> SMALLR OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 171
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 144

    (71) expr -> BOTH OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 172
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 145

    (79) expr -> BOTH SAEM expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 173
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 146

    (72) expr -> EITHER OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 174
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 147

    (73) expr -> WON OF expr AN . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 175
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 148

    (75) expr -> ALL OF sep_args MKAY .

    NEWLINE         reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    COMMA           reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    AN              reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    MKAY            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    I               reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    SIZE            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    ABSLUT          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    SUM             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    DIFF            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    PRODUKT         reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    MOD             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    BIGGR           reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    SMALLR          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    BOTH            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    EITHER          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    WON             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    NOT             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    ALL             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    ANY             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    DIFFRINT        reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    SMOOSH          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    MAEK            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    ID              reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    IT              reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    STRING          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    FLOAT           reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    INTEGER         reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    WIN             reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    FAIL            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    DICT            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    A               reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    YARN            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    NUMBR           reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    NUMBAR          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    NOOB            reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    BUKKIT          reduce using rule 75 (expr -> ALL OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 75 (expr -> ALL OF sep_args MKAY .)


state 149

    (77) expr -> ALL OF args MKAY .

    NEWLINE         reduce using rule 77 (expr -> ALL OF args MKAY .)
    COMMA           reduce using rule 77 (expr -> ALL OF args MKAY .)
    AN              reduce using rule 77 (expr -> ALL OF args MKAY .)
    MKAY            reduce using rule 77 (expr -> ALL OF args MKAY .)
    I               reduce using rule 77 (expr -> ALL OF args MKAY .)
    SIZE            reduce using rule 77 (expr -> ALL OF args MKAY .)
    ABSLUT          reduce using rule 77 (expr -> ALL OF args MKAY .)
    SUM             reduce using rule 77 (expr -> ALL OF args MKAY .)
    DIFF            reduce using rule 77 (expr -> ALL OF args MKAY .)
    PRODUKT         reduce using rule 77 (expr -> ALL OF args MKAY .)
    QUOSHUNT        reduce using rule 77 (expr -> ALL OF args MKAY .)
    MOD             reduce using rule 77 (expr -> ALL OF args MKAY .)
    BIGGR           reduce using rule 77 (expr -> ALL OF args MKAY .)
    SMALLR          reduce using rule 77 (expr -> ALL OF args MKAY .)
    BOTH            reduce using rule 77 (expr -> ALL OF args MKAY .)
    EITHER          reduce using rule 77 (expr -> ALL OF args MKAY .)
    WON             reduce using rule 77 (expr -> ALL OF args MKAY .)
    NOT             reduce using rule 77 (expr -> ALL OF args MKAY .)
    ALL             reduce using rule 77 (expr -> ALL OF args MKAY .)
    ANY             reduce using rule 77 (expr -> ALL OF args MKAY .)
    DIFFRINT        reduce using rule 77 (expr -> ALL OF args MKAY .)
    SMOOSH          reduce using rule 77 (expr -> ALL OF args MKAY .)
    MAEK            reduce using rule 77 (expr -> ALL OF args MKAY .)
    ID              reduce using rule 77 (expr -> ALL OF args MKAY .)
    IT              reduce using rule 77 (expr -> ALL OF args MKAY .)
    STRING          reduce using rule 77 (expr -> ALL OF args MKAY .)
    FLOAT           reduce using rule 77 (expr -> ALL OF args MKAY .)
    INTEGER         reduce using rule 77 (expr -> ALL OF args MKAY .)
    WIN             reduce using rule 77 (expr -> ALL OF args MKAY .)
    FAIL            reduce using rule 77 (expr -> ALL OF args MKAY .)
    DICT            reduce using rule 77 (expr -> ALL OF args MKAY .)
    A               reduce using rule 77 (expr -> ALL OF args MKAY .)
    YARN            reduce using rule 77 (expr -> ALL OF args MKAY .)
    NUMBR           reduce using rule 77 (expr -> ALL OF args MKAY .)
    NUMBAR          reduce using rule 77 (expr -> ALL OF args MKAY .)
    NOOB            reduce using rule 77 (expr -> ALL OF args MKAY .)
    BUKKIT          reduce using rule 77 (expr -> ALL OF args MKAY .)
    EXCLAMATION     reduce using rule 77 (expr -> ALL OF args MKAY .)


state 150

    (76) expr -> ANY OF sep_args MKAY .

    NEWLINE         reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    COMMA           reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    AN              reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    MKAY            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    I               reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    SIZE            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    ABSLUT          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    SUM             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    DIFF            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    PRODUKT         reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    QUOSHUNT        reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    MOD             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    BIGGR           reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    SMALLR          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    BOTH            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    EITHER          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    WON             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    NOT             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    ALL             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    ANY             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    DIFFRINT        reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    SMOOSH          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    MAEK            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    ID              reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    IT              reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    STRING          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    FLOAT           reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    INTEGER         reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    WIN             reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    FAIL            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    DICT            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    A               reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    YARN            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    NUMBR           reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    NUMBAR          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    NOOB            reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    BUKKIT          reduce using rule 76 (expr -> ANY OF sep_args MKAY .)
    EXCLAMATION     reduce using rule 76 (expr -> ANY OF sep_args MKAY .)


state 151

    (78) expr -> ANY OF args MKAY .

    NEWLINE         reduce using rule 78 (expr -> ANY OF args MKAY .)
    COMMA           reduce using rule 78 (expr -> ANY OF args MKAY .)
    AN              reduce using rule 78 (expr -> ANY OF args MKAY .)
    MKAY            reduce using rule 78 (expr -> ANY OF args MKAY .)
    I               reduce using rule 78 (expr -> ANY OF args MKAY .)
    SIZE            reduce using rule 78 (expr -> ANY OF args MKAY .)
    ABSLUT          reduce using rule 78 (expr -> ANY OF args MKAY .)
    SUM             reduce using rule 78 (expr -> ANY OF args MKAY .)
    DIFF            reduce using rule 78 (expr -> ANY OF args MKAY .)
    PRODUKT         reduce using rule 78 (expr -> ANY OF args MKAY .)
    QUOSHUNT        reduce using rule 78 (expr -> ANY OF args MKAY .)
    MOD             reduce using rule 78 (expr -> ANY OF args MKAY .)
    BIGGR           reduce using rule 78 (expr -> ANY OF args MKAY .)
    SMALLR          reduce using rule 78 (expr -> ANY OF args MKAY .)
    BOTH            reduce using rule 78 (expr -> ANY OF args MKAY .)
    EITHER          reduce using rule 78 (expr -> ANY OF args MKAY .)
    WON             reduce using rule 78 (expr -> ANY OF args MKAY .)
    NOT             reduce using rule 78 (expr -> ANY OF args MKAY .)
    ALL             reduce using rule 78 (expr -> ANY OF args MKAY .)
    ANY             reduce using rule 78 (expr -> ANY OF args MKAY .)
    DIFFRINT        reduce using rule 78 (expr -> ANY OF args MKAY .)
    SMOOSH          reduce using rule 78 (expr -> ANY OF args MKAY .)
    MAEK            reduce using rule 78 (expr -> ANY OF args MKAY .)
    ID              reduce using rule 78 (expr -> ANY OF args MKAY .)
    IT              reduce using rule 78 (expr -> ANY OF args MKAY .)
    STRING          reduce using rule 78 (expr -> ANY OF args MKAY .)
    FLOAT           reduce using rule 78 (expr -> ANY OF args MKAY .)
    INTEGER         reduce using rule 78 (expr -> ANY OF args MKAY .)
    WIN             reduce using rule 78 (expr -> ANY OF args MKAY .)
    FAIL            reduce using rule 78 (expr -> ANY OF args MKAY .)
    DICT            reduce using rule 78 (expr -> ANY OF args MKAY .)
    A               reduce using rule 78 (expr -> ANY OF args MKAY .)
    YARN            reduce using rule 78 (expr -> ANY OF args MKAY .)
    NUMBR           reduce using rule 78 (expr -> ANY OF args MKAY .)
    NUMBAR          reduce using rule 78 (expr -> ANY OF args MKAY .)
    NOOB            reduce using rule 78 (expr -> ANY OF args MKAY .)
    BUKKIT          reduce using rule 78 (expr -> ANY OF args MKAY .)
    EXCLAMATION     reduce using rule 78 (expr -> ANY OF args MKAY .)


state 152

    (80) expr -> DIFFRINT expr AN expr .

    NEWLINE         reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    COMMA           reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    AN              reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    MKAY            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    I               reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    SIZE            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    ABSLUT          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    SUM             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    DIFF            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    PRODUKT         reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    QUOSHUNT        reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    MOD             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    BIGGR           reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    SMALLR          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    BOTH            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    EITHER          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    WON             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    NOT             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    ALL             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    ANY             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    DIFFRINT        reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    SMOOSH          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    MAEK            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    ID              reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    IT              reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    STRING          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    FLOAT           reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    INTEGER         reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    WIN             reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    FAIL            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    DICT            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    A               reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    YARN            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    NUMBR           reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    NUMBAR          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    NOOB            reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    BUKKIT          reduce using rule 80 (expr -> DIFFRINT expr AN expr .)
    EXCLAMATION     reduce using rule 80 (expr -> DIFFRINT expr AN expr .)


state 153

    (38) sep_args -> sep_args AN expr .

    MKAY            reduce using rule 38 (sep_args -> sep_args AN expr .)
    AN              reduce using rule 38 (sep_args -> sep_args AN expr .)


state 154

    (83) expr -> MAEK expr A type .

    NEWLINE         reduce using rule 83 (expr -> MAEK expr A type .)
    COMMA           reduce using rule 83 (expr -> MAEK expr A type .)
    AN              reduce using rule 83 (expr -> MAEK expr A type .)
    MKAY            reduce using rule 83 (expr -> MAEK expr A type .)
    I               reduce using rule 83 (expr -> MAEK expr A type .)
    SIZE            reduce using rule 83 (expr -> MAEK expr A type .)
    ABSLUT          reduce using rule 83 (expr -> MAEK expr A type .)
    SUM             reduce using rule 83 (expr -> MAEK expr A type .)
    DIFF            reduce using rule 83 (expr -> MAEK expr A type .)
    PRODUKT         reduce using rule 83 (expr -> MAEK expr A type .)
    QUOSHUNT        reduce using rule 83 (expr -> MAEK expr A type .)
    MOD             reduce using rule 83 (expr -> MAEK expr A type .)
    BIGGR           reduce using rule 83 (expr -> MAEK expr A type .)
    SMALLR          reduce using rule 83 (expr -> MAEK expr A type .)
    BOTH            reduce using rule 83 (expr -> MAEK expr A type .)
    EITHER          reduce using rule 83 (expr -> MAEK expr A type .)
    WON             reduce using rule 83 (expr -> MAEK expr A type .)
    NOT             reduce using rule 83 (expr -> MAEK expr A type .)
    ALL             reduce using rule 83 (expr -> MAEK expr A type .)
    ANY             reduce using rule 83 (expr -> MAEK expr A type .)
    DIFFRINT        reduce using rule 83 (expr -> MAEK expr A type .)
    SMOOSH          reduce using rule 83 (expr -> MAEK expr A type .)
    MAEK            reduce using rule 83 (expr -> MAEK expr A type .)
    ID              reduce using rule 83 (expr -> MAEK expr A type .)
    IT              reduce using rule 83 (expr -> MAEK expr A type .)
    STRING          reduce using rule 83 (expr -> MAEK expr A type .)
    FLOAT           reduce using rule 83 (expr -> MAEK expr A type .)
    INTEGER         reduce using rule 83 (expr -> MAEK expr A type .)
    WIN             reduce using rule 83 (expr -> MAEK expr A type .)
    FAIL            reduce using rule 83 (expr -> MAEK expr A type .)
    DICT            reduce using rule 83 (expr -> MAEK expr A type .)
    A               reduce using rule 83 (expr -> MAEK expr A type .)
    YARN            reduce using rule 83 (expr -> MAEK expr A type .)
    NUMBR           reduce using rule 83 (expr -> MAEK expr A type .)
    NUMBAR          reduce using rule 83 (expr -> MAEK expr A type .)
    NOOB            reduce using rule 83 (expr -> MAEK expr A type .)
    BUKKIT          reduce using rule 83 (expr -> MAEK expr A type .)
    EXCLAMATION     reduce using rule 83 (expr -> MAEK expr A type .)


state 155

    (21) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE . YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    YA              shift and go to state 176


state 156

    (42) function -> HOW IZ I ID . YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> HOW IZ I ID . NEWLINE statements IF U SAY SO

    YR              shift and go to state 177
    NEWLINE         shift and go to state 178


state 157

    (16) loop -> IM IN YR variable . operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (17) operation -> . UPPIN
    (18) operation -> . NERFIN

    UPPIN           shift and go to state 180
    NERFIN          shift and go to state 181

    operation                      shift and go to state 179

state 158

    (33) cast -> variable IS NOW A type .

    NEWLINE         reduce using rule 33 (cast -> variable IS NOW A type .)
    COMMA           reduce using rule 33 (cast -> variable IS NOW A type .)


state 159

    (34) cast -> variable R MAEK variable A . type
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

    type                           shift and go to state 182

state 160

    (35) cast -> variable R MAEK variable type .

    NEWLINE         reduce using rule 35 (cast -> variable R MAEK variable type .)
    COMMA           reduce using rule 35 (cast -> variable R MAEK variable type .)


state 161

    (30) assign_bukkit -> variable HAS A variable ITZ . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 77
    expr                           shift and go to state 183
    value                          shift and go to state 25

state 162

    (44) expr -> I IZ ID YR sep_yr_args . MKAY
    (40) sep_yr_args -> sep_yr_args . AN YR expr

    MKAY            shift and go to state 184
    AN              shift and go to state 185


state 163

    (41) sep_yr_args -> expr .

    MKAY            reduce using rule 41 (sep_yr_args -> expr .)
    AN              reduce using rule 41 (sep_yr_args -> expr .)
    NEWLINE         reduce using rule 41 (sep_yr_args -> expr .)


state 164

    (28) decl -> I HAS A variable ITZ . expr
    (29) decl -> I HAS A variable ITZ . A type
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    A               shift and go to state 186
    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 77
    expr                           shift and go to state 187
    value                          shift and go to state 25

state 165

    (64) expr -> SUM OF expr AN expr .

    NEWLINE         reduce using rule 64 (expr -> SUM OF expr AN expr .)
    COMMA           reduce using rule 64 (expr -> SUM OF expr AN expr .)
    AN              reduce using rule 64 (expr -> SUM OF expr AN expr .)
    MKAY            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    I               reduce using rule 64 (expr -> SUM OF expr AN expr .)
    SIZE            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    ABSLUT          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    SUM             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    DIFF            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    PRODUKT         reduce using rule 64 (expr -> SUM OF expr AN expr .)
    QUOSHUNT        reduce using rule 64 (expr -> SUM OF expr AN expr .)
    MOD             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    BIGGR           reduce using rule 64 (expr -> SUM OF expr AN expr .)
    SMALLR          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    BOTH            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    EITHER          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    WON             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    NOT             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    ALL             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    ANY             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    DIFFRINT        reduce using rule 64 (expr -> SUM OF expr AN expr .)
    SMOOSH          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    MAEK            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    ID              reduce using rule 64 (expr -> SUM OF expr AN expr .)
    IT              reduce using rule 64 (expr -> SUM OF expr AN expr .)
    STRING          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    FLOAT           reduce using rule 64 (expr -> SUM OF expr AN expr .)
    INTEGER         reduce using rule 64 (expr -> SUM OF expr AN expr .)
    WIN             reduce using rule 64 (expr -> SUM OF expr AN expr .)
    FAIL            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    DICT            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    A               reduce using rule 64 (expr -> SUM OF expr AN expr .)
    YARN            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    NUMBR           reduce using rule 64 (expr -> SUM OF expr AN expr .)
    NUMBAR          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    NOOB            reduce using rule 64 (expr -> SUM OF expr AN expr .)
    BUKKIT          reduce using rule 64 (expr -> SUM OF expr AN expr .)
    EXCLAMATION     reduce using rule 64 (expr -> SUM OF expr AN expr .)


state 166

    (65) expr -> DIFF OF expr AN expr .

    NEWLINE         reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    COMMA           reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    AN              reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    MKAY            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    I               reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    SIZE            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    ABSLUT          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    SUM             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    DIFF            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    PRODUKT         reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    QUOSHUNT        reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    MOD             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    BIGGR           reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    SMALLR          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    BOTH            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    EITHER          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    WON             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    NOT             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    ALL             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    ANY             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    DIFFRINT        reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    SMOOSH          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    MAEK            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    ID              reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    IT              reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    STRING          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    FLOAT           reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    INTEGER         reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    WIN             reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    FAIL            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    DICT            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    A               reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    YARN            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    NUMBR           reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    NUMBAR          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    NOOB            reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    BUKKIT          reduce using rule 65 (expr -> DIFF OF expr AN expr .)
    EXCLAMATION     reduce using rule 65 (expr -> DIFF OF expr AN expr .)


state 167

    (66) expr -> PRODUKT OF expr AN expr .

    NEWLINE         reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    COMMA           reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    AN              reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    MKAY            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    I               reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    SIZE            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    ABSLUT          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    SUM             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    DIFF            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    PRODUKT         reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    QUOSHUNT        reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    MOD             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    BIGGR           reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    SMALLR          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    BOTH            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    EITHER          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    WON             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    NOT             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    ALL             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    ANY             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    DIFFRINT        reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    SMOOSH          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    MAEK            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    ID              reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    IT              reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    STRING          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    FLOAT           reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    INTEGER         reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    WIN             reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    FAIL            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    DICT            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    A               reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    YARN            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    NUMBR           reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    NUMBAR          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    NOOB            reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    BUKKIT          reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)
    EXCLAMATION     reduce using rule 66 (expr -> PRODUKT OF expr AN expr .)


state 168

    (67) expr -> QUOSHUNT OF expr AN expr .

    NEWLINE         reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    COMMA           reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    AN              reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    MKAY            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    I               reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    SIZE            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    ABSLUT          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    SUM             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    DIFF            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    PRODUKT         reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    QUOSHUNT        reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    MOD             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    BIGGR           reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    SMALLR          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    BOTH            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    EITHER          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    WON             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    NOT             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    ALL             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    ANY             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    DIFFRINT        reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    SMOOSH          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    MAEK            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    ID              reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    IT              reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    STRING          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    FLOAT           reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    INTEGER         reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    WIN             reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    FAIL            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    DICT            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    A               reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    YARN            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBR           reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    NUMBAR          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    NOOB            reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    BUKKIT          reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)
    EXCLAMATION     reduce using rule 67 (expr -> QUOSHUNT OF expr AN expr .)


state 169

    (68) expr -> MOD OF expr AN expr .

    NEWLINE         reduce using rule 68 (expr -> MOD OF expr AN expr .)
    COMMA           reduce using rule 68 (expr -> MOD OF expr AN expr .)
    AN              reduce using rule 68 (expr -> MOD OF expr AN expr .)
    MKAY            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    I               reduce using rule 68 (expr -> MOD OF expr AN expr .)
    SIZE            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    ABSLUT          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    SUM             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    DIFF            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    PRODUKT         reduce using rule 68 (expr -> MOD OF expr AN expr .)
    QUOSHUNT        reduce using rule 68 (expr -> MOD OF expr AN expr .)
    MOD             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    BIGGR           reduce using rule 68 (expr -> MOD OF expr AN expr .)
    SMALLR          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    BOTH            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    EITHER          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    WON             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    NOT             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    ALL             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    ANY             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    DIFFRINT        reduce using rule 68 (expr -> MOD OF expr AN expr .)
    SMOOSH          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    MAEK            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    ID              reduce using rule 68 (expr -> MOD OF expr AN expr .)
    IT              reduce using rule 68 (expr -> MOD OF expr AN expr .)
    STRING          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    FLOAT           reduce using rule 68 (expr -> MOD OF expr AN expr .)
    INTEGER         reduce using rule 68 (expr -> MOD OF expr AN expr .)
    WIN             reduce using rule 68 (expr -> MOD OF expr AN expr .)
    FAIL            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    DICT            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    A               reduce using rule 68 (expr -> MOD OF expr AN expr .)
    YARN            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    NUMBR           reduce using rule 68 (expr -> MOD OF expr AN expr .)
    NUMBAR          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    NOOB            reduce using rule 68 (expr -> MOD OF expr AN expr .)
    BUKKIT          reduce using rule 68 (expr -> MOD OF expr AN expr .)
    EXCLAMATION     reduce using rule 68 (expr -> MOD OF expr AN expr .)


state 170

    (69) expr -> BIGGR OF expr AN expr .

    NEWLINE         reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    COMMA           reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    AN              reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    MKAY            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    I               reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    SIZE            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    ABSLUT          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    SUM             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    DIFF            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    PRODUKT         reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    QUOSHUNT        reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    MOD             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    BIGGR           reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    SMALLR          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    BOTH            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    EITHER          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    WON             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    NOT             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    ALL             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    ANY             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    DIFFRINT        reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    SMOOSH          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    MAEK            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    ID              reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    IT              reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    STRING          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    FLOAT           reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    INTEGER         reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    WIN             reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    FAIL            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    DICT            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    A               reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    YARN            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    NUMBR           reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    NUMBAR          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    NOOB            reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    BUKKIT          reduce using rule 69 (expr -> BIGGR OF expr AN expr .)
    EXCLAMATION     reduce using rule 69 (expr -> BIGGR OF expr AN expr .)


state 171

    (70) expr -> SMALLR OF expr AN expr .

    NEWLINE         reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    COMMA           reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    AN              reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    MKAY            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    I               reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    SIZE            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    ABSLUT          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    SUM             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    DIFF            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    PRODUKT         reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    QUOSHUNT        reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    MOD             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    BIGGR           reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    SMALLR          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    BOTH            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    EITHER          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    WON             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    NOT             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    ALL             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    ANY             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    DIFFRINT        reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    SMOOSH          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    MAEK            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    ID              reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    IT              reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    STRING          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    FLOAT           reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    INTEGER         reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    WIN             reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    FAIL            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    DICT            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    A               reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    YARN            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    NUMBR           reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    NUMBAR          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    NOOB            reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    BUKKIT          reduce using rule 70 (expr -> SMALLR OF expr AN expr .)
    EXCLAMATION     reduce using rule 70 (expr -> SMALLR OF expr AN expr .)


state 172

    (71) expr -> BOTH OF expr AN expr .

    NEWLINE         reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    COMMA           reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    AN              reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    MKAY            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    I               reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    SIZE            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    ABSLUT          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    SUM             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    DIFF            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    PRODUKT         reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    QUOSHUNT        reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    MOD             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    BIGGR           reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    SMALLR          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    BOTH            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    EITHER          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    WON             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    NOT             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    ALL             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    ANY             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    DIFFRINT        reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    SMOOSH          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    MAEK            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    ID              reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    IT              reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    STRING          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    FLOAT           reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    INTEGER         reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    WIN             reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    FAIL            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    DICT            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    A               reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    YARN            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    NUMBR           reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    NUMBAR          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    NOOB            reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    BUKKIT          reduce using rule 71 (expr -> BOTH OF expr AN expr .)
    EXCLAMATION     reduce using rule 71 (expr -> BOTH OF expr AN expr .)


state 173

    (79) expr -> BOTH SAEM expr AN expr .

    NEWLINE         reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    COMMA           reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    AN              reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    MKAY            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    I               reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    SIZE            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    ABSLUT          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    SUM             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    DIFF            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    PRODUKT         reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    QUOSHUNT        reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    MOD             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    BIGGR           reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    SMALLR          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    BOTH            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    EITHER          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    WON             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    NOT             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    ALL             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    ANY             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    DIFFRINT        reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    SMOOSH          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    MAEK            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    ID              reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    IT              reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    STRING          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    FLOAT           reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    INTEGER         reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    WIN             reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    FAIL            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    DICT            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    A               reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    YARN            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    NUMBR           reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    NUMBAR          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    NOOB            reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    BUKKIT          reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)
    EXCLAMATION     reduce using rule 79 (expr -> BOTH SAEM expr AN expr .)


state 174

    (72) expr -> EITHER OF expr AN expr .

    NEWLINE         reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    COMMA           reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    AN              reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    MKAY            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    I               reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    SIZE            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    ABSLUT          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    SUM             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    DIFF            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    PRODUKT         reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    QUOSHUNT        reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    MOD             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    BIGGR           reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    SMALLR          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    BOTH            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    EITHER          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    WON             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    NOT             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    ALL             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    ANY             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    DIFFRINT        reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    SMOOSH          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    MAEK            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    ID              reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    IT              reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    STRING          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    FLOAT           reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    INTEGER         reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    WIN             reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    FAIL            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    DICT            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    A               reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    YARN            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    NUMBR           reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    NUMBAR          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    NOOB            reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    BUKKIT          reduce using rule 72 (expr -> EITHER OF expr AN expr .)
    EXCLAMATION     reduce using rule 72 (expr -> EITHER OF expr AN expr .)


state 175

    (73) expr -> WON OF expr AN expr .

    NEWLINE         reduce using rule 73 (expr -> WON OF expr AN expr .)
    COMMA           reduce using rule 73 (expr -> WON OF expr AN expr .)
    AN              reduce using rule 73 (expr -> WON OF expr AN expr .)
    MKAY            reduce using rule 73 (expr -> WON OF expr AN expr .)
    I               reduce using rule 73 (expr -> WON OF expr AN expr .)
    SIZE            reduce using rule 73 (expr -> WON OF expr AN expr .)
    ABSLUT          reduce using rule 73 (expr -> WON OF expr AN expr .)
    SUM             reduce using rule 73 (expr -> WON OF expr AN expr .)
    DIFF            reduce using rule 73 (expr -> WON OF expr AN expr .)
    PRODUKT         reduce using rule 73 (expr -> WON OF expr AN expr .)
    QUOSHUNT        reduce using rule 73 (expr -> WON OF expr AN expr .)
    MOD             reduce using rule 73 (expr -> WON OF expr AN expr .)
    BIGGR           reduce using rule 73 (expr -> WON OF expr AN expr .)
    SMALLR          reduce using rule 73 (expr -> WON OF expr AN expr .)
    BOTH            reduce using rule 73 (expr -> WON OF expr AN expr .)
    EITHER          reduce using rule 73 (expr -> WON OF expr AN expr .)
    WON             reduce using rule 73 (expr -> WON OF expr AN expr .)
    NOT             reduce using rule 73 (expr -> WON OF expr AN expr .)
    ALL             reduce using rule 73 (expr -> WON OF expr AN expr .)
    ANY             reduce using rule 73 (expr -> WON OF expr AN expr .)
    DIFFRINT        reduce using rule 73 (expr -> WON OF expr AN expr .)
    SMOOSH          reduce using rule 73 (expr -> WON OF expr AN expr .)
    MAEK            reduce using rule 73 (expr -> WON OF expr AN expr .)
    ID              reduce using rule 73 (expr -> WON OF expr AN expr .)
    IT              reduce using rule 73 (expr -> WON OF expr AN expr .)
    STRING          reduce using rule 73 (expr -> WON OF expr AN expr .)
    FLOAT           reduce using rule 73 (expr -> WON OF expr AN expr .)
    INTEGER         reduce using rule 73 (expr -> WON OF expr AN expr .)
    WIN             reduce using rule 73 (expr -> WON OF expr AN expr .)
    FAIL            reduce using rule 73 (expr -> WON OF expr AN expr .)
    DICT            reduce using rule 73 (expr -> WON OF expr AN expr .)
    A               reduce using rule 73 (expr -> WON OF expr AN expr .)
    YARN            reduce using rule 73 (expr -> WON OF expr AN expr .)
    NUMBR           reduce using rule 73 (expr -> WON OF expr AN expr .)
    NUMBAR          reduce using rule 73 (expr -> WON OF expr AN expr .)
    NOOB            reduce using rule 73 (expr -> WON OF expr AN expr .)
    BUKKIT          reduce using rule 73 (expr -> WON OF expr AN expr .)
    EXCLAMATION     reduce using rule 73 (expr -> WON OF expr AN expr .)


state 176

    (21) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA . RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC

    RLY             shift and go to state 188


state 177

    (42) function -> HOW IZ I ID YR . sep_yr_args NEWLINE statements IF U SAY SO
    (40) sep_yr_args -> . sep_yr_args AN YR expr
    (41) sep_yr_args -> . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    sep_yr_args                    shift and go to state 189
    expr                           shift and go to state 163
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 178

    (43) function -> HOW IZ I ID NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 190
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 179

    (16) loop -> IM IN YR variable operation . YR variable condition expr NEWLINE statements IM OUTTA YR variable

    YR              shift and go to state 191


state 180

    (17) operation -> UPPIN .

    YR              reduce using rule 17 (operation -> UPPIN .)


state 181

    (18) operation -> NERFIN .

    YR              reduce using rule 18 (operation -> NERFIN .)


state 182

    (34) cast -> variable R MAEK variable A type .

    NEWLINE         reduce using rule 34 (cast -> variable R MAEK variable A type .)
    COMMA           reduce using rule 34 (cast -> variable R MAEK variable A type .)


state 183

    (30) assign_bukkit -> variable HAS A variable ITZ expr .

    NEWLINE         reduce using rule 30 (assign_bukkit -> variable HAS A variable ITZ expr .)
    COMMA           reduce using rule 30 (assign_bukkit -> variable HAS A variable ITZ expr .)


state 184

    (44) expr -> I IZ ID YR sep_yr_args MKAY .

    NEWLINE         reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    COMMA           reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    AN              reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MKAY            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    I               reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SIZE            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ABSLUT          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SUM             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DIFF            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    PRODUKT         reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    QUOSHUNT        reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MOD             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BIGGR           reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SMALLR          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BOTH            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    EITHER          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    WON             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NOT             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ALL             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ANY             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DIFFRINT        reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    SMOOSH          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    MAEK            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    ID              reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    IT              reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    STRING          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    FLOAT           reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    INTEGER         reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    WIN             reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    FAIL            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    DICT            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    A               reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    YARN            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NUMBR           reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NUMBAR          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    NOOB            reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    BUKKIT          reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)
    EXCLAMATION     reduce using rule 44 (expr -> I IZ ID YR sep_yr_args MKAY .)


state 185

    (40) sep_yr_args -> sep_yr_args AN . YR expr

    YR              shift and go to state 192


state 186

    (29) decl -> I HAS A variable ITZ A . type
    (46) type -> . YARN
    (47) type -> . NUMBR
    (48) type -> . NUMBAR
    (49) type -> . NOOB
    (50) type -> . BUKKIT

    YARN            shift and go to state 123
    NUMBR           shift and go to state 124
    NUMBAR          shift and go to state 125
    NOOB            shift and go to state 126
    BUKKIT          shift and go to state 127

    type                           shift and go to state 193

state 187

    (28) decl -> I HAS A variable ITZ expr .

    NEWLINE         reduce using rule 28 (decl -> I HAS A variable ITZ expr .)
    COMMA           reduce using rule 28 (decl -> I HAS A variable ITZ expr .)


state 188

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY . NEWLINE statements elifs NO WAI NEWLINE statements OIC

    NEWLINE         shift and go to state 194


state 189

    (42) function -> HOW IZ I ID YR sep_yr_args . NEWLINE statements IF U SAY SO
    (40) sep_yr_args -> sep_yr_args . AN YR expr

    NEWLINE         shift and go to state 195
    AN              shift and go to state 185


state 190

    (43) function -> HOW IZ I ID NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    IF              shift and go to state 196
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 191

    (16) loop -> IM IN YR variable operation YR . variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 197

state 192

    (40) sep_yr_args -> sep_yr_args AN YR . expr
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 198
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 193

    (29) decl -> I HAS A variable ITZ A type .

    NEWLINE         reduce using rule 29 (decl -> I HAS A variable ITZ A type .)
    COMMA           reduce using rule 29 (decl -> I HAS A variable ITZ A type .)


state 194

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE . statements elifs NO WAI NEWLINE statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 199
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 195

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE . statements IF U SAY SO
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 200
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 196

    (43) function -> HOW IZ I ID NEWLINE statements IF . U SAY SO

    U               shift and go to state 201


state 197

    (16) loop -> IM IN YR variable operation YR variable . condition expr NEWLINE statements IM OUTTA YR variable
    (19) condition -> . TIL
    (20) condition -> . WILE

    TIL             shift and go to state 203
    WILE            shift and go to state 204

    condition                      shift and go to state 202

state 198

    (40) sep_yr_args -> sep_yr_args AN YR expr .

    MKAY            reduce using rule 40 (sep_yr_args -> sep_yr_args AN YR expr .)
    AN              reduce using rule 40 (sep_yr_args -> sep_yr_args AN YR expr .)
    NEWLINE         reduce using rule 40 (sep_yr_args -> sep_yr_args AN YR expr .)


state 199

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . NO WAI NEWLINE statements OIC
    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . OIC
    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements . elifs NO WAI NEWLINE statements OIC
    (2) statements -> statements . statement
    (24) elifs -> . elifs elif
    (25) elifs -> . elif
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (26) elif -> . MEBBE expr NEWLINE statements
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NO              shift and go to state 205
    OIC             shift and go to state 206
    MEBBE           shift and go to state 209
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    elifs                          shift and go to state 207
    statement                      shift and go to state 54
    elif                           shift and go to state 208
    command                        shift and go to state 9
    expr                           shift and go to state 11
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 200

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements . IF U SAY SO
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    IF              shift and go to state 210
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 201

    (43) function -> HOW IZ I ID NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 211


state 202

    (16) loop -> IM IN YR variable operation YR variable condition . expr NEWLINE statements IM OUTTA YR variable
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 77
    expr                           shift and go to state 212
    value                          shift and go to state 25

state 203

    (19) condition -> TIL .

    I               reduce using rule 19 (condition -> TIL .)
    SIZE            reduce using rule 19 (condition -> TIL .)
    ABSLUT          reduce using rule 19 (condition -> TIL .)
    SUM             reduce using rule 19 (condition -> TIL .)
    DIFF            reduce using rule 19 (condition -> TIL .)
    PRODUKT         reduce using rule 19 (condition -> TIL .)
    QUOSHUNT        reduce using rule 19 (condition -> TIL .)
    MOD             reduce using rule 19 (condition -> TIL .)
    BIGGR           reduce using rule 19 (condition -> TIL .)
    SMALLR          reduce using rule 19 (condition -> TIL .)
    BOTH            reduce using rule 19 (condition -> TIL .)
    EITHER          reduce using rule 19 (condition -> TIL .)
    WON             reduce using rule 19 (condition -> TIL .)
    NOT             reduce using rule 19 (condition -> TIL .)
    ALL             reduce using rule 19 (condition -> TIL .)
    ANY             reduce using rule 19 (condition -> TIL .)
    DIFFRINT        reduce using rule 19 (condition -> TIL .)
    SMOOSH          reduce using rule 19 (condition -> TIL .)
    MAEK            reduce using rule 19 (condition -> TIL .)
    ID              reduce using rule 19 (condition -> TIL .)
    IT              reduce using rule 19 (condition -> TIL .)
    STRING          reduce using rule 19 (condition -> TIL .)
    FLOAT           reduce using rule 19 (condition -> TIL .)
    INTEGER         reduce using rule 19 (condition -> TIL .)
    WIN             reduce using rule 19 (condition -> TIL .)
    FAIL            reduce using rule 19 (condition -> TIL .)
    DICT            reduce using rule 19 (condition -> TIL .)


state 204

    (20) condition -> WILE .

    I               reduce using rule 20 (condition -> WILE .)
    SIZE            reduce using rule 20 (condition -> WILE .)
    ABSLUT          reduce using rule 20 (condition -> WILE .)
    SUM             reduce using rule 20 (condition -> WILE .)
    DIFF            reduce using rule 20 (condition -> WILE .)
    PRODUKT         reduce using rule 20 (condition -> WILE .)
    QUOSHUNT        reduce using rule 20 (condition -> WILE .)
    MOD             reduce using rule 20 (condition -> WILE .)
    BIGGR           reduce using rule 20 (condition -> WILE .)
    SMALLR          reduce using rule 20 (condition -> WILE .)
    BOTH            reduce using rule 20 (condition -> WILE .)
    EITHER          reduce using rule 20 (condition -> WILE .)
    WON             reduce using rule 20 (condition -> WILE .)
    NOT             reduce using rule 20 (condition -> WILE .)
    ALL             reduce using rule 20 (condition -> WILE .)
    ANY             reduce using rule 20 (condition -> WILE .)
    DIFFRINT        reduce using rule 20 (condition -> WILE .)
    SMOOSH          reduce using rule 20 (condition -> WILE .)
    MAEK            reduce using rule 20 (condition -> WILE .)
    ID              reduce using rule 20 (condition -> WILE .)
    IT              reduce using rule 20 (condition -> WILE .)
    STRING          reduce using rule 20 (condition -> WILE .)
    FLOAT           reduce using rule 20 (condition -> WILE .)
    INTEGER         reduce using rule 20 (condition -> WILE .)
    WIN             reduce using rule 20 (condition -> WILE .)
    FAIL            reduce using rule 20 (condition -> WILE .)
    DICT            reduce using rule 20 (condition -> WILE .)


state 205

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 213


state 206

    (22) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .

    NEWLINE         reduce using rule 22 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)
    COMMA           reduce using rule 22 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC .)


state 207

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs . NO WAI NEWLINE statements OIC
    (24) elifs -> elifs . elif
    (26) elif -> . MEBBE expr NEWLINE statements

    NO              shift and go to state 214
    MEBBE           shift and go to state 209

    elif                           shift and go to state 215

state 208

    (25) elifs -> elif .

    NO              reduce using rule 25 (elifs -> elif .)
    MEBBE           reduce using rule 25 (elifs -> elif .)


state 209

    (26) elif -> MEBBE . expr NEWLINE statements
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    I               shift and go to state 78
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 216
    variable                       shift and go to state 77
    value                          shift and go to state 25

state 210

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF . U SAY SO

    U               shift and go to state 217


state 211

    (43) function -> HOW IZ I ID NEWLINE statements IF U SAY . SO

    SO              shift and go to state 218


state 212

    (16) loop -> IM IN YR variable operation YR variable condition expr . NEWLINE statements IM OUTTA YR variable

    NEWLINE         shift and go to state 219


state 213

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 220


state 214

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO . WAI NEWLINE statements OIC

    WAI             shift and go to state 221


state 215

    (24) elifs -> elifs elif .

    NO              reduce using rule 24 (elifs -> elifs elif .)
    MEBBE           reduce using rule 24 (elifs -> elifs elif .)


state 216

    (26) elif -> MEBBE expr . NEWLINE statements

    NEWLINE         shift and go to state 222


state 217

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U . SAY SO

    SAY             shift and go to state 223


state 218

    (43) function -> HOW IZ I ID NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 43 (function -> HOW IZ I ID NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 43 (function -> HOW IZ I ID NEWLINE statements IF U SAY SO .)


state 219

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE . statements IM OUTTA YR variable
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 20
    expr                           shift and go to state 11
    statements                     shift and go to state 224
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    value                          shift and go to state 25

state 220

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 225
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 221

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI . NEWLINE statements OIC

    NEWLINE         shift and go to state 226


state 222

    (26) elif -> MEBBE expr NEWLINE . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 11
    statements                     shift and go to state 227
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 223

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY . SO

    SO              shift and go to state 228


state 224

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements . IM OUTTA YR variable
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    IM              shift and go to state 229
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    variable                       shift and go to state 20
    expr                           shift and go to state 11
    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    value                          shift and go to state 25

state 225

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    OIC             shift and go to state 230
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 226

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE . statements OIC
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statements                     shift and go to state 231
    statement                      shift and go to state 8
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 227

    (26) elif -> MEBBE expr NEWLINE statements .
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    NO              reduce using rule 26 (elif -> MEBBE expr NEWLINE statements .)
    MEBBE           reduce using rule 26 (elif -> MEBBE expr NEWLINE statements .)
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    expr                           shift and go to state 11
    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 228

    (42) function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .

    NEWLINE         reduce using rule 42 (function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .)
    COMMA           reduce using rule 42 (function -> HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO .)


state 229

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM . OUTTA YR variable
    (16) loop -> IM . IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable

    OUTTA           shift and go to state 232
    IN              shift and go to state 91


state 230

    (21) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 21 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 21 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC .)


state 231

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements . OIC
    (2) statements -> statements . statement
    (4) statement -> . command NEWLINE
    (5) statement -> . command COMMA
    (6) command -> . empty
    (7) command -> . expr
    (8) command -> . call
    (9) command -> . cast
    (10) command -> . decl
    (11) command -> . assign_bukkit
    (12) command -> . assign
    (13) command -> . if_else
    (14) command -> . function
    (15) command -> . loop
    (88) empty -> .
    (32) expr -> . variable APOSTROPHE_Z variable
    (44) expr -> . I IZ ID YR sep_yr_args MKAY
    (45) expr -> . I IZ ID
    (60) expr -> . SIZE OF expr
    (61) expr -> . ABSLUT OF expr
    (62) expr -> . value
    (63) expr -> . variable
    (64) expr -> . SUM OF expr AN expr
    (65) expr -> . DIFF OF expr AN expr
    (66) expr -> . PRODUKT OF expr AN expr
    (67) expr -> . QUOSHUNT OF expr AN expr
    (68) expr -> . MOD OF expr AN expr
    (69) expr -> . BIGGR OF expr AN expr
    (70) expr -> . SMALLR OF expr AN expr
    (71) expr -> . BOTH OF expr AN expr
    (72) expr -> . EITHER OF expr AN expr
    (73) expr -> . WON OF expr AN expr
    (74) expr -> . NOT expr
    (75) expr -> . ALL OF sep_args MKAY
    (76) expr -> . ANY OF sep_args MKAY
    (77) expr -> . ALL OF args MKAY
    (78) expr -> . ANY OF args MKAY
    (79) expr -> . BOTH SAEM expr AN expr
    (80) expr -> . DIFFRINT expr AN expr
    (81) expr -> . SMOOSH sep_args MKAY
    (82) expr -> . SMOOSH args MKAY
    (83) expr -> . MAEK expr A type
    (84) expr -> . MAEK expr type
    (57) call -> . VISIBLE args
    (58) call -> . VISIBLE args EXCLAMATION
    (59) call -> . GIMMEH variable
    (33) cast -> . variable IS NOW A type
    (34) cast -> . variable R MAEK variable A type
    (35) cast -> . variable R MAEK variable type
    (27) decl -> . I HAS A variable
    (28) decl -> . I HAS A variable ITZ expr
    (29) decl -> . I HAS A variable ITZ A type
    (30) assign_bukkit -> . variable HAS A variable ITZ expr
    (31) assign -> . variable R expr
    (21) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements NO WAI NEWLINE statements OIC
    (22) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements OIC
    (23) if_else -> . O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC
    (42) function -> . HOW IZ I ID YR sep_yr_args NEWLINE statements IF U SAY SO
    (43) function -> . HOW IZ I ID NEWLINE statements IF U SAY SO
    (16) loop -> . IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable
    (85) variable -> . ID
    (86) variable -> . IT
    (51) value -> . STRING
    (52) value -> . FLOAT
    (53) value -> . INTEGER
    (54) value -> . WIN
    (55) value -> . FAIL
    (56) value -> . DICT

    OIC             shift and go to state 233
    NEWLINE         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    I               shift and go to state 21
    SIZE            shift and go to state 23
    ABSLUT          shift and go to state 24
    SUM             shift and go to state 26
    DIFF            shift and go to state 27
    PRODUKT         shift and go to state 28
    QUOSHUNT        shift and go to state 29
    MOD             shift and go to state 30
    BIGGR           shift and go to state 31
    SMALLR          shift and go to state 32
    BOTH            shift and go to state 33
    EITHER          shift and go to state 34
    WON             shift and go to state 35
    NOT             shift and go to state 36
    ALL             shift and go to state 37
    ANY             shift and go to state 38
    DIFFRINT        shift and go to state 39
    SMOOSH          shift and go to state 40
    MAEK            shift and go to state 41
    VISIBLE         shift and go to state 42
    GIMMEH          shift and go to state 43
    O               shift and go to state 44
    HOW             shift and go to state 45
    IM              shift and go to state 46
    ID              shift and go to state 22
    IT              shift and go to state 47
    STRING          shift and go to state 48
    FLOAT           shift and go to state 6
    INTEGER         shift and go to state 49
    WIN             shift and go to state 50
    FAIL            shift and go to state 51
    DICT            shift and go to state 52

    statement                      shift and go to state 54
    command                        shift and go to state 9
    empty                          shift and go to state 10
    expr                           shift and go to state 11
    call                           shift and go to state 12
    cast                           shift and go to state 13
    decl                           shift and go to state 14
    assign_bukkit                  shift and go to state 15
    assign                         shift and go to state 16
    if_else                        shift and go to state 17
    function                       shift and go to state 18
    loop                           shift and go to state 19
    variable                       shift and go to state 20
    value                          shift and go to state 25

state 232

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA . YR variable

    YR              shift and go to state 234


state 233

    (23) if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .

    NEWLINE         reduce using rule 23 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)
    COMMA           reduce using rule 23 (if_else -> O RLY QUESTION NEWLINE YA RLY NEWLINE statements elifs NO WAI NEWLINE statements OIC .)


state 234

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR . variable
    (85) variable -> . ID
    (86) variable -> . IT

    ID              shift and go to state 22
    IT              shift and go to state 47

    variable                       shift and go to state 235

state 235

    (16) loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .

    NEWLINE         reduce using rule 16 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)
    COMMA           reduce using rule 16 (loop -> IM IN YR variable operation YR variable condition expr NEWLINE statements IM OUTTA YR variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for A in state 133 resolved as shift
WARNING: shift/reduce conflict for YARN in state 133 resolved as shift
WARNING: shift/reduce conflict for NUMBR in state 133 resolved as shift
WARNING: shift/reduce conflict for NUMBAR in state 133 resolved as shift
WARNING: shift/reduce conflict for NOOB in state 133 resolved as shift
WARNING: shift/reduce conflict for BUKKIT in state 133 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (args -> expr)
WARNING: rejected rule (sep_args -> expr) in state 84
